{
    "openapi": "3.0.0",
    "servers": [
        {
            "url": "https://guardduty.amazonaws.com/"
        },
        {
            "url": "http://guardduty.amazonaws.com/"
        }
    ],
    "x-hasEquivalentPaths": true,
    "info": {
        "contact": {
            "email": "mike.ralphson@gmail.com",
            "name": "Mike Ralphson",
            "url": "https://github.com/mermade/aws2openapi",
            "x-twitter": "PermittedSoc"
        },
        "description": "Assess, monitor, manage, and remediate security issues across your AWS infrastructure, applications, and data.",
        "license": {
            "name": "Apache 2.0 License",
            "url": "http://www.apache.org/licenses/"
        },
        "termsOfService": "https://aws.amazon.com/service-terms/",
        "title": "Amazon GuardDuty",
        "version": "2017-11-28",
        "x-apiClientRegistration": {
            "url": "https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct"
        },
        "x-apisguru-categories": [
            "cloud"
        ],
        "x-logo": {
            "backgroundColor": "#FFFFFF",
            "url": "https://api.apis.guru/v2/cache/logo/https_twitter.com_awscloud_profile_image.jpeg"
        },
        "x-origin": [
            {
                "contentType": "application/json",
                "converter": {
                    "url": "https://github.com/mermade/aws2openapi",
                    "version": "1.0.0"
                },
                "url": "https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/guardduty-2017-11-28.normal.json",
                "x-apisguru-direct": true
            }
        ],
        "x-preferred": true,
        "x-providerName": "amazonaws.com",
        "x-release": "v4",
        "x-serviceName": "guardduty"
    },
    "externalDocs": {
        "description": "Amazon Web Services documentation",
        "url": "https://aws.amazon.com/guardduty/"
    },
    "security": [
        {
            "hmac": []
        }
    ],
    "paths": {
        "/detector": {
            "get": {
                "description": "Lists detectorIds of all the existing Amazon GuardDuty detector resources.",
                "operationId": "ListDetectors",
                "parameters": [
                    {
                        "description": "Pagination limit",
                        "in": "query",
                        "name": "MaxResults",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Pagination token",
                        "in": "query",
                        "name": "NextToken",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "DetectorIds": {
                                            "description": "A list of detector Ids.",
                                            "items": {
                                                "description": "The unique identifier for a detector.",
                                                "type": "string"
                                            },
                                            "type": "array"
                                        },
                                        "NextToken": {
                                            "description": "You can use this parameter when paginating results. Set the value of this parameter to null on your first call to the list action. For subsequent calls to the action fill nextToken in the request with the value of NextToken from the previous response to continue listing data.",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "BadRequestException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "InternalServerErrorException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {},
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            },
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "Creates a single Amazon GuardDuty detector. A detector is an object that represents the GuardDuty service. A detector must be created in order for GuardDuty to become operational.",
                "operationId": "CreateDetector",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "DetectorId": {
                                            "description": "The unique ID of the created detector.",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "BadRequestException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "InternalServerErrorException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "description": "CreateDetector request body.",
                                "properties": {
                                    "ClientToken": {
                                        "description": "The idempotency token for the create request.",
                                        "maxLength": 64,
                                        "minLength": 0,
                                        "type": "string"
                                    },
                                    "Enable": {
                                        "description": "A boolean value that specifies whether the detector is to be enabled.",
                                        "type": "boolean"
                                    },
                                    "FindingPublishingFrequency": {
                                        "description": "A enum value that specifies how frequently customer got Finding updates published.",
                                        "enum": [
                                            "FIFTEEN_MINUTES",
                                            "ONE_HOUR",
                                            "SIX_HOURS"
                                        ],
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "Enable"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/detector/{detectorId}": {
            "delete": {
                "description": "Deletes a Amazon GuardDuty detector specified by the detector ID.",
                "operationId": "DeleteDetector",
                "parameters": [
                    {
                        "in": "path",
                        "name": "detectorId",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {},
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "BadRequestException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "InternalServerErrorException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {},
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            },
            "get": {
                "description": "Retrieves an Amazon GuardDuty detector specified by the detectorId.",
                "operationId": "GetDetector",
                "parameters": [
                    {
                        "in": "path",
                        "name": "detectorId",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "CreatedAt": {
                                            "description": "The first time a resource was created. The format will be ISO-8601.",
                                            "type": "string"
                                        },
                                        "FindingPublishingFrequency": {
                                            "description": "A enum value that specifies how frequently customer got Finding updates published.",
                                            "enum": [
                                                "FIFTEEN_MINUTES",
                                                "ONE_HOUR",
                                                "SIX_HOURS"
                                            ],
                                            "type": "string"
                                        },
                                        "ServiceRole": {
                                            "description": "Customer serviceRole name or ARN for accessing customer resources",
                                            "type": "string"
                                        },
                                        "Status": {
                                            "description": "The status of detector.",
                                            "enum": [
                                                "ENABLED",
                                                "DISABLED"
                                            ],
                                            "type": "string"
                                        },
                                        "UpdatedAt": {
                                            "description": "The first time a resource was created. The format will be ISO-8601.",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "BadRequestException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "InternalServerErrorException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {},
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            },
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "Updates an Amazon GuardDuty detector specified by the detectorId.",
                "operationId": "UpdateDetector",
                "parameters": [
                    {
                        "in": "path",
                        "name": "detectorId",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {},
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "BadRequestException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "InternalServerErrorException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "description": "UpdateDetector request body.",
                                "properties": {
                                    "Enable": {
                                        "description": "Updated boolean value for the detector that specifies whether the detector is enabled.",
                                        "type": "boolean"
                                    },
                                    "FindingPublishingFrequency": {
                                        "description": "A enum value that specifies how frequently customer got Finding updates published.",
                                        "enum": [
                                            "FIFTEEN_MINUTES",
                                            "ONE_HOUR",
                                            "SIX_HOURS"
                                        ],
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/detector/{detectorId}/filter": {
            "get": {
                "description": "Returns a paginated list of the current filters.",
                "operationId": "ListFilters",
                "parameters": [
                    {
                        "description": "Pagination limit",
                        "in": "query",
                        "name": "MaxResults",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Pagination token",
                        "in": "query",
                        "name": "NextToken",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "path",
                        "name": "detectorId",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "FilterNames": {
                                            "description": "A list of filter names",
                                            "items": {
                                                "description": "The unique identifier for a filter",
                                                "type": "string"
                                            },
                                            "type": "array"
                                        },
                                        "NextToken": {
                                            "description": "You can use this parameter when paginating results. Set the value of this parameter to null on your first call to the list action. For subsequent calls to the action fill nextToken in the request with the value of NextToken from the previous response to continue listing data.",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "BadRequestException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "InternalServerErrorException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {},
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            },
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "Creates a filter using the specified finding criteria.",
                "operationId": "CreateFilter",
                "parameters": [
                    {
                        "in": "path",
                        "name": "detectorId",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "Name": {
                                            "description": "The name of the successfully created filter.",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "BadRequestException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "InternalServerErrorException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "description": "CreateFilterRequest request body.",
                                "properties": {
                                    "Action": {
                                        "description": "Specifies the action that is to be applied to the findings that match the filter.",
                                        "enum": [
                                            "NOOP",
                                            "ARCHIVE"
                                        ],
                                        "type": "string"
                                    },
                                    "ClientToken": {
                                        "description": "The idempotency token for the create request.",
                                        "maxLength": 64,
                                        "minLength": 0,
                                        "type": "string"
                                    },
                                    "Description": {
                                        "description": "The description of the filter.",
                                        "type": "string"
                                    },
                                    "FindingCriteria": {
                                        "description": "Represents the criteria to be used in the filter for querying findings.",
                                        "properties": {
                                            "Criterion": {
                                                "description": "Represents a map of finding properties that match specified conditions and values when querying findings.",
                                                "items": {
                                                    "properties": {
                                                        "key": {
                                                            "type": "string"
                                                        },
                                                        "value": {
                                                            "description": "Finding attribute (for example, accountId) for which conditions and values must be specified when querying findings.",
                                                            "properties": {
                                                                "Eq": {
                                                                    "description": "Represents the equal condition to be applied to a single field when querying for findings.",
                                                                    "items": {
                                                                        "type": "string"
                                                                    },
                                                                    "type": "array"
                                                                },
                                                                "Gt": {
                                                                    "description": "Represents the greater than condition to be applied to a single field when querying for findings.",
                                                                    "type": "integer"
                                                                },
                                                                "Gte": {
                                                                    "description": "Represents the greater than equal condition to be applied to a single field when querying for findings.",
                                                                    "type": "integer"
                                                                },
                                                                "Lt": {
                                                                    "description": "Represents the less than condition to be applied to a single field when querying for findings.",
                                                                    "type": "integer"
                                                                },
                                                                "Lte": {
                                                                    "description": "Represents the less than equal condition to be applied to a single field when querying for findings.",
                                                                    "type": "integer"
                                                                },
                                                                "Neq": {
                                                                    "description": "Represents the not equal condition to be applied to a single field when querying for findings.",
                                                                    "items": {
                                                                        "type": "string"
                                                                    },
                                                                    "type": "array"
                                                                }
                                                            },
                                                            "type": "object"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "type": "array"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "Name": {
                                        "description": "The name of the filter.",
                                        "type": "string"
                                    },
                                    "Rank": {
                                        "description": "Specifies the position of the filter in the list of current filters. Also specifies the order in which this filter is applied to the findings.",
                                        "type": "integer"
                                    }
                                },
                                "required": [
                                    "FindingCriteria",
                                    "Name"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/detector/{detectorId}/filter/{filterName}": {
            "delete": {
                "description": "Deletes the filter specified by the filter name.",
                "operationId": "DeleteFilter",
                "parameters": [
                    {
                        "in": "path",
                        "name": "detectorId",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "path",
                        "name": "filterName",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {},
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "BadRequestException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "InternalServerErrorException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {},
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            },
            "get": {
                "description": "Returns the details of the filter specified by the filter name.",
                "operationId": "GetFilter",
                "parameters": [
                    {
                        "in": "path",
                        "name": "detectorId",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "path",
                        "name": "filterName",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "Action": {
                                            "description": "Specifies the action that is to be applied to the findings that match the filter.",
                                            "enum": [
                                                "NOOP",
                                                "ARCHIVE"
                                            ],
                                            "type": "string"
                                        },
                                        "Description": {
                                            "description": "The description of the filter.",
                                            "type": "string"
                                        },
                                        "FindingCriteria": {
                                            "description": "Represents the criteria to be used in the filter for querying findings.",
                                            "properties": {
                                                "Criterion": {
                                                    "description": "Represents a map of finding properties that match specified conditions and values when querying findings.",
                                                    "items": {
                                                        "properties": {
                                                            "key": {
                                                                "type": "string"
                                                            },
                                                            "value": {
                                                                "description": "Finding attribute (for example, accountId) for which conditions and values must be specified when querying findings.",
                                                                "properties": {
                                                                    "Eq": {
                                                                        "description": "Represents the equal condition to be applied to a single field when querying for findings.",
                                                                        "items": {
                                                                            "type": "string"
                                                                        },
                                                                        "type": "array"
                                                                    },
                                                                    "Gt": {
                                                                        "description": "Represents the greater than condition to be applied to a single field when querying for findings.",
                                                                        "type": "integer"
                                                                    },
                                                                    "Gte": {
                                                                        "description": "Represents the greater than equal condition to be applied to a single field when querying for findings.",
                                                                        "type": "integer"
                                                                    },
                                                                    "Lt": {
                                                                        "description": "Represents the less than condition to be applied to a single field when querying for findings.",
                                                                        "type": "integer"
                                                                    },
                                                                    "Lte": {
                                                                        "description": "Represents the less than equal condition to be applied to a single field when querying for findings.",
                                                                        "type": "integer"
                                                                    },
                                                                    "Neq": {
                                                                        "description": "Represents the not equal condition to be applied to a single field when querying for findings.",
                                                                        "items": {
                                                                            "type": "string"
                                                                        },
                                                                        "type": "array"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "type": "array"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "Name": {
                                            "description": "The name of the filter.",
                                            "type": "string"
                                        },
                                        "Rank": {
                                            "description": "Specifies the position of the filter in the list of current filters. Also specifies the order in which this filter is applied to the findings.",
                                            "type": "integer"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "BadRequestException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "InternalServerErrorException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {},
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            },
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "Updates the filter specified by the filter name.",
                "operationId": "UpdateFilter",
                "parameters": [
                    {
                        "in": "path",
                        "name": "detectorId",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "path",
                        "name": "filterName",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "Name": {
                                            "description": "The name of the filter.",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "BadRequestException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "InternalServerErrorException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "description": "UpdateFilterRequest request body.",
                                "properties": {
                                    "Action": {
                                        "description": "Specifies the action that is to be applied to the findings that match the filter.",
                                        "enum": [
                                            "NOOP",
                                            "ARCHIVE"
                                        ],
                                        "type": "string"
                                    },
                                    "Description": {
                                        "description": "The description of the filter.",
                                        "type": "string"
                                    },
                                    "FindingCriteria": {
                                        "description": "Represents the criteria to be used in the filter for querying findings.",
                                        "properties": {
                                            "Criterion": {
                                                "description": "Represents a map of finding properties that match specified conditions and values when querying findings.",
                                                "items": {
                                                    "properties": {
                                                        "key": {
                                                            "type": "string"
                                                        },
                                                        "value": {
                                                            "description": "Finding attribute (for example, accountId) for which conditions and values must be specified when querying findings.",
                                                            "properties": {
                                                                "Eq": {
                                                                    "description": "Represents the equal condition to be applied to a single field when querying for findings.",
                                                                    "items": {
                                                                        "type": "string"
                                                                    },
                                                                    "type": "array"
                                                                },
                                                                "Gt": {
                                                                    "description": "Represents the greater than condition to be applied to a single field when querying for findings.",
                                                                    "type": "integer"
                                                                },
                                                                "Gte": {
                                                                    "description": "Represents the greater than equal condition to be applied to a single field when querying for findings.",
                                                                    "type": "integer"
                                                                },
                                                                "Lt": {
                                                                    "description": "Represents the less than condition to be applied to a single field when querying for findings.",
                                                                    "type": "integer"
                                                                },
                                                                "Lte": {
                                                                    "description": "Represents the less than equal condition to be applied to a single field when querying for findings.",
                                                                    "type": "integer"
                                                                },
                                                                "Neq": {
                                                                    "description": "Represents the not equal condition to be applied to a single field when querying for findings.",
                                                                    "items": {
                                                                        "type": "string"
                                                                    },
                                                                    "type": "array"
                                                                }
                                                            },
                                                            "type": "object"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "type": "array"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "Rank": {
                                        "description": "Specifies the position of the filter in the list of current filters. Also specifies the order in which this filter is applied to the findings.",
                                        "type": "integer"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/detector/{detectorId}/findings": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "Lists Amazon GuardDuty findings for the specified detector ID.",
                "operationId": "ListFindings",
                "parameters": [
                    {
                        "description": "Pagination limit",
                        "in": "query",
                        "name": "MaxResults",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Pagination token",
                        "in": "query",
                        "name": "NextToken",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "path",
                        "name": "detectorId",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "FindingIds": {
                                            "description": "The list of the Findings.",
                                            "items": {
                                                "description": "The unique identifier for the Finding",
                                                "type": "string"
                                            },
                                            "type": "array"
                                        },
                                        "NextToken": {
                                            "description": "You can use this parameter when paginating results. Set the value of this parameter to null on your first call to the list action. For subsequent calls to the action fill nextToken in the request with the value of NextToken from the previous response to continue listing data.",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "BadRequestException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "InternalServerErrorException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "description": "ListFindings request body.",
                                "properties": {
                                    "FindingCriteria": {
                                        "description": "Represents the criteria used for querying findings.",
                                        "properties": {
                                            "Criterion": {
                                                "description": "Represents a map of finding properties that match specified conditions and values when querying findings.",
                                                "items": {
                                                    "properties": {
                                                        "key": {
                                                            "type": "string"
                                                        },
                                                        "value": {
                                                            "description": "Finding attribute (for example, accountId) for which conditions and values must be specified when querying findings.",
                                                            "properties": {
                                                                "Eq": {
                                                                    "description": "Represents the equal condition to be applied to a single field when querying for findings.",
                                                                    "items": {
                                                                        "type": "string"
                                                                    },
                                                                    "type": "array"
                                                                },
                                                                "Gt": {
                                                                    "description": "Represents the greater than condition to be applied to a single field when querying for findings.",
                                                                    "type": "integer"
                                                                },
                                                                "Gte": {
                                                                    "description": "Represents the greater than equal condition to be applied to a single field when querying for findings.",
                                                                    "type": "integer"
                                                                },
                                                                "Lt": {
                                                                    "description": "Represents the less than condition to be applied to a single field when querying for findings.",
                                                                    "type": "integer"
                                                                },
                                                                "Lte": {
                                                                    "description": "Represents the less than equal condition to be applied to a single field when querying for findings.",
                                                                    "type": "integer"
                                                                },
                                                                "Neq": {
                                                                    "description": "Represents the not equal condition to be applied to a single field when querying for findings.",
                                                                    "items": {
                                                                        "type": "string"
                                                                    },
                                                                    "type": "array"
                                                                }
                                                            },
                                                            "type": "object"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "type": "array"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "MaxResults": {
                                        "description": "You can use this parameter to indicate the maximum number of items you want in the response. The default value is 50. The maximum value is 50.",
                                        "maximum": 50,
                                        "minimum": 1,
                                        "type": "integer"
                                    },
                                    "NextToken": {
                                        "description": "You can use this parameter when paginating results. Set the value of this parameter to null on your first call to the ListFindings action. For subsequent calls to the action fill nextToken in the request with the value of nextToken from the previous response to continue listing data.",
                                        "type": "string"
                                    },
                                    "SortCriteria": {
                                        "description": "Represents the criteria used for sorting findings.",
                                        "properties": {
                                            "AttributeName": {
                                                "description": "Represents the finding attribute (for example, accountId) by which to sort findings.",
                                                "type": "string"
                                            },
                                            "OrderBy": {
                                                "description": "Order by which the sorted findings are to be displayed.",
                                                "enum": [
                                                    "ASC",
                                                    "DESC"
                                                ],
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/detector/{detectorId}/findings/archive": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "Archives Amazon GuardDuty findings specified by the list of finding IDs.",
                "operationId": "ArchiveFindings",
                "parameters": [
                    {
                        "in": "path",
                        "name": "detectorId",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {},
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "BadRequestException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "InternalServerErrorException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "description": "ArchiveFindings request body.",
                                "properties": {
                                    "FindingIds": {
                                        "description": "IDs of the findings that you want to archive.",
                                        "items": {
                                            "description": "The unique identifier for the Finding",
                                            "type": "string"
                                        },
                                        "type": "array"
                                    }
                                },
                                "required": [
                                    "FindingIds"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/detector/{detectorId}/findings/create": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "Generates example findings of types specified by the list of finding types. If 'NULL' is specified for findingTypes, the API generates example findings of all supported finding types.",
                "operationId": "CreateSampleFindings",
                "parameters": [
                    {
                        "in": "path",
                        "name": "detectorId",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {},
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "BadRequestException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "InternalServerErrorException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "description": "CreateSampleFindings request body.",
                                "properties": {
                                    "FindingTypes": {
                                        "description": "Types of sample findings that you want to generate.",
                                        "items": {
                                            "description": "The finding type for the finding",
                                            "type": "string"
                                        },
                                        "type": "array"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/detector/{detectorId}/findings/feedback": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "Marks specified Amazon GuardDuty findings as useful or not useful.",
                "operationId": "UpdateFindingsFeedback",
                "parameters": [
                    {
                        "in": "path",
                        "name": "detectorId",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {},
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "BadRequestException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "InternalServerErrorException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "description": "UpdateFindingsFeedback request body.",
                                "properties": {
                                    "Comments": {
                                        "description": "Additional feedback about the GuardDuty findings.",
                                        "type": "string"
                                    },
                                    "Feedback": {
                                        "description": "Valid values: USEFUL | NOT_USEFUL",
                                        "enum": [
                                            "USEFUL",
                                            "NOT_USEFUL"
                                        ],
                                        "type": "string"
                                    },
                                    "FindingIds": {
                                        "description": "IDs of the findings that you want to mark as useful or not useful.",
                                        "items": {
                                            "description": "The unique identifier for the Finding",
                                            "type": "string"
                                        },
                                        "type": "array"
                                    }
                                },
                                "required": [
                                    "Feedback",
                                    "FindingIds"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/detector/{detectorId}/findings/get": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "Describes Amazon GuardDuty findings specified by finding IDs.",
                "operationId": "GetFindings",
                "parameters": [
                    {
                        "in": "path",
                        "name": "detectorId",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "Findings": {
                                            "description": "A list of findings.",
                                            "items": {
                                                "description": "Representation of a abnormal or suspicious activity.",
                                                "properties": {
                                                    "AccountId": {
                                                        "description": "AWS account ID where the activity occurred that prompted GuardDuty to generate a finding.",
                                                        "type": "string"
                                                    },
                                                    "Arn": {
                                                        "description": "The ARN of a finding described by the action.",
                                                        "type": "string"
                                                    },
                                                    "Confidence": {
                                                        "description": "The confidence level of a finding.",
                                                        "format": "double",
                                                        "type": "number"
                                                    },
                                                    "CreatedAt": {
                                                        "description": "The time stamp at which a finding was generated.",
                                                        "type": "string"
                                                    },
                                                    "Description": {
                                                        "description": "The description of a finding.",
                                                        "type": "string"
                                                    },
                                                    "Id": {
                                                        "description": "The identifier that corresponds to a finding described by the action.",
                                                        "type": "string"
                                                    },
                                                    "Partition": {
                                                        "description": "The AWS resource partition.",
                                                        "type": "string"
                                                    },
                                                    "Region": {
                                                        "description": "The AWS region where the activity occurred that prompted GuardDuty to generate a finding.",
                                                        "type": "string"
                                                    },
                                                    "Resource": {
                                                        "description": "The AWS resource associated with the activity that prompted GuardDuty to generate a finding.",
                                                        "properties": {
                                                            "AccessKeyDetails": {
                                                                "description": "The IAM access key details (IAM user information) of a user that engaged in the activity that prompted GuardDuty to generate a finding.",
                                                                "properties": {
                                                                    "AccessKeyId": {
                                                                        "description": "Access key ID of the user.",
                                                                        "type": "string"
                                                                    },
                                                                    "PrincipalId": {
                                                                        "description": "The principal ID of the user.",
                                                                        "type": "string"
                                                                    },
                                                                    "UserName": {
                                                                        "description": "The name of the user.",
                                                                        "type": "string"
                                                                    },
                                                                    "UserType": {
                                                                        "description": "The type of the user.",
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            },
                                                            "InstanceDetails": {
                                                                "description": "The information about the EC2 instance associated with the activity that prompted GuardDuty to generate a finding.",
                                                                "properties": {
                                                                    "AvailabilityZone": {
                                                                        "description": "The availability zone of the EC2 instance.",
                                                                        "type": "string"
                                                                    },
                                                                    "IamInstanceProfile": {
                                                                        "description": "The profile information of the EC2 instance.",
                                                                        "properties": {
                                                                            "Arn": {
                                                                                "description": "AWS EC2 instance profile ARN.",
                                                                                "type": "string"
                                                                            },
                                                                            "Id": {
                                                                                "description": "AWS EC2 instance profile ID.",
                                                                                "type": "string"
                                                                            }
                                                                        },
                                                                        "type": "object"
                                                                    },
                                                                    "ImageDescription": {
                                                                        "description": "The image description of the EC2 instance.",
                                                                        "type": "string"
                                                                    },
                                                                    "ImageId": {
                                                                        "description": "The image ID of the EC2 instance.",
                                                                        "type": "string"
                                                                    },
                                                                    "InstanceId": {
                                                                        "description": "The ID of the EC2 instance.",
                                                                        "type": "string"
                                                                    },
                                                                    "InstanceState": {
                                                                        "description": "The state of the EC2 instance.",
                                                                        "type": "string"
                                                                    },
                                                                    "InstanceType": {
                                                                        "description": "The type of the EC2 instance.",
                                                                        "type": "string"
                                                                    },
                                                                    "LaunchTime": {
                                                                        "description": "The launch time of the EC2 instance.",
                                                                        "type": "string"
                                                                    },
                                                                    "NetworkInterfaces": {
                                                                        "description": "The network interface information of the EC2 instance.",
                                                                        "items": {
                                                                            "description": "The network interface information of the EC2 instance.",
                                                                            "properties": {
                                                                                "Ipv6Addresses": {
                                                                                    "description": "A list of EC2 instance IPv6 address information.",
                                                                                    "items": {
                                                                                        "description": "IpV6 address of the EC2 instance.",
                                                                                        "type": "string"
                                                                                    },
                                                                                    "type": "array"
                                                                                },
                                                                                "NetworkInterfaceId": {
                                                                                    "description": "The ID of the network interface",
                                                                                    "type": "string"
                                                                                },
                                                                                "PrivateDnsName": {
                                                                                    "description": "Private DNS name of the EC2 instance.",
                                                                                    "type": "string"
                                                                                },
                                                                                "PrivateIpAddress": {
                                                                                    "description": "Private IP address of the EC2 instance.",
                                                                                    "type": "string"
                                                                                },
                                                                                "PrivateIpAddresses": {
                                                                                    "description": "Other private IP address information of the EC2 instance.",
                                                                                    "items": {
                                                                                        "description": "Other private IP address information of the EC2 instance.",
                                                                                        "properties": {
                                                                                            "PrivateDnsName": {
                                                                                                "description": "Private DNS name of the EC2 instance.",
                                                                                                "type": "string"
                                                                                            },
                                                                                            "PrivateIpAddress": {
                                                                                                "description": "Private IP address of the EC2 instance.",
                                                                                                "type": "string"
                                                                                            }
                                                                                        },
                                                                                        "type": "object"
                                                                                    },
                                                                                    "type": "array"
                                                                                },
                                                                                "PublicDnsName": {
                                                                                    "description": "Public DNS name of the EC2 instance.",
                                                                                    "type": "string"
                                                                                },
                                                                                "PublicIp": {
                                                                                    "description": "Public IP address of the EC2 instance.",
                                                                                    "type": "string"
                                                                                },
                                                                                "SecurityGroups": {
                                                                                    "description": "Security groups associated with the EC2 instance.",
                                                                                    "items": {
                                                                                        "description": "Security groups associated with the EC2 instance.",
                                                                                        "properties": {
                                                                                            "GroupId": {
                                                                                                "description": "EC2 instance's security group ID.",
                                                                                                "type": "string"
                                                                                            },
                                                                                            "GroupName": {
                                                                                                "description": "EC2 instance's security group name.",
                                                                                                "type": "string"
                                                                                            }
                                                                                        },
                                                                                        "type": "object"
                                                                                    },
                                                                                    "type": "array"
                                                                                },
                                                                                "SubnetId": {
                                                                                    "description": "The subnet ID of the EC2 instance.",
                                                                                    "type": "string"
                                                                                },
                                                                                "VpcId": {
                                                                                    "description": "The VPC ID of the EC2 instance.",
                                                                                    "type": "string"
                                                                                }
                                                                            },
                                                                            "type": "object"
                                                                        },
                                                                        "type": "array"
                                                                    },
                                                                    "Platform": {
                                                                        "description": "The platform of the EC2 instance.",
                                                                        "type": "string"
                                                                    },
                                                                    "ProductCodes": {
                                                                        "description": "The product code of the EC2 instance.",
                                                                        "items": {
                                                                            "description": "The product code of the EC2 instance.",
                                                                            "properties": {
                                                                                "Code": {
                                                                                    "description": "Product code information.",
                                                                                    "type": "string"
                                                                                },
                                                                                "ProductType": {
                                                                                    "description": "Product code type.",
                                                                                    "type": "string"
                                                                                }
                                                                            },
                                                                            "type": "object"
                                                                        },
                                                                        "type": "array"
                                                                    },
                                                                    "Tags": {
                                                                        "description": "The tags of the EC2 instance.",
                                                                        "items": {
                                                                            "description": "A tag of the EC2 instance.",
                                                                            "properties": {
                                                                                "Key": {
                                                                                    "description": "EC2 instance tag key.",
                                                                                    "type": "string"
                                                                                },
                                                                                "Value": {
                                                                                    "description": "EC2 instance tag value.",
                                                                                    "type": "string"
                                                                                }
                                                                            },
                                                                            "type": "object"
                                                                        },
                                                                        "type": "array"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            },
                                                            "ResourceType": {
                                                                "description": "The type of the AWS resource.",
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "SchemaVersion": {
                                                        "description": "Findings' schema version.",
                                                        "type": "string"
                                                    },
                                                    "Service": {
                                                        "description": "Additional information assigned to the generated finding by GuardDuty.",
                                                        "properties": {
                                                            "Action": {
                                                                "description": "Information about the activity described in a finding.",
                                                                "properties": {
                                                                    "ActionType": {
                                                                        "description": "GuardDuty Finding activity type.",
                                                                        "type": "string"
                                                                    },
                                                                    "AwsApiCallAction": {
                                                                        "description": "Information about the AWS_API_CALL action described in this finding.",
                                                                        "properties": {
                                                                            "Api": {
                                                                                "description": "AWS API name.",
                                                                                "type": "string"
                                                                            },
                                                                            "CallerType": {
                                                                                "description": "AWS API caller type.",
                                                                                "type": "string"
                                                                            },
                                                                            "DomainDetails": {
                                                                                "description": "Domain information for the AWS API call.",
                                                                                "properties": {},
                                                                                "type": "object"
                                                                            },
                                                                            "RemoteIpDetails": {
                                                                                "description": "Remote IP information of the connection.",
                                                                                "properties": {
                                                                                    "City": {
                                                                                        "description": "City information of the remote IP address.",
                                                                                        "properties": {
                                                                                            "CityName": {
                                                                                                "description": "City name of the remote IP address.",
                                                                                                "type": "string"
                                                                                            }
                                                                                        },
                                                                                        "type": "object"
                                                                                    },
                                                                                    "Country": {
                                                                                        "description": "Country code of the remote IP address.",
                                                                                        "properties": {
                                                                                            "CountryCode": {
                                                                                                "description": "Country code of the remote IP address.",
                                                                                                "type": "string"
                                                                                            },
                                                                                            "CountryName": {
                                                                                                "description": "Country name of the remote IP address.",
                                                                                                "type": "string"
                                                                                            }
                                                                                        },
                                                                                        "type": "object"
                                                                                    },
                                                                                    "GeoLocation": {
                                                                                        "description": "Location information of the remote IP address.",
                                                                                        "properties": {
                                                                                            "Lat": {
                                                                                                "description": "Latitude information of remote IP address.",
                                                                                                "format": "double",
                                                                                                "type": "number"
                                                                                            },
                                                                                            "Lon": {
                                                                                                "description": "Longitude information of remote IP address.",
                                                                                                "format": "double",
                                                                                                "type": "number"
                                                                                            }
                                                                                        },
                                                                                        "type": "object"
                                                                                    },
                                                                                    "IpAddressV4": {
                                                                                        "description": "IPV4 remote address of the connection.",
                                                                                        "type": "string"
                                                                                    },
                                                                                    "Organization": {
                                                                                        "description": "ISP Organization information of the remote IP address.",
                                                                                        "properties": {
                                                                                            "Asn": {
                                                                                                "description": "Autonomous system number of the internet provider of the remote IP address.",
                                                                                                "type": "string"
                                                                                            },
                                                                                            "AsnOrg": {
                                                                                                "description": "Organization that registered this ASN.",
                                                                                                "type": "string"
                                                                                            },
                                                                                            "Isp": {
                                                                                                "description": "ISP information for the internet provider.",
                                                                                                "type": "string"
                                                                                            },
                                                                                            "Org": {
                                                                                                "description": "Name of the internet provider.",
                                                                                                "type": "string"
                                                                                            }
                                                                                        },
                                                                                        "type": "object"
                                                                                    }
                                                                                },
                                                                                "type": "object"
                                                                            },
                                                                            "ServiceName": {
                                                                                "description": "AWS service name whose API was invoked.",
                                                                                "type": "string"
                                                                            }
                                                                        },
                                                                        "type": "object"
                                                                    },
                                                                    "DnsRequestAction": {
                                                                        "description": "Information about the DNS_REQUEST action described in this finding.",
                                                                        "properties": {
                                                                            "Domain": {
                                                                                "description": "Domain information for the DNS request.",
                                                                                "type": "string"
                                                                            }
                                                                        },
                                                                        "type": "object"
                                                                    },
                                                                    "NetworkConnectionAction": {
                                                                        "description": "Information about the NETWORK_CONNECTION action described in this finding.",
                                                                        "properties": {
                                                                            "Blocked": {
                                                                                "description": "Network connection blocked information.",
                                                                                "type": "boolean"
                                                                            },
                                                                            "ConnectionDirection": {
                                                                                "description": "Network connection direction.",
                                                                                "type": "string"
                                                                            },
                                                                            "LocalPortDetails": {
                                                                                "description": "Local port information of the connection.",
                                                                                "properties": {
                                                                                    "Port": {
                                                                                        "description": "Port number of the local connection.",
                                                                                        "type": "integer"
                                                                                    },
                                                                                    "PortName": {
                                                                                        "description": "Port name of the local connection.",
                                                                                        "type": "string"
                                                                                    }
                                                                                },
                                                                                "type": "object"
                                                                            },
                                                                            "Protocol": {
                                                                                "description": "Network connection protocol.",
                                                                                "type": "string"
                                                                            },
                                                                            "RemoteIpDetails": {
                                                                                "description": "Remote IP information of the connection.",
                                                                                "properties": {
                                                                                    "City": {
                                                                                        "description": "City information of the remote IP address.",
                                                                                        "properties": {
                                                                                            "CityName": {
                                                                                                "description": "City name of the remote IP address.",
                                                                                                "type": "string"
                                                                                            }
                                                                                        },
                                                                                        "type": "object"
                                                                                    },
                                                                                    "Country": {
                                                                                        "description": "Country code of the remote IP address.",
                                                                                        "properties": {
                                                                                            "CountryCode": {
                                                                                                "description": "Country code of the remote IP address.",
                                                                                                "type": "string"
                                                                                            },
                                                                                            "CountryName": {
                                                                                                "description": "Country name of the remote IP address.",
                                                                                                "type": "string"
                                                                                            }
                                                                                        },
                                                                                        "type": "object"
                                                                                    },
                                                                                    "GeoLocation": {
                                                                                        "description": "Location information of the remote IP address.",
                                                                                        "properties": {
                                                                                            "Lat": {
                                                                                                "description": "Latitude information of remote IP address.",
                                                                                                "format": "double",
                                                                                                "type": "number"
                                                                                            },
                                                                                            "Lon": {
                                                                                                "description": "Longitude information of remote IP address.",
                                                                                                "format": "double",
                                                                                                "type": "number"
                                                                                            }
                                                                                        },
                                                                                        "type": "object"
                                                                                    },
                                                                                    "IpAddressV4": {
                                                                                        "description": "IPV4 remote address of the connection.",
                                                                                        "type": "string"
                                                                                    },
                                                                                    "Organization": {
                                                                                        "description": "ISP Organization information of the remote IP address.",
                                                                                        "properties": {
                                                                                            "Asn": {
                                                                                                "description": "Autonomous system number of the internet provider of the remote IP address.",
                                                                                                "type": "string"
                                                                                            },
                                                                                            "AsnOrg": {
                                                                                                "description": "Organization that registered this ASN.",
                                                                                                "type": "string"
                                                                                            },
                                                                                            "Isp": {
                                                                                                "description": "ISP information for the internet provider.",
                                                                                                "type": "string"
                                                                                            },
                                                                                            "Org": {
                                                                                                "description": "Name of the internet provider.",
                                                                                                "type": "string"
                                                                                            }
                                                                                        },
                                                                                        "type": "object"
                                                                                    }
                                                                                },
                                                                                "type": "object"
                                                                            },
                                                                            "RemotePortDetails": {
                                                                                "description": "Remote port information of the connection.",
                                                                                "properties": {
                                                                                    "Port": {
                                                                                        "description": "Port number of the remote connection.",
                                                                                        "type": "integer"
                                                                                    },
                                                                                    "PortName": {
                                                                                        "description": "Port name of the remote connection.",
                                                                                        "type": "string"
                                                                                    }
                                                                                },
                                                                                "type": "object"
                                                                            }
                                                                        },
                                                                        "type": "object"
                                                                    },
                                                                    "PortProbeAction": {
                                                                        "description": "Information about the PORT_PROBE action described in this finding.",
                                                                        "properties": {
                                                                            "Blocked": {
                                                                                "description": "Port probe blocked information.",
                                                                                "type": "boolean"
                                                                            },
                                                                            "PortProbeDetails": {
                                                                                "description": "A list of port probe details objects.",
                                                                                "items": {
                                                                                    "description": "Details about the port probe finding.",
                                                                                    "properties": {
                                                                                        "LocalPortDetails": {
                                                                                            "description": "Local port information of the connection.",
                                                                                            "properties": {
                                                                                                "Port": {
                                                                                                    "description": "Port number of the local connection.",
                                                                                                    "type": "integer"
                                                                                                },
                                                                                                "PortName": {
                                                                                                    "description": "Port name of the local connection.",
                                                                                                    "type": "string"
                                                                                                }
                                                                                            },
                                                                                            "type": "object"
                                                                                        },
                                                                                        "RemoteIpDetails": {
                                                                                            "description": "Remote IP information of the connection.",
                                                                                            "properties": {
                                                                                                "City": {
                                                                                                    "description": "City information of the remote IP address.",
                                                                                                    "properties": {
                                                                                                        "CityName": {
                                                                                                            "description": "City name of the remote IP address.",
                                                                                                            "type": "string"
                                                                                                        }
                                                                                                    },
                                                                                                    "type": "object"
                                                                                                },
                                                                                                "Country": {
                                                                                                    "description": "Country code of the remote IP address.",
                                                                                                    "properties": {
                                                                                                        "CountryCode": {
                                                                                                            "description": "Country code of the remote IP address.",
                                                                                                            "type": "string"
                                                                                                        },
                                                                                                        "CountryName": {
                                                                                                            "description": "Country name of the remote IP address.",
                                                                                                            "type": "string"
                                                                                                        }
                                                                                                    },
                                                                                                    "type": "object"
                                                                                                },
                                                                                                "GeoLocation": {
                                                                                                    "description": "Location information of the remote IP address.",
                                                                                                    "properties": {
                                                                                                        "Lat": {
                                                                                                            "description": "Latitude information of remote IP address.",
                                                                                                            "format": "double",
                                                                                                            "type": "number"
                                                                                                        },
                                                                                                        "Lon": {
                                                                                                            "description": "Longitude information of remote IP address.",
                                                                                                            "format": "double",
                                                                                                            "type": "number"
                                                                                                        }
                                                                                                    },
                                                                                                    "type": "object"
                                                                                                },
                                                                                                "IpAddressV4": {
                                                                                                    "description": "IPV4 remote address of the connection.",
                                                                                                    "type": "string"
                                                                                                },
                                                                                                "Organization": {
                                                                                                    "description": "ISP Organization information of the remote IP address.",
                                                                                                    "properties": {
                                                                                                        "Asn": {
                                                                                                            "description": "Autonomous system number of the internet provider of the remote IP address.",
                                                                                                            "type": "string"
                                                                                                        },
                                                                                                        "AsnOrg": {
                                                                                                            "description": "Organization that registered this ASN.",
                                                                                                            "type": "string"
                                                                                                        },
                                                                                                        "Isp": {
                                                                                                            "description": "ISP information for the internet provider.",
                                                                                                            "type": "string"
                                                                                                        },
                                                                                                        "Org": {
                                                                                                            "description": "Name of the internet provider.",
                                                                                                            "type": "string"
                                                                                                        }
                                                                                                    },
                                                                                                    "type": "object"
                                                                                                }
                                                                                            },
                                                                                            "type": "object"
                                                                                        }
                                                                                    },
                                                                                    "type": "object"
                                                                                },
                                                                                "type": "array"
                                                                            }
                                                                        },
                                                                        "type": "object"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            },
                                                            "Archived": {
                                                                "description": "Indicates whether this finding is archived.",
                                                                "type": "boolean"
                                                            },
                                                            "Count": {
                                                                "description": "Total count of the occurrences of this finding type.",
                                                                "type": "integer"
                                                            },
                                                            "DetectorId": {
                                                                "description": "Detector ID for the GuardDuty service.",
                                                                "type": "string"
                                                            },
                                                            "EventFirstSeen": {
                                                                "description": "First seen timestamp of the activity that prompted GuardDuty to generate this finding.",
                                                                "type": "string"
                                                            },
                                                            "EventLastSeen": {
                                                                "description": "Last seen timestamp of the activity that prompted GuardDuty to generate this finding.",
                                                                "type": "string"
                                                            },
                                                            "ResourceRole": {
                                                                "description": "Resource role information for this finding.",
                                                                "type": "string"
                                                            },
                                                            "ServiceName": {
                                                                "description": "The name of the AWS service (GuardDuty) that generated a finding.",
                                                                "type": "string"
                                                            },
                                                            "UserFeedback": {
                                                                "description": "Feedback left about the finding.",
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "Severity": {
                                                        "description": "The severity of a finding.",
                                                        "format": "double",
                                                        "type": "number"
                                                    },
                                                    "Title": {
                                                        "description": "The title of a finding.",
                                                        "type": "string"
                                                    },
                                                    "Type": {
                                                        "description": "The type of a finding described by the action.",
                                                        "type": "string"
                                                    },
                                                    "UpdatedAt": {
                                                        "description": "The time stamp at which a finding was last updated.",
                                                        "type": "string"
                                                    }
                                                },
                                                "required": [
                                                    "AccountId",
                                                    "SchemaVersion",
                                                    "CreatedAt",
                                                    "Resource",
                                                    "Severity",
                                                    "UpdatedAt",
                                                    "Type",
                                                    "Region",
                                                    "Id",
                                                    "Arn"
                                                ],
                                                "type": "object"
                                            },
                                            "type": "array"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "BadRequestException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "InternalServerErrorException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "description": "GetFindings request body.",
                                "properties": {
                                    "FindingIds": {
                                        "description": "IDs of the findings that you want to retrieve.",
                                        "items": {
                                            "description": "The unique identifier for the Finding",
                                            "type": "string"
                                        },
                                        "type": "array"
                                    },
                                    "SortCriteria": {
                                        "description": "Represents the criteria used for sorting findings.",
                                        "properties": {
                                            "AttributeName": {
                                                "description": "Represents the finding attribute (for example, accountId) by which to sort findings.",
                                                "type": "string"
                                            },
                                            "OrderBy": {
                                                "description": "Order by which the sorted findings are to be displayed.",
                                                "enum": [
                                                    "ASC",
                                                    "DESC"
                                                ],
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "required": [
                                    "FindingIds"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/detector/{detectorId}/findings/statistics": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "Lists Amazon GuardDuty findings' statistics for the specified detector ID.",
                "operationId": "GetFindingsStatistics",
                "parameters": [
                    {
                        "in": "path",
                        "name": "detectorId",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "FindingStatistics": {
                                            "description": "Finding statistics object.",
                                            "properties": {
                                                "CountBySeverity": {
                                                    "description": "Represents a map of severity to count statistic for a set of findings",
                                                    "items": {
                                                        "properties": {
                                                            "key": {
                                                                "type": "string"
                                                            },
                                                            "value": {
                                                                "description": "The count of findings for the given severity.",
                                                                "type": "integer"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "type": "array"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "BadRequestException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "InternalServerErrorException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "description": "GetFindingsStatistics request body.",
                                "properties": {
                                    "FindingCriteria": {
                                        "description": "Represents the criteria used for querying findings.",
                                        "properties": {
                                            "Criterion": {
                                                "description": "Represents a map of finding properties that match specified conditions and values when querying findings.",
                                                "items": {
                                                    "properties": {
                                                        "key": {
                                                            "type": "string"
                                                        },
                                                        "value": {
                                                            "description": "Finding attribute (for example, accountId) for which conditions and values must be specified when querying findings.",
                                                            "properties": {
                                                                "Eq": {
                                                                    "description": "Represents the equal condition to be applied to a single field when querying for findings.",
                                                                    "items": {
                                                                        "type": "string"
                                                                    },
                                                                    "type": "array"
                                                                },
                                                                "Gt": {
                                                                    "description": "Represents the greater than condition to be applied to a single field when querying for findings.",
                                                                    "type": "integer"
                                                                },
                                                                "Gte": {
                                                                    "description": "Represents the greater than equal condition to be applied to a single field when querying for findings.",
                                                                    "type": "integer"
                                                                },
                                                                "Lt": {
                                                                    "description": "Represents the less than condition to be applied to a single field when querying for findings.",
                                                                    "type": "integer"
                                                                },
                                                                "Lte": {
                                                                    "description": "Represents the less than equal condition to be applied to a single field when querying for findings.",
                                                                    "type": "integer"
                                                                },
                                                                "Neq": {
                                                                    "description": "Represents the not equal condition to be applied to a single field when querying for findings.",
                                                                    "items": {
                                                                        "type": "string"
                                                                    },
                                                                    "type": "array"
                                                                }
                                                            },
                                                            "type": "object"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "type": "array"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "FindingStatisticTypes": {
                                        "description": "Types of finding statistics to retrieve.",
                                        "items": {
                                            "description": "The types of finding statistics.",
                                            "enum": [
                                                "COUNT_BY_SEVERITY"
                                            ],
                                            "type": "string"
                                        },
                                        "type": "array"
                                    }
                                },
                                "required": [
                                    "FindingStatisticTypes"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/detector/{detectorId}/findings/unarchive": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "Unarchives Amazon GuardDuty findings specified by the list of finding IDs.",
                "operationId": "UnarchiveFindings",
                "parameters": [
                    {
                        "in": "path",
                        "name": "detectorId",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {},
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "BadRequestException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "InternalServerErrorException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "description": "UnarchiveFindings request body.",
                                "properties": {
                                    "FindingIds": {
                                        "description": "IDs of the findings that you want to unarchive.",
                                        "items": {
                                            "description": "The unique identifier for the Finding",
                                            "type": "string"
                                        },
                                        "type": "array"
                                    }
                                },
                                "required": [
                                    "FindingIds"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/detector/{detectorId}/ipset": {
            "get": {
                "description": "Lists the IPSets of the GuardDuty service specified by the detector ID.",
                "operationId": "ListIPSets",
                "parameters": [
                    {
                        "description": "Pagination limit",
                        "in": "query",
                        "name": "MaxResults",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Pagination token",
                        "in": "query",
                        "name": "NextToken",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "path",
                        "name": "detectorId",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "IpSetIds": {
                                            "description": "A list of the IP set IDs",
                                            "items": {
                                                "description": "The unique identifier for an IP Set",
                                                "type": "string"
                                            },
                                            "type": "array"
                                        },
                                        "NextToken": {
                                            "description": "You can use this parameter when paginating results. Set the value of this parameter to null on your first call to the list action. For subsequent calls to the action fill nextToken in the request with the value of NextToken from the previous response to continue listing data.",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "BadRequestException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "InternalServerErrorException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {},
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            },
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "Creates a new IPSet - a list of trusted IP addresses that have been whitelisted for secure communication with AWS infrastructure and applications.",
                "operationId": "CreateIPSet",
                "parameters": [
                    {
                        "in": "path",
                        "name": "detectorId",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "IpSetId": {
                                            "description": "The unique identifier for an IP Set",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "BadRequestException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "InternalServerErrorException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "description": "CreateIPSet request body.",
                                "properties": {
                                    "Activate": {
                                        "description": "A boolean value that indicates whether GuardDuty is to start using the uploaded IPSet.",
                                        "type": "boolean"
                                    },
                                    "ClientToken": {
                                        "description": "The idempotency token for the create request.",
                                        "maxLength": 64,
                                        "minLength": 0,
                                        "type": "string"
                                    },
                                    "Format": {
                                        "description": "The format of the file that contains the IPSet.",
                                        "enum": [
                                            "TXT",
                                            "STIX",
                                            "OTX_CSV",
                                            "ALIEN_VAULT",
                                            "PROOF_POINT",
                                            "FIRE_EYE"
                                        ],
                                        "type": "string"
                                    },
                                    "Location": {
                                        "description": "The URI of the file that contains the IPSet. For example (https://s3.us-west-2.amazonaws.com/my-bucket/my-object-key)",
                                        "type": "string"
                                    },
                                    "Name": {
                                        "description": "The user friendly name to identify the IPSet. This name is displayed in all findings that are triggered by activity that involves IP addresses included in this IPSet.",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "Format",
                                    "Activate",
                                    "Location",
                                    "Name"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/detector/{detectorId}/ipset/{ipSetId}": {
            "delete": {
                "description": "Deletes the IPSet specified by the IPSet ID.",
                "operationId": "DeleteIPSet",
                "parameters": [
                    {
                        "in": "path",
                        "name": "detectorId",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "path",
                        "name": "ipSetId",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {},
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "BadRequestException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "InternalServerErrorException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {},
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            },
            "get": {
                "description": "Retrieves the IPSet specified by the IPSet ID.",
                "operationId": "GetIPSet",
                "parameters": [
                    {
                        "in": "path",
                        "name": "detectorId",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "path",
                        "name": "ipSetId",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "Format": {
                                            "description": "The format of the file that contains the IPSet.",
                                            "enum": [
                                                "TXT",
                                                "STIX",
                                                "OTX_CSV",
                                                "ALIEN_VAULT",
                                                "PROOF_POINT",
                                                "FIRE_EYE"
                                            ],
                                            "type": "string"
                                        },
                                        "Location": {
                                            "description": "The URI of the file that contains the IPSet. For example (https://s3.us-west-2.amazonaws.com/my-bucket/my-object-key)",
                                            "type": "string"
                                        },
                                        "Name": {
                                            "description": "The user friendly name to identify the IPSet. This name is displayed in all findings that are triggered by activity that involves IP addresses included in this IPSet.",
                                            "type": "string"
                                        },
                                        "Status": {
                                            "description": "The status of ipSet file uploaded.",
                                            "enum": [
                                                "INACTIVE",
                                                "ACTIVATING",
                                                "ACTIVE",
                                                "DEACTIVATING",
                                                "ERROR",
                                                "DELETE_PENDING",
                                                "DELETED"
                                            ],
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "BadRequestException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "InternalServerErrorException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {},
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            },
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "Updates the IPSet specified by the IPSet ID.",
                "operationId": "UpdateIPSet",
                "parameters": [
                    {
                        "in": "path",
                        "name": "detectorId",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "path",
                        "name": "ipSetId",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {},
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "BadRequestException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "InternalServerErrorException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "description": "UpdateIPSet request body.",
                                "properties": {
                                    "Activate": {
                                        "description": "The updated boolean value that specifies whether the IPSet is active or not.",
                                        "type": "boolean"
                                    },
                                    "Location": {
                                        "description": "The updated URI of the file that contains the IPSet. For example (https://s3.us-west-2.amazonaws.com/my-bucket/my-object-key).",
                                        "type": "string"
                                    },
                                    "Name": {
                                        "description": "The unique ID that specifies the IPSet that you want to update.",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/detector/{detectorId}/master": {
            "get": {
                "description": "Provides the details for the GuardDuty master account to the current GuardDuty member account.",
                "operationId": "GetMasterAccount",
                "parameters": [
                    {
                        "in": "path",
                        "name": "detectorId",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "Master": {
                                            "description": "Contains details about the master account.",
                                            "properties": {
                                                "AccountId": {
                                                    "description": "Master account ID",
                                                    "type": "string"
                                                },
                                                "InvitationId": {
                                                    "description": "This value is used to validate the master account to the member account.",
                                                    "type": "string"
                                                },
                                                "InvitedAt": {
                                                    "description": "Timestamp at which the invitation was sent",
                                                    "type": "string"
                                                },
                                                "RelationshipStatus": {
                                                    "description": "The status of the relationship between the master and member accounts.",
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "BadRequestException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "InternalServerErrorException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {},
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            },
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "Accepts the invitation to be monitored by a master GuardDuty account.",
                "operationId": "AcceptInvitation",
                "parameters": [
                    {
                        "in": "path",
                        "name": "detectorId",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {},
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "BadRequestException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "InternalServerErrorException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "description": "AcceptInvitation request body.",
                                "properties": {
                                    "InvitationId": {
                                        "description": "This value is used to validate the master account to the member account.",
                                        "type": "string"
                                    },
                                    "MasterId": {
                                        "description": "The account ID of the master GuardDuty account whose invitation you're accepting.",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "MasterId",
                                    "InvitationId"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/detector/{detectorId}/master/disassociate": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "Disassociates the current GuardDuty member account from its master account.",
                "operationId": "DisassociateFromMasterAccount",
                "parameters": [
                    {
                        "in": "path",
                        "name": "detectorId",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {},
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "BadRequestException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "InternalServerErrorException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {},
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/detector/{detectorId}/member": {
            "get": {
                "description": "Lists details about all member accounts for the current GuardDuty master account.",
                "operationId": "ListMembers",
                "parameters": [
                    {
                        "description": "Pagination limit",
                        "in": "query",
                        "name": "MaxResults",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Pagination token",
                        "in": "query",
                        "name": "NextToken",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "path",
                        "name": "detectorId",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "Members": {
                                            "description": "A list of member descriptions.",
                                            "items": {
                                                "description": "Contains details about the member account.",
                                                "properties": {
                                                    "AccountId": {
                                                        "description": "AWS account ID.",
                                                        "type": "string"
                                                    },
                                                    "DetectorId": {
                                                        "description": "The unique identifier for a detector.",
                                                        "type": "string"
                                                    },
                                                    "Email": {
                                                        "description": "Member account's email address.",
                                                        "type": "string"
                                                    },
                                                    "InvitedAt": {
                                                        "description": "Timestamp at which the invitation was sent",
                                                        "type": "string"
                                                    },
                                                    "MasterId": {
                                                        "description": "The master account ID.",
                                                        "type": "string"
                                                    },
                                                    "RelationshipStatus": {
                                                        "description": "The status of the relationship between the member and the master.",
                                                        "type": "string"
                                                    },
                                                    "UpdatedAt": {
                                                        "description": "The first time a resource was created. The format will be ISO-8601.",
                                                        "type": "string"
                                                    }
                                                },
                                                "required": [
                                                    "Email",
                                                    "AccountId",
                                                    "MasterId",
                                                    "UpdatedAt",
                                                    "RelationshipStatus"
                                                ],
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "NextToken": {
                                            "description": "You can use this parameter when paginating results. Set the value of this parameter to null on your first call to the list action. For subsequent calls to the action fill nextToken in the request with the value of NextToken from the previous response to continue listing data.",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "BadRequestException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "InternalServerErrorException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {},
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            },
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "Creates member accounts of the current AWS account by specifying a list of AWS account IDs. The current AWS account can then invite these members to manage GuardDuty in their accounts.",
                "operationId": "CreateMembers",
                "parameters": [
                    {
                        "in": "path",
                        "name": "detectorId",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "UnprocessedAccounts": {
                                            "description": "A list of objects containing the unprocessed account and a result string explaining why it was unprocessed.",
                                            "items": {
                                                "description": "An object containing the unprocessed account and a result string explaining why it was unprocessed.",
                                                "properties": {
                                                    "AccountId": {
                                                        "description": "AWS Account ID.",
                                                        "type": "string"
                                                    },
                                                    "Result": {
                                                        "description": "A reason why the account hasn't been processed.",
                                                        "type": "string"
                                                    }
                                                },
                                                "required": [
                                                    "AccountId",
                                                    "Result"
                                                ],
                                                "type": "object"
                                            },
                                            "type": "array"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "BadRequestException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "InternalServerErrorException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "description": "CreateMembers request body.",
                                "properties": {
                                    "AccountDetails": {
                                        "description": "A list of account ID and email address pairs of the accounts that you want to associate with the master GuardDuty account.",
                                        "items": {
                                            "description": "An object containing the member's accountId and email address.",
                                            "properties": {
                                                "AccountId": {
                                                    "description": "Member account ID.",
                                                    "type": "string"
                                                },
                                                "Email": {
                                                    "description": "Member account's email address.",
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "Email",
                                                "AccountId"
                                            ],
                                            "type": "object"
                                        },
                                        "type": "array"
                                    }
                                },
                                "required": [
                                    "AccountDetails"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/detector/{detectorId}/member/delete": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "Deletes GuardDuty member accounts (to the current GuardDuty master account) specified by the account IDs.",
                "operationId": "DeleteMembers",
                "parameters": [
                    {
                        "in": "path",
                        "name": "detectorId",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "UnprocessedAccounts": {
                                            "description": "A list of objects containing the unprocessed account and a result string explaining why it was unprocessed.",
                                            "items": {
                                                "description": "An object containing the unprocessed account and a result string explaining why it was unprocessed.",
                                                "properties": {
                                                    "AccountId": {
                                                        "description": "AWS Account ID.",
                                                        "type": "string"
                                                    },
                                                    "Result": {
                                                        "description": "A reason why the account hasn't been processed.",
                                                        "type": "string"
                                                    }
                                                },
                                                "required": [
                                                    "AccountId",
                                                    "Result"
                                                ],
                                                "type": "object"
                                            },
                                            "type": "array"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "BadRequestException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "InternalServerErrorException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "description": "DeleteMembers request body.",
                                "properties": {
                                    "AccountIds": {
                                        "description": "A list of account IDs of the GuardDuty member accounts that you want to delete.",
                                        "items": {
                                            "type": "string"
                                        },
                                        "type": "array"
                                    }
                                },
                                "required": [
                                    "AccountIds"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/detector/{detectorId}/member/disassociate": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "Disassociates GuardDuty member accounts (to the current GuardDuty master account) specified by the account IDs.",
                "operationId": "DisassociateMembers",
                "parameters": [
                    {
                        "in": "path",
                        "name": "detectorId",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "UnprocessedAccounts": {
                                            "description": "A list of objects containing the unprocessed account and a result string explaining why it was unprocessed.",
                                            "items": {
                                                "description": "An object containing the unprocessed account and a result string explaining why it was unprocessed.",
                                                "properties": {
                                                    "AccountId": {
                                                        "description": "AWS Account ID.",
                                                        "type": "string"
                                                    },
                                                    "Result": {
                                                        "description": "A reason why the account hasn't been processed.",
                                                        "type": "string"
                                                    }
                                                },
                                                "required": [
                                                    "AccountId",
                                                    "Result"
                                                ],
                                                "type": "object"
                                            },
                                            "type": "array"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "BadRequestException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "InternalServerErrorException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "description": "DisassociateMembers request body.",
                                "properties": {
                                    "AccountIds": {
                                        "description": "A list of account IDs of the GuardDuty member accounts that you want to disassociate from master.",
                                        "items": {
                                            "type": "string"
                                        },
                                        "type": "array"
                                    }
                                },
                                "required": [
                                    "AccountIds"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/detector/{detectorId}/member/get": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "Retrieves GuardDuty member accounts (to the current GuardDuty master account) specified by the account IDs.",
                "operationId": "GetMembers",
                "parameters": [
                    {
                        "in": "path",
                        "name": "detectorId",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "Members": {
                                            "description": "A list of member descriptions.",
                                            "items": {
                                                "description": "Contains details about the member account.",
                                                "properties": {
                                                    "AccountId": {
                                                        "description": "AWS account ID.",
                                                        "type": "string"
                                                    },
                                                    "DetectorId": {
                                                        "description": "The unique identifier for a detector.",
                                                        "type": "string"
                                                    },
                                                    "Email": {
                                                        "description": "Member account's email address.",
                                                        "type": "string"
                                                    },
                                                    "InvitedAt": {
                                                        "description": "Timestamp at which the invitation was sent",
                                                        "type": "string"
                                                    },
                                                    "MasterId": {
                                                        "description": "The master account ID.",
                                                        "type": "string"
                                                    },
                                                    "RelationshipStatus": {
                                                        "description": "The status of the relationship between the member and the master.",
                                                        "type": "string"
                                                    },
                                                    "UpdatedAt": {
                                                        "description": "The first time a resource was created. The format will be ISO-8601.",
                                                        "type": "string"
                                                    }
                                                },
                                                "required": [
                                                    "Email",
                                                    "AccountId",
                                                    "MasterId",
                                                    "UpdatedAt",
                                                    "RelationshipStatus"
                                                ],
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "UnprocessedAccounts": {
                                            "description": "A list of objects containing the unprocessed account and a result string explaining why it was unprocessed.",
                                            "items": {
                                                "description": "An object containing the unprocessed account and a result string explaining why it was unprocessed.",
                                                "properties": {
                                                    "AccountId": {
                                                        "description": "AWS Account ID.",
                                                        "type": "string"
                                                    },
                                                    "Result": {
                                                        "description": "A reason why the account hasn't been processed.",
                                                        "type": "string"
                                                    }
                                                },
                                                "required": [
                                                    "AccountId",
                                                    "Result"
                                                ],
                                                "type": "object"
                                            },
                                            "type": "array"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "BadRequestException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "InternalServerErrorException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "description": "GetMembers request body.",
                                "properties": {
                                    "AccountIds": {
                                        "description": "A list of account IDs of the GuardDuty member accounts that you want to describe.",
                                        "items": {
                                            "type": "string"
                                        },
                                        "type": "array"
                                    }
                                },
                                "required": [
                                    "AccountIds"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/detector/{detectorId}/member/invite": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "Invites other AWS accounts (created as members of the current AWS account by CreateMembers) to enable GuardDuty and allow the current AWS account to view and manage these accounts' GuardDuty findings on their behalf as the master account.",
                "operationId": "InviteMembers",
                "parameters": [
                    {
                        "in": "path",
                        "name": "detectorId",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "UnprocessedAccounts": {
                                            "description": "A list of objects containing the unprocessed account and a result string explaining why it was unprocessed.",
                                            "items": {
                                                "description": "An object containing the unprocessed account and a result string explaining why it was unprocessed.",
                                                "properties": {
                                                    "AccountId": {
                                                        "description": "AWS Account ID.",
                                                        "type": "string"
                                                    },
                                                    "Result": {
                                                        "description": "A reason why the account hasn't been processed.",
                                                        "type": "string"
                                                    }
                                                },
                                                "required": [
                                                    "AccountId",
                                                    "Result"
                                                ],
                                                "type": "object"
                                            },
                                            "type": "array"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "BadRequestException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "InternalServerErrorException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "description": "InviteMembers request body.",
                                "properties": {
                                    "AccountIds": {
                                        "description": "A list of account IDs of the accounts that you want to invite to GuardDuty as members.",
                                        "items": {
                                            "type": "string"
                                        },
                                        "type": "array"
                                    },
                                    "DisableEmailNotification": {
                                        "description": "A boolean value that specifies whether you want to disable email notification to the accounts that you’re inviting to GuardDuty as members.",
                                        "type": "boolean"
                                    },
                                    "Message": {
                                        "description": "The invitation message that you want to send to the accounts that you’re inviting to GuardDuty as members.",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "AccountIds"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/detector/{detectorId}/member/start": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "Re-enables GuardDuty to monitor findings of the member accounts specified by the account IDs. A master GuardDuty account can run this command after disabling GuardDuty from monitoring these members' findings by running StopMonitoringMembers.",
                "operationId": "StartMonitoringMembers",
                "parameters": [
                    {
                        "in": "path",
                        "name": "detectorId",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "UnprocessedAccounts": {
                                            "description": "A list of objects containing the unprocessed account and a result string explaining why it was unprocessed.",
                                            "items": {
                                                "description": "An object containing the unprocessed account and a result string explaining why it was unprocessed.",
                                                "properties": {
                                                    "AccountId": {
                                                        "description": "AWS Account ID.",
                                                        "type": "string"
                                                    },
                                                    "Result": {
                                                        "description": "A reason why the account hasn't been processed.",
                                                        "type": "string"
                                                    }
                                                },
                                                "required": [
                                                    "AccountId",
                                                    "Result"
                                                ],
                                                "type": "object"
                                            },
                                            "type": "array"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "BadRequestException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "InternalServerErrorException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "description": "StartMonitoringMembers request body.",
                                "properties": {
                                    "AccountIds": {
                                        "description": "A list of account IDs of the GuardDuty member accounts whose findings you want the master account to monitor.",
                                        "items": {
                                            "type": "string"
                                        },
                                        "type": "array"
                                    }
                                },
                                "required": [
                                    "AccountIds"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/detector/{detectorId}/member/stop": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "Disables GuardDuty from monitoring findings of the member accounts specified by the account IDs. After running this command, a master GuardDuty account can run StartMonitoringMembers to re-enable GuardDuty to monitor these members’ findings.",
                "operationId": "StopMonitoringMembers",
                "parameters": [
                    {
                        "in": "path",
                        "name": "detectorId",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "UnprocessedAccounts": {
                                            "description": "A list of objects containing the unprocessed account and a result string explaining why it was unprocessed.",
                                            "items": {
                                                "description": "An object containing the unprocessed account and a result string explaining why it was unprocessed.",
                                                "properties": {
                                                    "AccountId": {
                                                        "description": "AWS Account ID.",
                                                        "type": "string"
                                                    },
                                                    "Result": {
                                                        "description": "A reason why the account hasn't been processed.",
                                                        "type": "string"
                                                    }
                                                },
                                                "required": [
                                                    "AccountId",
                                                    "Result"
                                                ],
                                                "type": "object"
                                            },
                                            "type": "array"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "BadRequestException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "InternalServerErrorException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "description": "StopMonitoringMembers request body.",
                                "properties": {
                                    "AccountIds": {
                                        "description": "A list of account IDs of the GuardDuty member accounts whose findings you want the master account to stop monitoring.",
                                        "items": {
                                            "type": "string"
                                        },
                                        "type": "array"
                                    }
                                },
                                "required": [
                                    "AccountIds"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/detector/{detectorId}/threatintelset": {
            "get": {
                "description": "Lists the ThreatIntelSets of the GuardDuty service specified by the detector ID.",
                "operationId": "ListThreatIntelSets",
                "parameters": [
                    {
                        "description": "Pagination limit",
                        "in": "query",
                        "name": "MaxResults",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Pagination token",
                        "in": "query",
                        "name": "NextToken",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "path",
                        "name": "detectorId",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "NextToken": {
                                            "description": "You can use this parameter when paginating results. Set the value of this parameter to null on your first call to the list action. For subsequent calls to the action fill nextToken in the request with the value of NextToken from the previous response to continue listing data.",
                                            "type": "string"
                                        },
                                        "ThreatIntelSetIds": {
                                            "description": "The list of the threat intel set IDs",
                                            "items": {
                                                "description": "The unique identifier for an threat intel set",
                                                "type": "string"
                                            },
                                            "type": "array"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "BadRequestException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "InternalServerErrorException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {},
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            },
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "Create a new ThreatIntelSet. ThreatIntelSets consist of known malicious IP addresses. GuardDuty generates findings based on ThreatIntelSets.",
                "operationId": "CreateThreatIntelSet",
                "parameters": [
                    {
                        "in": "path",
                        "name": "detectorId",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "ThreatIntelSetId": {
                                            "description": "The unique identifier for an threat intel set",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "BadRequestException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "InternalServerErrorException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "description": "CreateThreatIntelSet request body.",
                                "properties": {
                                    "Activate": {
                                        "description": "A boolean value that indicates whether GuardDuty is to start using the uploaded ThreatIntelSet.",
                                        "type": "boolean"
                                    },
                                    "ClientToken": {
                                        "description": "The idempotency token for the create request.",
                                        "maxLength": 64,
                                        "minLength": 0,
                                        "type": "string"
                                    },
                                    "Format": {
                                        "description": "The format of the file that contains the ThreatIntelSet.",
                                        "enum": [
                                            "TXT",
                                            "STIX",
                                            "OTX_CSV",
                                            "ALIEN_VAULT",
                                            "PROOF_POINT",
                                            "FIRE_EYE"
                                        ],
                                        "type": "string"
                                    },
                                    "Location": {
                                        "description": "The URI of the file that contains the ThreatIntelSet. For example (https://s3.us-west-2.amazonaws.com/my-bucket/my-object-key).",
                                        "type": "string"
                                    },
                                    "Name": {
                                        "description": "A user-friendly ThreatIntelSet name that is displayed in all finding generated by activity that involves IP addresses included in this ThreatIntelSet.",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "Format",
                                    "Activate",
                                    "Location",
                                    "Name"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/detector/{detectorId}/threatintelset/{threatIntelSetId}": {
            "delete": {
                "description": "Deletes ThreatIntelSet specified by the ThreatIntelSet ID.",
                "operationId": "DeleteThreatIntelSet",
                "parameters": [
                    {
                        "in": "path",
                        "name": "detectorId",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "path",
                        "name": "threatIntelSetId",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {},
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "BadRequestException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "InternalServerErrorException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {},
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            },
            "get": {
                "description": "Retrieves the ThreatIntelSet that is specified by the ThreatIntelSet ID.",
                "operationId": "GetThreatIntelSet",
                "parameters": [
                    {
                        "in": "path",
                        "name": "detectorId",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "path",
                        "name": "threatIntelSetId",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "Format": {
                                            "description": "The format of the threatIntelSet.",
                                            "enum": [
                                                "TXT",
                                                "STIX",
                                                "OTX_CSV",
                                                "ALIEN_VAULT",
                                                "PROOF_POINT",
                                                "FIRE_EYE"
                                            ],
                                            "type": "string"
                                        },
                                        "Location": {
                                            "description": "The URI of the file that contains the ThreatIntelSet. For example (https://s3.us-west-2.amazonaws.com/my-bucket/my-object-key).",
                                            "type": "string"
                                        },
                                        "Name": {
                                            "description": "A user-friendly ThreatIntelSet name that is displayed in all finding generated by activity that involves IP addresses included in this ThreatIntelSet.",
                                            "type": "string"
                                        },
                                        "Status": {
                                            "description": "The status of threatIntelSet file uploaded.",
                                            "enum": [
                                                "INACTIVE",
                                                "ACTIVATING",
                                                "ACTIVE",
                                                "DEACTIVATING",
                                                "ERROR",
                                                "DELETE_PENDING",
                                                "DELETED"
                                            ],
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "BadRequestException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "InternalServerErrorException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {},
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            },
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "Updates the ThreatIntelSet specified by ThreatIntelSet ID.",
                "operationId": "UpdateThreatIntelSet",
                "parameters": [
                    {
                        "in": "path",
                        "name": "detectorId",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "path",
                        "name": "threatIntelSetId",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {},
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "BadRequestException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "InternalServerErrorException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "description": "UpdateThreatIntelSet request body.",
                                "properties": {
                                    "Activate": {
                                        "description": "The updated boolean value that specifies whether the ThreateIntelSet is active or not.",
                                        "type": "boolean"
                                    },
                                    "Location": {
                                        "description": "The updated URI of the file that contains the ThreateIntelSet. For example (https://s3.us-west-2.amazonaws.com/my-bucket/my-object-key)",
                                        "type": "string"
                                    },
                                    "Name": {
                                        "description": "The unique ID that specifies the ThreatIntelSet that you want to update.",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/invitation": {
            "get": {
                "description": "Lists all GuardDuty membership invitations that were sent to the current AWS account.",
                "operationId": "ListInvitations",
                "parameters": [
                    {
                        "description": "Pagination limit",
                        "in": "query",
                        "name": "MaxResults",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Pagination token",
                        "in": "query",
                        "name": "NextToken",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "Invitations": {
                                            "description": "A list of invitation descriptions.",
                                            "items": {
                                                "description": "Invitation from an AWS account to become the current account's master.",
                                                "properties": {
                                                    "AccountId": {
                                                        "description": "Inviter account ID",
                                                        "type": "string"
                                                    },
                                                    "InvitationId": {
                                                        "description": "This value is used to validate the inviter account to the member account.",
                                                        "type": "string"
                                                    },
                                                    "InvitedAt": {
                                                        "description": "Timestamp at which the invitation was sent",
                                                        "type": "string"
                                                    },
                                                    "RelationshipStatus": {
                                                        "description": "The status of the relationship between the inviter and invitee accounts.",
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "NextToken": {
                                            "description": "You can use this parameter when paginating results. Set the value of this parameter to null on your first call to the list action. For subsequent calls to the action fill nextToken in the request with the value of NextToken from the previous response to continue listing data.",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "BadRequestException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "InternalServerErrorException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {},
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            },
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ]
        },
        "/invitation/count": {
            "get": {
                "description": "Returns the count of all GuardDuty membership invitations that were sent to the current member account except the currently accepted invitation.",
                "operationId": "GetInvitationsCount",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "InvitationsCount": {
                                            "description": "The number of received invitations.",
                                            "type": "integer"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "BadRequestException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "InternalServerErrorException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {},
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            },
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ]
        },
        "/invitation/decline": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "Declines invitations sent to the current member account by AWS account specified by their account IDs.",
                "operationId": "DeclineInvitations",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "UnprocessedAccounts": {
                                            "description": "A list of objects containing the unprocessed account and a result string explaining why it was unprocessed.",
                                            "items": {
                                                "description": "An object containing the unprocessed account and a result string explaining why it was unprocessed.",
                                                "properties": {
                                                    "AccountId": {
                                                        "description": "AWS Account ID.",
                                                        "type": "string"
                                                    },
                                                    "Result": {
                                                        "description": "A reason why the account hasn't been processed.",
                                                        "type": "string"
                                                    }
                                                },
                                                "required": [
                                                    "AccountId",
                                                    "Result"
                                                ],
                                                "type": "object"
                                            },
                                            "type": "array"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "BadRequestException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "InternalServerErrorException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "description": "DeclineInvitations request body.",
                                "properties": {
                                    "AccountIds": {
                                        "description": "A list of account IDs of the AWS accounts that sent invitations to the current member account that you want to decline invitations from.",
                                        "items": {
                                            "type": "string"
                                        },
                                        "type": "array"
                                    }
                                },
                                "required": [
                                    "AccountIds"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/invitation/delete": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "Deletes invitations sent to the current member account by AWS accounts specified by their account IDs.",
                "operationId": "DeleteInvitations",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "UnprocessedAccounts": {
                                            "description": "A list of objects containing the unprocessed account and a result string explaining why it was unprocessed.",
                                            "items": {
                                                "description": "An object containing the unprocessed account and a result string explaining why it was unprocessed.",
                                                "properties": {
                                                    "AccountId": {
                                                        "description": "AWS Account ID.",
                                                        "type": "string"
                                                    },
                                                    "Result": {
                                                        "description": "A reason why the account hasn't been processed.",
                                                        "type": "string"
                                                    }
                                                },
                                                "required": [
                                                    "AccountId",
                                                    "Result"
                                                ],
                                                "type": "object"
                                            },
                                            "type": "array"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "BadRequestException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "InternalServerErrorException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "description": "DeleteInvitations request body.",
                                "properties": {
                                    "AccountIds": {
                                        "description": "A list of account IDs of the AWS accounts that sent invitations to the current member account that you want to delete invitations from.",
                                        "items": {
                                            "type": "string"
                                        },
                                        "type": "array"
                                    }
                                },
                                "required": [
                                    "AccountIds"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        }
    },
    "components": {
        "schemas": {
            "AcceptInvitationRequest": {
                "description": "AcceptInvitation request body.",
                "properties": {
                    "InvitationId": {
                        "description": "This value is used to validate the master account to the member account.",
                        "type": "string"
                    },
                    "MasterId": {
                        "description": "The account ID of the master GuardDuty account whose invitation you're accepting.",
                        "type": "string"
                    }
                },
                "required": [
                    "MasterId",
                    "InvitationId"
                ],
                "type": "object"
            },
            "AcceptInvitationResponse": {
                "properties": {},
                "type": "object"
            },
            "AccessKeyDetails": {
                "description": "The IAM access key details (IAM user information) of a user that engaged in the activity that prompted GuardDuty to generate a finding.",
                "properties": {
                    "AccessKeyId": {
                        "description": "Access key ID of the user.",
                        "type": "string"
                    },
                    "PrincipalId": {
                        "description": "The principal ID of the user.",
                        "type": "string"
                    },
                    "UserName": {
                        "description": "The name of the user.",
                        "type": "string"
                    },
                    "UserType": {
                        "description": "The type of the user.",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "AccountDetail": {
                "description": "An object containing the member's accountId and email address.",
                "properties": {
                    "AccountId": {
                        "description": "Member account ID.",
                        "type": "string"
                    },
                    "Email": {
                        "description": "Member account's email address.",
                        "type": "string"
                    }
                },
                "required": [
                    "Email",
                    "AccountId"
                ],
                "type": "object"
            },
            "AccountDetails": {
                "description": "A list of account/email pairs.",
                "items": {
                    "description": "An object containing the member's accountId and email address.",
                    "properties": {
                        "AccountId": {
                            "description": "Member account ID.",
                            "type": "string"
                        },
                        "Email": {
                            "description": "Member account's email address.",
                            "type": "string"
                        }
                    },
                    "required": [
                        "Email",
                        "AccountId"
                    ],
                    "type": "object"
                },
                "type": "array"
            },
            "AccountId": {
                "description": "AWS account ID.",
                "type": "string"
            },
            "AccountIds": {
                "description": "A list of account IDs.",
                "items": {
                    "type": "string"
                },
                "type": "array"
            },
            "Action": {
                "description": "Information about the activity described in a finding.",
                "properties": {
                    "ActionType": {
                        "description": "GuardDuty Finding activity type.",
                        "type": "string"
                    },
                    "AwsApiCallAction": {
                        "description": "Information about the AWS_API_CALL action described in this finding.",
                        "properties": {
                            "Api": {
                                "description": "AWS API name.",
                                "type": "string"
                            },
                            "CallerType": {
                                "description": "AWS API caller type.",
                                "type": "string"
                            },
                            "DomainDetails": {
                                "description": "Domain information for the AWS API call.",
                                "properties": {},
                                "type": "object"
                            },
                            "RemoteIpDetails": {
                                "description": "Remote IP information of the connection.",
                                "properties": {
                                    "City": {
                                        "description": "City information of the remote IP address.",
                                        "properties": {
                                            "CityName": {
                                                "description": "City name of the remote IP address.",
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "Country": {
                                        "description": "Country code of the remote IP address.",
                                        "properties": {
                                            "CountryCode": {
                                                "description": "Country code of the remote IP address.",
                                                "type": "string"
                                            },
                                            "CountryName": {
                                                "description": "Country name of the remote IP address.",
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "GeoLocation": {
                                        "description": "Location information of the remote IP address.",
                                        "properties": {
                                            "Lat": {
                                                "description": "Latitude information of remote IP address.",
                                                "format": "double",
                                                "type": "number"
                                            },
                                            "Lon": {
                                                "description": "Longitude information of remote IP address.",
                                                "format": "double",
                                                "type": "number"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "IpAddressV4": {
                                        "description": "IPV4 remote address of the connection.",
                                        "type": "string"
                                    },
                                    "Organization": {
                                        "description": "ISP Organization information of the remote IP address.",
                                        "properties": {
                                            "Asn": {
                                                "description": "Autonomous system number of the internet provider of the remote IP address.",
                                                "type": "string"
                                            },
                                            "AsnOrg": {
                                                "description": "Organization that registered this ASN.",
                                                "type": "string"
                                            },
                                            "Isp": {
                                                "description": "ISP information for the internet provider.",
                                                "type": "string"
                                            },
                                            "Org": {
                                                "description": "Name of the internet provider.",
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "type": "object"
                            },
                            "ServiceName": {
                                "description": "AWS service name whose API was invoked.",
                                "type": "string"
                            }
                        },
                        "type": "object"
                    },
                    "DnsRequestAction": {
                        "description": "Information about the DNS_REQUEST action described in this finding.",
                        "properties": {
                            "Domain": {
                                "description": "Domain information for the DNS request.",
                                "type": "string"
                            }
                        },
                        "type": "object"
                    },
                    "NetworkConnectionAction": {
                        "description": "Information about the NETWORK_CONNECTION action described in this finding.",
                        "properties": {
                            "Blocked": {
                                "description": "Network connection blocked information.",
                                "type": "boolean"
                            },
                            "ConnectionDirection": {
                                "description": "Network connection direction.",
                                "type": "string"
                            },
                            "LocalPortDetails": {
                                "description": "Local port information of the connection.",
                                "properties": {
                                    "Port": {
                                        "description": "Port number of the local connection.",
                                        "type": "integer"
                                    },
                                    "PortName": {
                                        "description": "Port name of the local connection.",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            },
                            "Protocol": {
                                "description": "Network connection protocol.",
                                "type": "string"
                            },
                            "RemoteIpDetails": {
                                "description": "Remote IP information of the connection.",
                                "properties": {
                                    "City": {
                                        "description": "City information of the remote IP address.",
                                        "properties": {
                                            "CityName": {
                                                "description": "City name of the remote IP address.",
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "Country": {
                                        "description": "Country code of the remote IP address.",
                                        "properties": {
                                            "CountryCode": {
                                                "description": "Country code of the remote IP address.",
                                                "type": "string"
                                            },
                                            "CountryName": {
                                                "description": "Country name of the remote IP address.",
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "GeoLocation": {
                                        "description": "Location information of the remote IP address.",
                                        "properties": {
                                            "Lat": {
                                                "description": "Latitude information of remote IP address.",
                                                "format": "double",
                                                "type": "number"
                                            },
                                            "Lon": {
                                                "description": "Longitude information of remote IP address.",
                                                "format": "double",
                                                "type": "number"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "IpAddressV4": {
                                        "description": "IPV4 remote address of the connection.",
                                        "type": "string"
                                    },
                                    "Organization": {
                                        "description": "ISP Organization information of the remote IP address.",
                                        "properties": {
                                            "Asn": {
                                                "description": "Autonomous system number of the internet provider of the remote IP address.",
                                                "type": "string"
                                            },
                                            "AsnOrg": {
                                                "description": "Organization that registered this ASN.",
                                                "type": "string"
                                            },
                                            "Isp": {
                                                "description": "ISP information for the internet provider.",
                                                "type": "string"
                                            },
                                            "Org": {
                                                "description": "Name of the internet provider.",
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "type": "object"
                            },
                            "RemotePortDetails": {
                                "description": "Remote port information of the connection.",
                                "properties": {
                                    "Port": {
                                        "description": "Port number of the remote connection.",
                                        "type": "integer"
                                    },
                                    "PortName": {
                                        "description": "Port name of the remote connection.",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        },
                        "type": "object"
                    },
                    "PortProbeAction": {
                        "description": "Information about the PORT_PROBE action described in this finding.",
                        "properties": {
                            "Blocked": {
                                "description": "Port probe blocked information.",
                                "type": "boolean"
                            },
                            "PortProbeDetails": {
                                "description": "A list of port probe details objects.",
                                "items": {
                                    "description": "Details about the port probe finding.",
                                    "properties": {
                                        "LocalPortDetails": {
                                            "description": "Local port information of the connection.",
                                            "properties": {
                                                "Port": {
                                                    "description": "Port number of the local connection.",
                                                    "type": "integer"
                                                },
                                                "PortName": {
                                                    "description": "Port name of the local connection.",
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "RemoteIpDetails": {
                                            "description": "Remote IP information of the connection.",
                                            "properties": {
                                                "City": {
                                                    "description": "City information of the remote IP address.",
                                                    "properties": {
                                                        "CityName": {
                                                            "description": "City name of the remote IP address.",
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "Country": {
                                                    "description": "Country code of the remote IP address.",
                                                    "properties": {
                                                        "CountryCode": {
                                                            "description": "Country code of the remote IP address.",
                                                            "type": "string"
                                                        },
                                                        "CountryName": {
                                                            "description": "Country name of the remote IP address.",
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "GeoLocation": {
                                                    "description": "Location information of the remote IP address.",
                                                    "properties": {
                                                        "Lat": {
                                                            "description": "Latitude information of remote IP address.",
                                                            "format": "double",
                                                            "type": "number"
                                                        },
                                                        "Lon": {
                                                            "description": "Longitude information of remote IP address.",
                                                            "format": "double",
                                                            "type": "number"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "IpAddressV4": {
                                                    "description": "IPV4 remote address of the connection.",
                                                    "type": "string"
                                                },
                                                "Organization": {
                                                    "description": "ISP Organization information of the remote IP address.",
                                                    "properties": {
                                                        "Asn": {
                                                            "description": "Autonomous system number of the internet provider of the remote IP address.",
                                                            "type": "string"
                                                        },
                                                        "AsnOrg": {
                                                            "description": "Organization that registered this ASN.",
                                                            "type": "string"
                                                        },
                                                        "Isp": {
                                                            "description": "ISP information for the internet provider.",
                                                            "type": "string"
                                                        },
                                                        "Org": {
                                                            "description": "Name of the internet provider.",
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                },
                                "type": "array"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "Activate": {
                "description": "Whether we should start processing the list immediately or not.",
                "type": "boolean"
            },
            "ArchiveFindingsRequest": {
                "description": "ArchiveFindings request body.",
                "properties": {
                    "FindingIds": {
                        "description": "IDs of the findings that you want to archive.",
                        "items": {
                            "description": "The unique identifier for the Finding",
                            "type": "string"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "FindingIds"
                ],
                "type": "object"
            },
            "ArchiveFindingsResponse": {
                "properties": {},
                "type": "object"
            },
            "AwsApiCallAction": {
                "description": "Information about the AWS_API_CALL action described in this finding.",
                "properties": {
                    "Api": {
                        "description": "AWS API name.",
                        "type": "string"
                    },
                    "CallerType": {
                        "description": "AWS API caller type.",
                        "type": "string"
                    },
                    "DomainDetails": {
                        "description": "Domain information for the AWS API call.",
                        "properties": {},
                        "type": "object"
                    },
                    "RemoteIpDetails": {
                        "description": "Remote IP information of the connection.",
                        "properties": {
                            "City": {
                                "description": "City information of the remote IP address.",
                                "properties": {
                                    "CityName": {
                                        "description": "City name of the remote IP address.",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            },
                            "Country": {
                                "description": "Country code of the remote IP address.",
                                "properties": {
                                    "CountryCode": {
                                        "description": "Country code of the remote IP address.",
                                        "type": "string"
                                    },
                                    "CountryName": {
                                        "description": "Country name of the remote IP address.",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            },
                            "GeoLocation": {
                                "description": "Location information of the remote IP address.",
                                "properties": {
                                    "Lat": {
                                        "description": "Latitude information of remote IP address.",
                                        "format": "double",
                                        "type": "number"
                                    },
                                    "Lon": {
                                        "description": "Longitude information of remote IP address.",
                                        "format": "double",
                                        "type": "number"
                                    }
                                },
                                "type": "object"
                            },
                            "IpAddressV4": {
                                "description": "IPV4 remote address of the connection.",
                                "type": "string"
                            },
                            "Organization": {
                                "description": "ISP Organization information of the remote IP address.",
                                "properties": {
                                    "Asn": {
                                        "description": "Autonomous system number of the internet provider of the remote IP address.",
                                        "type": "string"
                                    },
                                    "AsnOrg": {
                                        "description": "Organization that registered this ASN.",
                                        "type": "string"
                                    },
                                    "Isp": {
                                        "description": "ISP information for the internet provider.",
                                        "type": "string"
                                    },
                                    "Org": {
                                        "description": "Name of the internet provider.",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        },
                        "type": "object"
                    },
                    "ServiceName": {
                        "description": "AWS service name whose API was invoked.",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "BadRequestException": {},
            "City": {
                "description": "City information of the remote IP address.",
                "properties": {
                    "CityName": {
                        "description": "City name of the remote IP address.",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "Comments": {
                "description": "Additional feedback about the GuardDuty findings.",
                "type": "string"
            },
            "Condition": {
                "description": "Finding attribute (for example, accountId) for which conditions and values must be specified when querying findings.",
                "properties": {
                    "Eq": {
                        "description": "Represents the equal condition to be applied to a single field when querying for findings.",
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "Gt": {
                        "description": "Represents the greater than condition to be applied to a single field when querying for findings.",
                        "type": "integer"
                    },
                    "Gte": {
                        "description": "Represents the greater than equal condition to be applied to a single field when querying for findings.",
                        "type": "integer"
                    },
                    "Lt": {
                        "description": "Represents the less than condition to be applied to a single field when querying for findings.",
                        "type": "integer"
                    },
                    "Lte": {
                        "description": "Represents the less than equal condition to be applied to a single field when querying for findings.",
                        "type": "integer"
                    },
                    "Neq": {
                        "description": "Represents the not equal condition to be applied to a single field when querying for findings.",
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    }
                },
                "type": "object"
            },
            "CountBySeverityFindingStatistic": {
                "description": "The count of findings for the given severity.",
                "type": "integer"
            },
            "Country": {
                "description": "Country information of the remote IP address.",
                "properties": {
                    "CountryCode": {
                        "description": "Country code of the remote IP address.",
                        "type": "string"
                    },
                    "CountryName": {
                        "description": "Country name of the remote IP address.",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "CreateDetectorRequest": {
                "description": "CreateDetector request body.",
                "properties": {
                    "ClientToken": {
                        "description": "The idempotency token for the create request.",
                        "maxLength": 64,
                        "minLength": 0,
                        "type": "string"
                    },
                    "Enable": {
                        "description": "A boolean value that specifies whether the detector is to be enabled.",
                        "type": "boolean"
                    },
                    "FindingPublishingFrequency": {
                        "description": "A enum value that specifies how frequently customer got Finding updates published.",
                        "enum": [
                            "FIFTEEN_MINUTES",
                            "ONE_HOUR",
                            "SIX_HOURS"
                        ],
                        "type": "string"
                    }
                },
                "required": [
                    "Enable"
                ],
                "type": "object"
            },
            "CreateDetectorResponse": {
                "properties": {
                    "DetectorId": {
                        "description": "The unique ID of the created detector.",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "CreateFilterRequest": {
                "description": "CreateFilterRequest request body.",
                "properties": {
                    "Action": {
                        "description": "Specifies the action that is to be applied to the findings that match the filter.",
                        "enum": [
                            "NOOP",
                            "ARCHIVE"
                        ],
                        "type": "string"
                    },
                    "ClientToken": {
                        "description": "The idempotency token for the create request.",
                        "maxLength": 64,
                        "minLength": 0,
                        "type": "string"
                    },
                    "Description": {
                        "description": "The description of the filter.",
                        "type": "string"
                    },
                    "FindingCriteria": {
                        "description": "Represents the criteria to be used in the filter for querying findings.",
                        "properties": {
                            "Criterion": {
                                "description": "Represents a map of finding properties that match specified conditions and values when querying findings.",
                                "items": {
                                    "properties": {
                                        "key": {
                                            "type": "string"
                                        },
                                        "value": {
                                            "description": "Finding attribute (for example, accountId) for which conditions and values must be specified when querying findings.",
                                            "properties": {
                                                "Eq": {
                                                    "description": "Represents the equal condition to be applied to a single field when querying for findings.",
                                                    "items": {
                                                        "type": "string"
                                                    },
                                                    "type": "array"
                                                },
                                                "Gt": {
                                                    "description": "Represents the greater than condition to be applied to a single field when querying for findings.",
                                                    "type": "integer"
                                                },
                                                "Gte": {
                                                    "description": "Represents the greater than equal condition to be applied to a single field when querying for findings.",
                                                    "type": "integer"
                                                },
                                                "Lt": {
                                                    "description": "Represents the less than condition to be applied to a single field when querying for findings.",
                                                    "type": "integer"
                                                },
                                                "Lte": {
                                                    "description": "Represents the less than equal condition to be applied to a single field when querying for findings.",
                                                    "type": "integer"
                                                },
                                                "Neq": {
                                                    "description": "Represents the not equal condition to be applied to a single field when querying for findings.",
                                                    "items": {
                                                        "type": "string"
                                                    },
                                                    "type": "array"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                },
                                "type": "array"
                            }
                        },
                        "type": "object"
                    },
                    "Name": {
                        "description": "The name of the filter.",
                        "type": "string"
                    },
                    "Rank": {
                        "description": "Specifies the position of the filter in the list of current filters. Also specifies the order in which this filter is applied to the findings.",
                        "type": "integer"
                    }
                },
                "required": [
                    "FindingCriteria",
                    "Name"
                ],
                "type": "object"
            },
            "CreateFilterResponse": {
                "properties": {
                    "Name": {
                        "description": "The name of the successfully created filter.",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "CreateIPSetRequest": {
                "description": "CreateIPSet request body.",
                "properties": {
                    "Activate": {
                        "description": "A boolean value that indicates whether GuardDuty is to start using the uploaded IPSet.",
                        "type": "boolean"
                    },
                    "ClientToken": {
                        "description": "The idempotency token for the create request.",
                        "maxLength": 64,
                        "minLength": 0,
                        "type": "string"
                    },
                    "Format": {
                        "description": "The format of the file that contains the IPSet.",
                        "enum": [
                            "TXT",
                            "STIX",
                            "OTX_CSV",
                            "ALIEN_VAULT",
                            "PROOF_POINT",
                            "FIRE_EYE"
                        ],
                        "type": "string"
                    },
                    "Location": {
                        "description": "The URI of the file that contains the IPSet. For example (https://s3.us-west-2.amazonaws.com/my-bucket/my-object-key)",
                        "type": "string"
                    },
                    "Name": {
                        "description": "The user friendly name to identify the IPSet. This name is displayed in all findings that are triggered by activity that involves IP addresses included in this IPSet.",
                        "type": "string"
                    }
                },
                "required": [
                    "Format",
                    "Activate",
                    "Location",
                    "Name"
                ],
                "type": "object"
            },
            "CreateIPSetResponse": {
                "properties": {
                    "IpSetId": {
                        "description": "The unique identifier for an IP Set",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "CreateMembersRequest": {
                "description": "CreateMembers request body.",
                "properties": {
                    "AccountDetails": {
                        "description": "A list of account ID and email address pairs of the accounts that you want to associate with the master GuardDuty account.",
                        "items": {
                            "description": "An object containing the member's accountId and email address.",
                            "properties": {
                                "AccountId": {
                                    "description": "Member account ID.",
                                    "type": "string"
                                },
                                "Email": {
                                    "description": "Member account's email address.",
                                    "type": "string"
                                }
                            },
                            "required": [
                                "Email",
                                "AccountId"
                            ],
                            "type": "object"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "AccountDetails"
                ],
                "type": "object"
            },
            "CreateMembersResponse": {
                "properties": {
                    "UnprocessedAccounts": {
                        "description": "A list of objects containing the unprocessed account and a result string explaining why it was unprocessed.",
                        "items": {
                            "description": "An object containing the unprocessed account and a result string explaining why it was unprocessed.",
                            "properties": {
                                "AccountId": {
                                    "description": "AWS Account ID.",
                                    "type": "string"
                                },
                                "Result": {
                                    "description": "A reason why the account hasn't been processed.",
                                    "type": "string"
                                }
                            },
                            "required": [
                                "AccountId",
                                "Result"
                            ],
                            "type": "object"
                        },
                        "type": "array"
                    }
                },
                "type": "object"
            },
            "CreateSampleFindingsRequest": {
                "description": "CreateSampleFindings request body.",
                "properties": {
                    "FindingTypes": {
                        "description": "Types of sample findings that you want to generate.",
                        "items": {
                            "description": "The finding type for the finding",
                            "type": "string"
                        },
                        "type": "array"
                    }
                },
                "type": "object"
            },
            "CreateSampleFindingsResponse": {
                "properties": {},
                "type": "object"
            },
            "CreateThreatIntelSetRequest": {
                "description": "CreateThreatIntelSet request body.",
                "properties": {
                    "Activate": {
                        "description": "A boolean value that indicates whether GuardDuty is to start using the uploaded ThreatIntelSet.",
                        "type": "boolean"
                    },
                    "ClientToken": {
                        "description": "The idempotency token for the create request.",
                        "maxLength": 64,
                        "minLength": 0,
                        "type": "string"
                    },
                    "Format": {
                        "description": "The format of the file that contains the ThreatIntelSet.",
                        "enum": [
                            "TXT",
                            "STIX",
                            "OTX_CSV",
                            "ALIEN_VAULT",
                            "PROOF_POINT",
                            "FIRE_EYE"
                        ],
                        "type": "string"
                    },
                    "Location": {
                        "description": "The URI of the file that contains the ThreatIntelSet. For example (https://s3.us-west-2.amazonaws.com/my-bucket/my-object-key).",
                        "type": "string"
                    },
                    "Name": {
                        "description": "A user-friendly ThreatIntelSet name that is displayed in all finding generated by activity that involves IP addresses included in this ThreatIntelSet.",
                        "type": "string"
                    }
                },
                "required": [
                    "Format",
                    "Activate",
                    "Location",
                    "Name"
                ],
                "type": "object"
            },
            "CreateThreatIntelSetResponse": {
                "properties": {
                    "ThreatIntelSetId": {
                        "description": "The unique identifier for an threat intel set",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "CreatedAt": {
                "description": "The first time a resource was created. The format will be ISO-8601.",
                "type": "string"
            },
            "DeclineInvitationsRequest": {
                "description": "DeclineInvitations request body.",
                "properties": {
                    "AccountIds": {
                        "description": "A list of account IDs of the AWS accounts that sent invitations to the current member account that you want to decline invitations from.",
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "AccountIds"
                ],
                "type": "object"
            },
            "DeclineInvitationsResponse": {
                "properties": {
                    "UnprocessedAccounts": {
                        "description": "A list of objects containing the unprocessed account and a result string explaining why it was unprocessed.",
                        "items": {
                            "description": "An object containing the unprocessed account and a result string explaining why it was unprocessed.",
                            "properties": {
                                "AccountId": {
                                    "description": "AWS Account ID.",
                                    "type": "string"
                                },
                                "Result": {
                                    "description": "A reason why the account hasn't been processed.",
                                    "type": "string"
                                }
                            },
                            "required": [
                                "AccountId",
                                "Result"
                            ],
                            "type": "object"
                        },
                        "type": "array"
                    }
                },
                "type": "object"
            },
            "DeleteDetectorRequest": {
                "properties": {},
                "type": "object"
            },
            "DeleteDetectorResponse": {
                "properties": {},
                "type": "object"
            },
            "DeleteFilterRequest": {
                "properties": {},
                "type": "object"
            },
            "DeleteFilterResponse": {
                "properties": {},
                "type": "object"
            },
            "DeleteIPSetRequest": {
                "properties": {},
                "type": "object"
            },
            "DeleteIPSetResponse": {
                "properties": {},
                "type": "object"
            },
            "DeleteInvitationsRequest": {
                "description": "DeleteInvitations request body.",
                "properties": {
                    "AccountIds": {
                        "description": "A list of account IDs of the AWS accounts that sent invitations to the current member account that you want to delete invitations from.",
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "AccountIds"
                ],
                "type": "object"
            },
            "DeleteInvitationsResponse": {
                "properties": {
                    "UnprocessedAccounts": {
                        "description": "A list of objects containing the unprocessed account and a result string explaining why it was unprocessed.",
                        "items": {
                            "description": "An object containing the unprocessed account and a result string explaining why it was unprocessed.",
                            "properties": {
                                "AccountId": {
                                    "description": "AWS Account ID.",
                                    "type": "string"
                                },
                                "Result": {
                                    "description": "A reason why the account hasn't been processed.",
                                    "type": "string"
                                }
                            },
                            "required": [
                                "AccountId",
                                "Result"
                            ],
                            "type": "object"
                        },
                        "type": "array"
                    }
                },
                "type": "object"
            },
            "DeleteMembersRequest": {
                "description": "DeleteMembers request body.",
                "properties": {
                    "AccountIds": {
                        "description": "A list of account IDs of the GuardDuty member accounts that you want to delete.",
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "AccountIds"
                ],
                "type": "object"
            },
            "DeleteMembersResponse": {
                "properties": {
                    "UnprocessedAccounts": {
                        "description": "A list of objects containing the unprocessed account and a result string explaining why it was unprocessed.",
                        "items": {
                            "description": "An object containing the unprocessed account and a result string explaining why it was unprocessed.",
                            "properties": {
                                "AccountId": {
                                    "description": "AWS Account ID.",
                                    "type": "string"
                                },
                                "Result": {
                                    "description": "A reason why the account hasn't been processed.",
                                    "type": "string"
                                }
                            },
                            "required": [
                                "AccountId",
                                "Result"
                            ],
                            "type": "object"
                        },
                        "type": "array"
                    }
                },
                "type": "object"
            },
            "DeleteThreatIntelSetRequest": {
                "properties": {},
                "type": "object"
            },
            "DeleteThreatIntelSetResponse": {
                "properties": {},
                "type": "object"
            },
            "DetectorId": {
                "description": "The unique identifier for a detector.",
                "type": "string"
            },
            "DetectorIds": {
                "description": "A list of detector Ids.",
                "items": {
                    "description": "The unique identifier for a detector.",
                    "type": "string"
                },
                "type": "array"
            },
            "DetectorStatus": {
                "description": "The status of detector.",
                "enum": [
                    "ENABLED",
                    "DISABLED"
                ],
                "type": "string"
            },
            "DisassociateFromMasterAccountRequest": {
                "properties": {},
                "type": "object"
            },
            "DisassociateFromMasterAccountResponse": {
                "properties": {},
                "type": "object"
            },
            "DisassociateMembersRequest": {
                "description": "DisassociateMembers request body.",
                "properties": {
                    "AccountIds": {
                        "description": "A list of account IDs of the GuardDuty member accounts that you want to disassociate from master.",
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "AccountIds"
                ],
                "type": "object"
            },
            "DisassociateMembersResponse": {
                "properties": {
                    "UnprocessedAccounts": {
                        "description": "A list of objects containing the unprocessed account and a result string explaining why it was unprocessed.",
                        "items": {
                            "description": "An object containing the unprocessed account and a result string explaining why it was unprocessed.",
                            "properties": {
                                "AccountId": {
                                    "description": "AWS Account ID.",
                                    "type": "string"
                                },
                                "Result": {
                                    "description": "A reason why the account hasn't been processed.",
                                    "type": "string"
                                }
                            },
                            "required": [
                                "AccountId",
                                "Result"
                            ],
                            "type": "object"
                        },
                        "type": "array"
                    }
                },
                "type": "object"
            },
            "DnsRequestAction": {
                "description": "Information about the DNS_REQUEST action described in this finding.",
                "properties": {
                    "Domain": {
                        "description": "Domain information for the DNS request.",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "Domain": {
                "description": "A domain name.",
                "type": "string"
            },
            "DomainDetails": {
                "description": "Domain information for the AWS API call.",
                "properties": {},
                "type": "object"
            },
            "Email": {
                "description": "Member account's email address.",
                "type": "string"
            },
            "Enable": {
                "description": "A boolean value that specifies whether the detector is to be enabled.",
                "type": "boolean"
            },
            "Eq": {
                "description": "Represents the equal condition to be applied to a single field when querying for findings.",
                "items": {
                    "type": "string"
                },
                "type": "array"
            },
            "Feedback": {
                "description": "Finding Feedback Value",
                "enum": [
                    "USEFUL",
                    "NOT_USEFUL"
                ],
                "type": "string"
            },
            "FilterAction": {
                "description": "The action associated with a filter.",
                "enum": [
                    "NOOP",
                    "ARCHIVE"
                ],
                "type": "string"
            },
            "FilterDescription": {
                "description": "The filter description",
                "type": "string"
            },
            "FilterName": {
                "description": "The unique identifier for a filter",
                "type": "string"
            },
            "FilterNames": {
                "description": "A list of filter names",
                "items": {
                    "description": "The unique identifier for a filter",
                    "type": "string"
                },
                "type": "array"
            },
            "FilterRank": {
                "description": "Relative position of filter among list of exisiting filters.",
                "type": "integer"
            },
            "Finding": {
                "description": "Representation of a abnormal or suspicious activity.",
                "properties": {
                    "AccountId": {
                        "description": "AWS account ID where the activity occurred that prompted GuardDuty to generate a finding.",
                        "type": "string"
                    },
                    "Arn": {
                        "description": "The ARN of a finding described by the action.",
                        "type": "string"
                    },
                    "Confidence": {
                        "description": "The confidence level of a finding.",
                        "format": "double",
                        "type": "number"
                    },
                    "CreatedAt": {
                        "description": "The time stamp at which a finding was generated.",
                        "type": "string"
                    },
                    "Description": {
                        "description": "The description of a finding.",
                        "type": "string"
                    },
                    "Id": {
                        "description": "The identifier that corresponds to a finding described by the action.",
                        "type": "string"
                    },
                    "Partition": {
                        "description": "The AWS resource partition.",
                        "type": "string"
                    },
                    "Region": {
                        "description": "The AWS region where the activity occurred that prompted GuardDuty to generate a finding.",
                        "type": "string"
                    },
                    "Resource": {
                        "description": "The AWS resource associated with the activity that prompted GuardDuty to generate a finding.",
                        "properties": {
                            "AccessKeyDetails": {
                                "description": "The IAM access key details (IAM user information) of a user that engaged in the activity that prompted GuardDuty to generate a finding.",
                                "properties": {
                                    "AccessKeyId": {
                                        "description": "Access key ID of the user.",
                                        "type": "string"
                                    },
                                    "PrincipalId": {
                                        "description": "The principal ID of the user.",
                                        "type": "string"
                                    },
                                    "UserName": {
                                        "description": "The name of the user.",
                                        "type": "string"
                                    },
                                    "UserType": {
                                        "description": "The type of the user.",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            },
                            "InstanceDetails": {
                                "description": "The information about the EC2 instance associated with the activity that prompted GuardDuty to generate a finding.",
                                "properties": {
                                    "AvailabilityZone": {
                                        "description": "The availability zone of the EC2 instance.",
                                        "type": "string"
                                    },
                                    "IamInstanceProfile": {
                                        "description": "The profile information of the EC2 instance.",
                                        "properties": {
                                            "Arn": {
                                                "description": "AWS EC2 instance profile ARN.",
                                                "type": "string"
                                            },
                                            "Id": {
                                                "description": "AWS EC2 instance profile ID.",
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "ImageDescription": {
                                        "description": "The image description of the EC2 instance.",
                                        "type": "string"
                                    },
                                    "ImageId": {
                                        "description": "The image ID of the EC2 instance.",
                                        "type": "string"
                                    },
                                    "InstanceId": {
                                        "description": "The ID of the EC2 instance.",
                                        "type": "string"
                                    },
                                    "InstanceState": {
                                        "description": "The state of the EC2 instance.",
                                        "type": "string"
                                    },
                                    "InstanceType": {
                                        "description": "The type of the EC2 instance.",
                                        "type": "string"
                                    },
                                    "LaunchTime": {
                                        "description": "The launch time of the EC2 instance.",
                                        "type": "string"
                                    },
                                    "NetworkInterfaces": {
                                        "description": "The network interface information of the EC2 instance.",
                                        "items": {
                                            "description": "The network interface information of the EC2 instance.",
                                            "properties": {
                                                "Ipv6Addresses": {
                                                    "description": "A list of EC2 instance IPv6 address information.",
                                                    "items": {
                                                        "description": "IpV6 address of the EC2 instance.",
                                                        "type": "string"
                                                    },
                                                    "type": "array"
                                                },
                                                "NetworkInterfaceId": {
                                                    "description": "The ID of the network interface",
                                                    "type": "string"
                                                },
                                                "PrivateDnsName": {
                                                    "description": "Private DNS name of the EC2 instance.",
                                                    "type": "string"
                                                },
                                                "PrivateIpAddress": {
                                                    "description": "Private IP address of the EC2 instance.",
                                                    "type": "string"
                                                },
                                                "PrivateIpAddresses": {
                                                    "description": "Other private IP address information of the EC2 instance.",
                                                    "items": {
                                                        "description": "Other private IP address information of the EC2 instance.",
                                                        "properties": {
                                                            "PrivateDnsName": {
                                                                "description": "Private DNS name of the EC2 instance.",
                                                                "type": "string"
                                                            },
                                                            "PrivateIpAddress": {
                                                                "description": "Private IP address of the EC2 instance.",
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "type": "array"
                                                },
                                                "PublicDnsName": {
                                                    "description": "Public DNS name of the EC2 instance.",
                                                    "type": "string"
                                                },
                                                "PublicIp": {
                                                    "description": "Public IP address of the EC2 instance.",
                                                    "type": "string"
                                                },
                                                "SecurityGroups": {
                                                    "description": "Security groups associated with the EC2 instance.",
                                                    "items": {
                                                        "description": "Security groups associated with the EC2 instance.",
                                                        "properties": {
                                                            "GroupId": {
                                                                "description": "EC2 instance's security group ID.",
                                                                "type": "string"
                                                            },
                                                            "GroupName": {
                                                                "description": "EC2 instance's security group name.",
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "type": "array"
                                                },
                                                "SubnetId": {
                                                    "description": "The subnet ID of the EC2 instance.",
                                                    "type": "string"
                                                },
                                                "VpcId": {
                                                    "description": "The VPC ID of the EC2 instance.",
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "type": "array"
                                    },
                                    "Platform": {
                                        "description": "The platform of the EC2 instance.",
                                        "type": "string"
                                    },
                                    "ProductCodes": {
                                        "description": "The product code of the EC2 instance.",
                                        "items": {
                                            "description": "The product code of the EC2 instance.",
                                            "properties": {
                                                "Code": {
                                                    "description": "Product code information.",
                                                    "type": "string"
                                                },
                                                "ProductType": {
                                                    "description": "Product code type.",
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "type": "array"
                                    },
                                    "Tags": {
                                        "description": "The tags of the EC2 instance.",
                                        "items": {
                                            "description": "A tag of the EC2 instance.",
                                            "properties": {
                                                "Key": {
                                                    "description": "EC2 instance tag key.",
                                                    "type": "string"
                                                },
                                                "Value": {
                                                    "description": "EC2 instance tag value.",
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "type": "array"
                                    }
                                },
                                "type": "object"
                            },
                            "ResourceType": {
                                "description": "The type of the AWS resource.",
                                "type": "string"
                            }
                        },
                        "type": "object"
                    },
                    "SchemaVersion": {
                        "description": "Findings' schema version.",
                        "type": "string"
                    },
                    "Service": {
                        "description": "Additional information assigned to the generated finding by GuardDuty.",
                        "properties": {
                            "Action": {
                                "description": "Information about the activity described in a finding.",
                                "properties": {
                                    "ActionType": {
                                        "description": "GuardDuty Finding activity type.",
                                        "type": "string"
                                    },
                                    "AwsApiCallAction": {
                                        "description": "Information about the AWS_API_CALL action described in this finding.",
                                        "properties": {
                                            "Api": {
                                                "description": "AWS API name.",
                                                "type": "string"
                                            },
                                            "CallerType": {
                                                "description": "AWS API caller type.",
                                                "type": "string"
                                            },
                                            "DomainDetails": {
                                                "description": "Domain information for the AWS API call.",
                                                "properties": {},
                                                "type": "object"
                                            },
                                            "RemoteIpDetails": {
                                                "description": "Remote IP information of the connection.",
                                                "properties": {
                                                    "City": {
                                                        "description": "City information of the remote IP address.",
                                                        "properties": {
                                                            "CityName": {
                                                                "description": "City name of the remote IP address.",
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "Country": {
                                                        "description": "Country code of the remote IP address.",
                                                        "properties": {
                                                            "CountryCode": {
                                                                "description": "Country code of the remote IP address.",
                                                                "type": "string"
                                                            },
                                                            "CountryName": {
                                                                "description": "Country name of the remote IP address.",
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "GeoLocation": {
                                                        "description": "Location information of the remote IP address.",
                                                        "properties": {
                                                            "Lat": {
                                                                "description": "Latitude information of remote IP address.",
                                                                "format": "double",
                                                                "type": "number"
                                                            },
                                                            "Lon": {
                                                                "description": "Longitude information of remote IP address.",
                                                                "format": "double",
                                                                "type": "number"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "IpAddressV4": {
                                                        "description": "IPV4 remote address of the connection.",
                                                        "type": "string"
                                                    },
                                                    "Organization": {
                                                        "description": "ISP Organization information of the remote IP address.",
                                                        "properties": {
                                                            "Asn": {
                                                                "description": "Autonomous system number of the internet provider of the remote IP address.",
                                                                "type": "string"
                                                            },
                                                            "AsnOrg": {
                                                                "description": "Organization that registered this ASN.",
                                                                "type": "string"
                                                            },
                                                            "Isp": {
                                                                "description": "ISP information for the internet provider.",
                                                                "type": "string"
                                                            },
                                                            "Org": {
                                                                "description": "Name of the internet provider.",
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "ServiceName": {
                                                "description": "AWS service name whose API was invoked.",
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "DnsRequestAction": {
                                        "description": "Information about the DNS_REQUEST action described in this finding.",
                                        "properties": {
                                            "Domain": {
                                                "description": "Domain information for the DNS request.",
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "NetworkConnectionAction": {
                                        "description": "Information about the NETWORK_CONNECTION action described in this finding.",
                                        "properties": {
                                            "Blocked": {
                                                "description": "Network connection blocked information.",
                                                "type": "boolean"
                                            },
                                            "ConnectionDirection": {
                                                "description": "Network connection direction.",
                                                "type": "string"
                                            },
                                            "LocalPortDetails": {
                                                "description": "Local port information of the connection.",
                                                "properties": {
                                                    "Port": {
                                                        "description": "Port number of the local connection.",
                                                        "type": "integer"
                                                    },
                                                    "PortName": {
                                                        "description": "Port name of the local connection.",
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "Protocol": {
                                                "description": "Network connection protocol.",
                                                "type": "string"
                                            },
                                            "RemoteIpDetails": {
                                                "description": "Remote IP information of the connection.",
                                                "properties": {
                                                    "City": {
                                                        "description": "City information of the remote IP address.",
                                                        "properties": {
                                                            "CityName": {
                                                                "description": "City name of the remote IP address.",
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "Country": {
                                                        "description": "Country code of the remote IP address.",
                                                        "properties": {
                                                            "CountryCode": {
                                                                "description": "Country code of the remote IP address.",
                                                                "type": "string"
                                                            },
                                                            "CountryName": {
                                                                "description": "Country name of the remote IP address.",
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "GeoLocation": {
                                                        "description": "Location information of the remote IP address.",
                                                        "properties": {
                                                            "Lat": {
                                                                "description": "Latitude information of remote IP address.",
                                                                "format": "double",
                                                                "type": "number"
                                                            },
                                                            "Lon": {
                                                                "description": "Longitude information of remote IP address.",
                                                                "format": "double",
                                                                "type": "number"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "IpAddressV4": {
                                                        "description": "IPV4 remote address of the connection.",
                                                        "type": "string"
                                                    },
                                                    "Organization": {
                                                        "description": "ISP Organization information of the remote IP address.",
                                                        "properties": {
                                                            "Asn": {
                                                                "description": "Autonomous system number of the internet provider of the remote IP address.",
                                                                "type": "string"
                                                            },
                                                            "AsnOrg": {
                                                                "description": "Organization that registered this ASN.",
                                                                "type": "string"
                                                            },
                                                            "Isp": {
                                                                "description": "ISP information for the internet provider.",
                                                                "type": "string"
                                                            },
                                                            "Org": {
                                                                "description": "Name of the internet provider.",
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "RemotePortDetails": {
                                                "description": "Remote port information of the connection.",
                                                "properties": {
                                                    "Port": {
                                                        "description": "Port number of the remote connection.",
                                                        "type": "integer"
                                                    },
                                                    "PortName": {
                                                        "description": "Port name of the remote connection.",
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "PortProbeAction": {
                                        "description": "Information about the PORT_PROBE action described in this finding.",
                                        "properties": {
                                            "Blocked": {
                                                "description": "Port probe blocked information.",
                                                "type": "boolean"
                                            },
                                            "PortProbeDetails": {
                                                "description": "A list of port probe details objects.",
                                                "items": {
                                                    "description": "Details about the port probe finding.",
                                                    "properties": {
                                                        "LocalPortDetails": {
                                                            "description": "Local port information of the connection.",
                                                            "properties": {
                                                                "Port": {
                                                                    "description": "Port number of the local connection.",
                                                                    "type": "integer"
                                                                },
                                                                "PortName": {
                                                                    "description": "Port name of the local connection.",
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "RemoteIpDetails": {
                                                            "description": "Remote IP information of the connection.",
                                                            "properties": {
                                                                "City": {
                                                                    "description": "City information of the remote IP address.",
                                                                    "properties": {
                                                                        "CityName": {
                                                                            "description": "City name of the remote IP address.",
                                                                            "type": "string"
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                },
                                                                "Country": {
                                                                    "description": "Country code of the remote IP address.",
                                                                    "properties": {
                                                                        "CountryCode": {
                                                                            "description": "Country code of the remote IP address.",
                                                                            "type": "string"
                                                                        },
                                                                        "CountryName": {
                                                                            "description": "Country name of the remote IP address.",
                                                                            "type": "string"
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                },
                                                                "GeoLocation": {
                                                                    "description": "Location information of the remote IP address.",
                                                                    "properties": {
                                                                        "Lat": {
                                                                            "description": "Latitude information of remote IP address.",
                                                                            "format": "double",
                                                                            "type": "number"
                                                                        },
                                                                        "Lon": {
                                                                            "description": "Longitude information of remote IP address.",
                                                                            "format": "double",
                                                                            "type": "number"
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                },
                                                                "IpAddressV4": {
                                                                    "description": "IPV4 remote address of the connection.",
                                                                    "type": "string"
                                                                },
                                                                "Organization": {
                                                                    "description": "ISP Organization information of the remote IP address.",
                                                                    "properties": {
                                                                        "Asn": {
                                                                            "description": "Autonomous system number of the internet provider of the remote IP address.",
                                                                            "type": "string"
                                                                        },
                                                                        "AsnOrg": {
                                                                            "description": "Organization that registered this ASN.",
                                                                            "type": "string"
                                                                        },
                                                                        "Isp": {
                                                                            "description": "ISP information for the internet provider.",
                                                                            "type": "string"
                                                                        },
                                                                        "Org": {
                                                                            "description": "Name of the internet provider.",
                                                                            "type": "string"
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                }
                                                            },
                                                            "type": "object"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "type": "array"
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "type": "object"
                            },
                            "Archived": {
                                "description": "Indicates whether this finding is archived.",
                                "type": "boolean"
                            },
                            "Count": {
                                "description": "Total count of the occurrences of this finding type.",
                                "type": "integer"
                            },
                            "DetectorId": {
                                "description": "Detector ID for the GuardDuty service.",
                                "type": "string"
                            },
                            "EventFirstSeen": {
                                "description": "First seen timestamp of the activity that prompted GuardDuty to generate this finding.",
                                "type": "string"
                            },
                            "EventLastSeen": {
                                "description": "Last seen timestamp of the activity that prompted GuardDuty to generate this finding.",
                                "type": "string"
                            },
                            "ResourceRole": {
                                "description": "Resource role information for this finding.",
                                "type": "string"
                            },
                            "ServiceName": {
                                "description": "The name of the AWS service (GuardDuty) that generated a finding.",
                                "type": "string"
                            },
                            "UserFeedback": {
                                "description": "Feedback left about the finding.",
                                "type": "string"
                            }
                        },
                        "type": "object"
                    },
                    "Severity": {
                        "description": "The severity of a finding.",
                        "format": "double",
                        "type": "number"
                    },
                    "Title": {
                        "description": "The title of a finding.",
                        "type": "string"
                    },
                    "Type": {
                        "description": "The type of a finding described by the action.",
                        "type": "string"
                    },
                    "UpdatedAt": {
                        "description": "The time stamp at which a finding was last updated.",
                        "type": "string"
                    }
                },
                "required": [
                    "AccountId",
                    "SchemaVersion",
                    "CreatedAt",
                    "Resource",
                    "Severity",
                    "UpdatedAt",
                    "Type",
                    "Region",
                    "Id",
                    "Arn"
                ],
                "type": "object"
            },
            "FindingCriteria": {
                "description": "Represents the criteria used for querying findings.",
                "properties": {
                    "Criterion": {
                        "description": "Represents a map of finding properties that match specified conditions and values when querying findings.",
                        "items": {
                            "properties": {
                                "key": {
                                    "type": "string"
                                },
                                "value": {
                                    "description": "Finding attribute (for example, accountId) for which conditions and values must be specified when querying findings.",
                                    "properties": {
                                        "Eq": {
                                            "description": "Represents the equal condition to be applied to a single field when querying for findings.",
                                            "items": {
                                                "type": "string"
                                            },
                                            "type": "array"
                                        },
                                        "Gt": {
                                            "description": "Represents the greater than condition to be applied to a single field when querying for findings.",
                                            "type": "integer"
                                        },
                                        "Gte": {
                                            "description": "Represents the greater than equal condition to be applied to a single field when querying for findings.",
                                            "type": "integer"
                                        },
                                        "Lt": {
                                            "description": "Represents the less than condition to be applied to a single field when querying for findings.",
                                            "type": "integer"
                                        },
                                        "Lte": {
                                            "description": "Represents the less than equal condition to be applied to a single field when querying for findings.",
                                            "type": "integer"
                                        },
                                        "Neq": {
                                            "description": "Represents the not equal condition to be applied to a single field when querying for findings.",
                                            "items": {
                                                "type": "string"
                                            },
                                            "type": "array"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "type": "object"
                        },
                        "type": "array"
                    }
                },
                "type": "object"
            },
            "FindingId": {
                "description": "The unique identifier for the Finding",
                "type": "string"
            },
            "FindingIds": {
                "description": "The list of the Findings.",
                "items": {
                    "description": "The unique identifier for the Finding",
                    "type": "string"
                },
                "type": "array"
            },
            "FindingPublishingFrequency": {
                "description": "A enum value that specifies how frequently customer got Finding updates published.",
                "enum": [
                    "FIFTEEN_MINUTES",
                    "ONE_HOUR",
                    "SIX_HOURS"
                ],
                "type": "string"
            },
            "FindingStatisticType": {
                "description": "The types of finding statistics.",
                "enum": [
                    "COUNT_BY_SEVERITY"
                ],
                "type": "string"
            },
            "FindingStatisticTypes": {
                "description": "The list of the finding statistics.",
                "items": {
                    "description": "The types of finding statistics.",
                    "enum": [
                        "COUNT_BY_SEVERITY"
                    ],
                    "type": "string"
                },
                "type": "array"
            },
            "FindingStatistics": {
                "description": "Finding statistics object.",
                "properties": {
                    "CountBySeverity": {
                        "description": "Represents a map of severity to count statistic for a set of findings",
                        "items": {
                            "properties": {
                                "key": {
                                    "type": "string"
                                },
                                "value": {
                                    "description": "The count of findings for the given severity.",
                                    "type": "integer"
                                }
                            },
                            "type": "object"
                        },
                        "type": "array"
                    }
                },
                "type": "object"
            },
            "FindingType": {
                "description": "The finding type for the finding",
                "type": "string"
            },
            "FindingTypes": {
                "description": "The list of the finding types.",
                "items": {
                    "description": "The finding type for the finding",
                    "type": "string"
                },
                "type": "array"
            },
            "Findings": {
                "description": "A list of findings.",
                "items": {
                    "description": "Representation of a abnormal or suspicious activity.",
                    "properties": {
                        "AccountId": {
                            "description": "AWS account ID where the activity occurred that prompted GuardDuty to generate a finding.",
                            "type": "string"
                        },
                        "Arn": {
                            "description": "The ARN of a finding described by the action.",
                            "type": "string"
                        },
                        "Confidence": {
                            "description": "The confidence level of a finding.",
                            "format": "double",
                            "type": "number"
                        },
                        "CreatedAt": {
                            "description": "The time stamp at which a finding was generated.",
                            "type": "string"
                        },
                        "Description": {
                            "description": "The description of a finding.",
                            "type": "string"
                        },
                        "Id": {
                            "description": "The identifier that corresponds to a finding described by the action.",
                            "type": "string"
                        },
                        "Partition": {
                            "description": "The AWS resource partition.",
                            "type": "string"
                        },
                        "Region": {
                            "description": "The AWS region where the activity occurred that prompted GuardDuty to generate a finding.",
                            "type": "string"
                        },
                        "Resource": {
                            "description": "The AWS resource associated with the activity that prompted GuardDuty to generate a finding.",
                            "properties": {
                                "AccessKeyDetails": {
                                    "description": "The IAM access key details (IAM user information) of a user that engaged in the activity that prompted GuardDuty to generate a finding.",
                                    "properties": {
                                        "AccessKeyId": {
                                            "description": "Access key ID of the user.",
                                            "type": "string"
                                        },
                                        "PrincipalId": {
                                            "description": "The principal ID of the user.",
                                            "type": "string"
                                        },
                                        "UserName": {
                                            "description": "The name of the user.",
                                            "type": "string"
                                        },
                                        "UserType": {
                                            "description": "The type of the user.",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                },
                                "InstanceDetails": {
                                    "description": "The information about the EC2 instance associated with the activity that prompted GuardDuty to generate a finding.",
                                    "properties": {
                                        "AvailabilityZone": {
                                            "description": "The availability zone of the EC2 instance.",
                                            "type": "string"
                                        },
                                        "IamInstanceProfile": {
                                            "description": "The profile information of the EC2 instance.",
                                            "properties": {
                                                "Arn": {
                                                    "description": "AWS EC2 instance profile ARN.",
                                                    "type": "string"
                                                },
                                                "Id": {
                                                    "description": "AWS EC2 instance profile ID.",
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "ImageDescription": {
                                            "description": "The image description of the EC2 instance.",
                                            "type": "string"
                                        },
                                        "ImageId": {
                                            "description": "The image ID of the EC2 instance.",
                                            "type": "string"
                                        },
                                        "InstanceId": {
                                            "description": "The ID of the EC2 instance.",
                                            "type": "string"
                                        },
                                        "InstanceState": {
                                            "description": "The state of the EC2 instance.",
                                            "type": "string"
                                        },
                                        "InstanceType": {
                                            "description": "The type of the EC2 instance.",
                                            "type": "string"
                                        },
                                        "LaunchTime": {
                                            "description": "The launch time of the EC2 instance.",
                                            "type": "string"
                                        },
                                        "NetworkInterfaces": {
                                            "description": "The network interface information of the EC2 instance.",
                                            "items": {
                                                "description": "The network interface information of the EC2 instance.",
                                                "properties": {
                                                    "Ipv6Addresses": {
                                                        "description": "A list of EC2 instance IPv6 address information.",
                                                        "items": {
                                                            "description": "IpV6 address of the EC2 instance.",
                                                            "type": "string"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "NetworkInterfaceId": {
                                                        "description": "The ID of the network interface",
                                                        "type": "string"
                                                    },
                                                    "PrivateDnsName": {
                                                        "description": "Private DNS name of the EC2 instance.",
                                                        "type": "string"
                                                    },
                                                    "PrivateIpAddress": {
                                                        "description": "Private IP address of the EC2 instance.",
                                                        "type": "string"
                                                    },
                                                    "PrivateIpAddresses": {
                                                        "description": "Other private IP address information of the EC2 instance.",
                                                        "items": {
                                                            "description": "Other private IP address information of the EC2 instance.",
                                                            "properties": {
                                                                "PrivateDnsName": {
                                                                    "description": "Private DNS name of the EC2 instance.",
                                                                    "type": "string"
                                                                },
                                                                "PrivateIpAddress": {
                                                                    "description": "Private IP address of the EC2 instance.",
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "PublicDnsName": {
                                                        "description": "Public DNS name of the EC2 instance.",
                                                        "type": "string"
                                                    },
                                                    "PublicIp": {
                                                        "description": "Public IP address of the EC2 instance.",
                                                        "type": "string"
                                                    },
                                                    "SecurityGroups": {
                                                        "description": "Security groups associated with the EC2 instance.",
                                                        "items": {
                                                            "description": "Security groups associated with the EC2 instance.",
                                                            "properties": {
                                                                "GroupId": {
                                                                    "description": "EC2 instance's security group ID.",
                                                                    "type": "string"
                                                                },
                                                                "GroupName": {
                                                                    "description": "EC2 instance's security group name.",
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "SubnetId": {
                                                        "description": "The subnet ID of the EC2 instance.",
                                                        "type": "string"
                                                    },
                                                    "VpcId": {
                                                        "description": "The VPC ID of the EC2 instance.",
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "Platform": {
                                            "description": "The platform of the EC2 instance.",
                                            "type": "string"
                                        },
                                        "ProductCodes": {
                                            "description": "The product code of the EC2 instance.",
                                            "items": {
                                                "description": "The product code of the EC2 instance.",
                                                "properties": {
                                                    "Code": {
                                                        "description": "Product code information.",
                                                        "type": "string"
                                                    },
                                                    "ProductType": {
                                                        "description": "Product code type.",
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "Tags": {
                                            "description": "The tags of the EC2 instance.",
                                            "items": {
                                                "description": "A tag of the EC2 instance.",
                                                "properties": {
                                                    "Key": {
                                                        "description": "EC2 instance tag key.",
                                                        "type": "string"
                                                    },
                                                    "Value": {
                                                        "description": "EC2 instance tag value.",
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        }
                                    },
                                    "type": "object"
                                },
                                "ResourceType": {
                                    "description": "The type of the AWS resource.",
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "SchemaVersion": {
                            "description": "Findings' schema version.",
                            "type": "string"
                        },
                        "Service": {
                            "description": "Additional information assigned to the generated finding by GuardDuty.",
                            "properties": {
                                "Action": {
                                    "description": "Information about the activity described in a finding.",
                                    "properties": {
                                        "ActionType": {
                                            "description": "GuardDuty Finding activity type.",
                                            "type": "string"
                                        },
                                        "AwsApiCallAction": {
                                            "description": "Information about the AWS_API_CALL action described in this finding.",
                                            "properties": {
                                                "Api": {
                                                    "description": "AWS API name.",
                                                    "type": "string"
                                                },
                                                "CallerType": {
                                                    "description": "AWS API caller type.",
                                                    "type": "string"
                                                },
                                                "DomainDetails": {
                                                    "description": "Domain information for the AWS API call.",
                                                    "properties": {},
                                                    "type": "object"
                                                },
                                                "RemoteIpDetails": {
                                                    "description": "Remote IP information of the connection.",
                                                    "properties": {
                                                        "City": {
                                                            "description": "City information of the remote IP address.",
                                                            "properties": {
                                                                "CityName": {
                                                                    "description": "City name of the remote IP address.",
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "Country": {
                                                            "description": "Country code of the remote IP address.",
                                                            "properties": {
                                                                "CountryCode": {
                                                                    "description": "Country code of the remote IP address.",
                                                                    "type": "string"
                                                                },
                                                                "CountryName": {
                                                                    "description": "Country name of the remote IP address.",
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "GeoLocation": {
                                                            "description": "Location information of the remote IP address.",
                                                            "properties": {
                                                                "Lat": {
                                                                    "description": "Latitude information of remote IP address.",
                                                                    "format": "double",
                                                                    "type": "number"
                                                                },
                                                                "Lon": {
                                                                    "description": "Longitude information of remote IP address.",
                                                                    "format": "double",
                                                                    "type": "number"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "IpAddressV4": {
                                                            "description": "IPV4 remote address of the connection.",
                                                            "type": "string"
                                                        },
                                                        "Organization": {
                                                            "description": "ISP Organization information of the remote IP address.",
                                                            "properties": {
                                                                "Asn": {
                                                                    "description": "Autonomous system number of the internet provider of the remote IP address.",
                                                                    "type": "string"
                                                                },
                                                                "AsnOrg": {
                                                                    "description": "Organization that registered this ASN.",
                                                                    "type": "string"
                                                                },
                                                                "Isp": {
                                                                    "description": "ISP information for the internet provider.",
                                                                    "type": "string"
                                                                },
                                                                "Org": {
                                                                    "description": "Name of the internet provider.",
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "ServiceName": {
                                                    "description": "AWS service name whose API was invoked.",
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "DnsRequestAction": {
                                            "description": "Information about the DNS_REQUEST action described in this finding.",
                                            "properties": {
                                                "Domain": {
                                                    "description": "Domain information for the DNS request.",
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "NetworkConnectionAction": {
                                            "description": "Information about the NETWORK_CONNECTION action described in this finding.",
                                            "properties": {
                                                "Blocked": {
                                                    "description": "Network connection blocked information.",
                                                    "type": "boolean"
                                                },
                                                "ConnectionDirection": {
                                                    "description": "Network connection direction.",
                                                    "type": "string"
                                                },
                                                "LocalPortDetails": {
                                                    "description": "Local port information of the connection.",
                                                    "properties": {
                                                        "Port": {
                                                            "description": "Port number of the local connection.",
                                                            "type": "integer"
                                                        },
                                                        "PortName": {
                                                            "description": "Port name of the local connection.",
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "Protocol": {
                                                    "description": "Network connection protocol.",
                                                    "type": "string"
                                                },
                                                "RemoteIpDetails": {
                                                    "description": "Remote IP information of the connection.",
                                                    "properties": {
                                                        "City": {
                                                            "description": "City information of the remote IP address.",
                                                            "properties": {
                                                                "CityName": {
                                                                    "description": "City name of the remote IP address.",
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "Country": {
                                                            "description": "Country code of the remote IP address.",
                                                            "properties": {
                                                                "CountryCode": {
                                                                    "description": "Country code of the remote IP address.",
                                                                    "type": "string"
                                                                },
                                                                "CountryName": {
                                                                    "description": "Country name of the remote IP address.",
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "GeoLocation": {
                                                            "description": "Location information of the remote IP address.",
                                                            "properties": {
                                                                "Lat": {
                                                                    "description": "Latitude information of remote IP address.",
                                                                    "format": "double",
                                                                    "type": "number"
                                                                },
                                                                "Lon": {
                                                                    "description": "Longitude information of remote IP address.",
                                                                    "format": "double",
                                                                    "type": "number"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "IpAddressV4": {
                                                            "description": "IPV4 remote address of the connection.",
                                                            "type": "string"
                                                        },
                                                        "Organization": {
                                                            "description": "ISP Organization information of the remote IP address.",
                                                            "properties": {
                                                                "Asn": {
                                                                    "description": "Autonomous system number of the internet provider of the remote IP address.",
                                                                    "type": "string"
                                                                },
                                                                "AsnOrg": {
                                                                    "description": "Organization that registered this ASN.",
                                                                    "type": "string"
                                                                },
                                                                "Isp": {
                                                                    "description": "ISP information for the internet provider.",
                                                                    "type": "string"
                                                                },
                                                                "Org": {
                                                                    "description": "Name of the internet provider.",
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "RemotePortDetails": {
                                                    "description": "Remote port information of the connection.",
                                                    "properties": {
                                                        "Port": {
                                                            "description": "Port number of the remote connection.",
                                                            "type": "integer"
                                                        },
                                                        "PortName": {
                                                            "description": "Port name of the remote connection.",
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "PortProbeAction": {
                                            "description": "Information about the PORT_PROBE action described in this finding.",
                                            "properties": {
                                                "Blocked": {
                                                    "description": "Port probe blocked information.",
                                                    "type": "boolean"
                                                },
                                                "PortProbeDetails": {
                                                    "description": "A list of port probe details objects.",
                                                    "items": {
                                                        "description": "Details about the port probe finding.",
                                                        "properties": {
                                                            "LocalPortDetails": {
                                                                "description": "Local port information of the connection.",
                                                                "properties": {
                                                                    "Port": {
                                                                        "description": "Port number of the local connection.",
                                                                        "type": "integer"
                                                                    },
                                                                    "PortName": {
                                                                        "description": "Port name of the local connection.",
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            },
                                                            "RemoteIpDetails": {
                                                                "description": "Remote IP information of the connection.",
                                                                "properties": {
                                                                    "City": {
                                                                        "description": "City information of the remote IP address.",
                                                                        "properties": {
                                                                            "CityName": {
                                                                                "description": "City name of the remote IP address.",
                                                                                "type": "string"
                                                                            }
                                                                        },
                                                                        "type": "object"
                                                                    },
                                                                    "Country": {
                                                                        "description": "Country code of the remote IP address.",
                                                                        "properties": {
                                                                            "CountryCode": {
                                                                                "description": "Country code of the remote IP address.",
                                                                                "type": "string"
                                                                            },
                                                                            "CountryName": {
                                                                                "description": "Country name of the remote IP address.",
                                                                                "type": "string"
                                                                            }
                                                                        },
                                                                        "type": "object"
                                                                    },
                                                                    "GeoLocation": {
                                                                        "description": "Location information of the remote IP address.",
                                                                        "properties": {
                                                                            "Lat": {
                                                                                "description": "Latitude information of remote IP address.",
                                                                                "format": "double",
                                                                                "type": "number"
                                                                            },
                                                                            "Lon": {
                                                                                "description": "Longitude information of remote IP address.",
                                                                                "format": "double",
                                                                                "type": "number"
                                                                            }
                                                                        },
                                                                        "type": "object"
                                                                    },
                                                                    "IpAddressV4": {
                                                                        "description": "IPV4 remote address of the connection.",
                                                                        "type": "string"
                                                                    },
                                                                    "Organization": {
                                                                        "description": "ISP Organization information of the remote IP address.",
                                                                        "properties": {
                                                                            "Asn": {
                                                                                "description": "Autonomous system number of the internet provider of the remote IP address.",
                                                                                "type": "string"
                                                                            },
                                                                            "AsnOrg": {
                                                                                "description": "Organization that registered this ASN.",
                                                                                "type": "string"
                                                                            },
                                                                            "Isp": {
                                                                                "description": "ISP information for the internet provider.",
                                                                                "type": "string"
                                                                            },
                                                                            "Org": {
                                                                                "description": "Name of the internet provider.",
                                                                                "type": "string"
                                                                            }
                                                                        },
                                                                        "type": "object"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "type": "array"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                },
                                "Archived": {
                                    "description": "Indicates whether this finding is archived.",
                                    "type": "boolean"
                                },
                                "Count": {
                                    "description": "Total count of the occurrences of this finding type.",
                                    "type": "integer"
                                },
                                "DetectorId": {
                                    "description": "Detector ID for the GuardDuty service.",
                                    "type": "string"
                                },
                                "EventFirstSeen": {
                                    "description": "First seen timestamp of the activity that prompted GuardDuty to generate this finding.",
                                    "type": "string"
                                },
                                "EventLastSeen": {
                                    "description": "Last seen timestamp of the activity that prompted GuardDuty to generate this finding.",
                                    "type": "string"
                                },
                                "ResourceRole": {
                                    "description": "Resource role information for this finding.",
                                    "type": "string"
                                },
                                "ServiceName": {
                                    "description": "The name of the AWS service (GuardDuty) that generated a finding.",
                                    "type": "string"
                                },
                                "UserFeedback": {
                                    "description": "Feedback left about the finding.",
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "Severity": {
                            "description": "The severity of a finding.",
                            "format": "double",
                            "type": "number"
                        },
                        "Title": {
                            "description": "The title of a finding.",
                            "type": "string"
                        },
                        "Type": {
                            "description": "The type of a finding described by the action.",
                            "type": "string"
                        },
                        "UpdatedAt": {
                            "description": "The time stamp at which a finding was last updated.",
                            "type": "string"
                        }
                    },
                    "required": [
                        "AccountId",
                        "SchemaVersion",
                        "CreatedAt",
                        "Resource",
                        "Severity",
                        "UpdatedAt",
                        "Type",
                        "Region",
                        "Id",
                        "Arn"
                    ],
                    "type": "object"
                },
                "type": "array"
            },
            "GeoLocation": {
                "description": "Location information of the remote IP address.",
                "properties": {
                    "Lat": {
                        "description": "Latitude information of remote IP address.",
                        "format": "double",
                        "type": "number"
                    },
                    "Lon": {
                        "description": "Longitude information of remote IP address.",
                        "format": "double",
                        "type": "number"
                    }
                },
                "type": "object"
            },
            "GetDetectorRequest": {
                "properties": {},
                "type": "object"
            },
            "GetDetectorResponse": {
                "properties": {
                    "CreatedAt": {
                        "description": "The first time a resource was created. The format will be ISO-8601.",
                        "type": "string"
                    },
                    "FindingPublishingFrequency": {
                        "description": "A enum value that specifies how frequently customer got Finding updates published.",
                        "enum": [
                            "FIFTEEN_MINUTES",
                            "ONE_HOUR",
                            "SIX_HOURS"
                        ],
                        "type": "string"
                    },
                    "ServiceRole": {
                        "description": "Customer serviceRole name or ARN for accessing customer resources",
                        "type": "string"
                    },
                    "Status": {
                        "description": "The status of detector.",
                        "enum": [
                            "ENABLED",
                            "DISABLED"
                        ],
                        "type": "string"
                    },
                    "UpdatedAt": {
                        "description": "The first time a resource was created. The format will be ISO-8601.",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "GetFilterRequest": {
                "properties": {},
                "type": "object"
            },
            "GetFilterResponse": {
                "properties": {
                    "Action": {
                        "description": "Specifies the action that is to be applied to the findings that match the filter.",
                        "enum": [
                            "NOOP",
                            "ARCHIVE"
                        ],
                        "type": "string"
                    },
                    "Description": {
                        "description": "The description of the filter.",
                        "type": "string"
                    },
                    "FindingCriteria": {
                        "description": "Represents the criteria to be used in the filter for querying findings.",
                        "properties": {
                            "Criterion": {
                                "description": "Represents a map of finding properties that match specified conditions and values when querying findings.",
                                "items": {
                                    "properties": {
                                        "key": {
                                            "type": "string"
                                        },
                                        "value": {
                                            "description": "Finding attribute (for example, accountId) for which conditions and values must be specified when querying findings.",
                                            "properties": {
                                                "Eq": {
                                                    "description": "Represents the equal condition to be applied to a single field when querying for findings.",
                                                    "items": {
                                                        "type": "string"
                                                    },
                                                    "type": "array"
                                                },
                                                "Gt": {
                                                    "description": "Represents the greater than condition to be applied to a single field when querying for findings.",
                                                    "type": "integer"
                                                },
                                                "Gte": {
                                                    "description": "Represents the greater than equal condition to be applied to a single field when querying for findings.",
                                                    "type": "integer"
                                                },
                                                "Lt": {
                                                    "description": "Represents the less than condition to be applied to a single field when querying for findings.",
                                                    "type": "integer"
                                                },
                                                "Lte": {
                                                    "description": "Represents the less than equal condition to be applied to a single field when querying for findings.",
                                                    "type": "integer"
                                                },
                                                "Neq": {
                                                    "description": "Represents the not equal condition to be applied to a single field when querying for findings.",
                                                    "items": {
                                                        "type": "string"
                                                    },
                                                    "type": "array"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                },
                                "type": "array"
                            }
                        },
                        "type": "object"
                    },
                    "Name": {
                        "description": "The name of the filter.",
                        "type": "string"
                    },
                    "Rank": {
                        "description": "Specifies the position of the filter in the list of current filters. Also specifies the order in which this filter is applied to the findings.",
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "GetFindingsRequest": {
                "description": "GetFindings request body.",
                "properties": {
                    "FindingIds": {
                        "description": "IDs of the findings that you want to retrieve.",
                        "items": {
                            "description": "The unique identifier for the Finding",
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "SortCriteria": {
                        "description": "Represents the criteria used for sorting findings.",
                        "properties": {
                            "AttributeName": {
                                "description": "Represents the finding attribute (for example, accountId) by which to sort findings.",
                                "type": "string"
                            },
                            "OrderBy": {
                                "description": "Order by which the sorted findings are to be displayed.",
                                "enum": [
                                    "ASC",
                                    "DESC"
                                ],
                                "type": "string"
                            }
                        },
                        "type": "object"
                    }
                },
                "required": [
                    "FindingIds"
                ],
                "type": "object"
            },
            "GetFindingsResponse": {
                "properties": {
                    "Findings": {
                        "description": "A list of findings.",
                        "items": {
                            "description": "Representation of a abnormal or suspicious activity.",
                            "properties": {
                                "AccountId": {
                                    "description": "AWS account ID where the activity occurred that prompted GuardDuty to generate a finding.",
                                    "type": "string"
                                },
                                "Arn": {
                                    "description": "The ARN of a finding described by the action.",
                                    "type": "string"
                                },
                                "Confidence": {
                                    "description": "The confidence level of a finding.",
                                    "format": "double",
                                    "type": "number"
                                },
                                "CreatedAt": {
                                    "description": "The time stamp at which a finding was generated.",
                                    "type": "string"
                                },
                                "Description": {
                                    "description": "The description of a finding.",
                                    "type": "string"
                                },
                                "Id": {
                                    "description": "The identifier that corresponds to a finding described by the action.",
                                    "type": "string"
                                },
                                "Partition": {
                                    "description": "The AWS resource partition.",
                                    "type": "string"
                                },
                                "Region": {
                                    "description": "The AWS region where the activity occurred that prompted GuardDuty to generate a finding.",
                                    "type": "string"
                                },
                                "Resource": {
                                    "description": "The AWS resource associated with the activity that prompted GuardDuty to generate a finding.",
                                    "properties": {
                                        "AccessKeyDetails": {
                                            "description": "The IAM access key details (IAM user information) of a user that engaged in the activity that prompted GuardDuty to generate a finding.",
                                            "properties": {
                                                "AccessKeyId": {
                                                    "description": "Access key ID of the user.",
                                                    "type": "string"
                                                },
                                                "PrincipalId": {
                                                    "description": "The principal ID of the user.",
                                                    "type": "string"
                                                },
                                                "UserName": {
                                                    "description": "The name of the user.",
                                                    "type": "string"
                                                },
                                                "UserType": {
                                                    "description": "The type of the user.",
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "InstanceDetails": {
                                            "description": "The information about the EC2 instance associated with the activity that prompted GuardDuty to generate a finding.",
                                            "properties": {
                                                "AvailabilityZone": {
                                                    "description": "The availability zone of the EC2 instance.",
                                                    "type": "string"
                                                },
                                                "IamInstanceProfile": {
                                                    "description": "The profile information of the EC2 instance.",
                                                    "properties": {
                                                        "Arn": {
                                                            "description": "AWS EC2 instance profile ARN.",
                                                            "type": "string"
                                                        },
                                                        "Id": {
                                                            "description": "AWS EC2 instance profile ID.",
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "ImageDescription": {
                                                    "description": "The image description of the EC2 instance.",
                                                    "type": "string"
                                                },
                                                "ImageId": {
                                                    "description": "The image ID of the EC2 instance.",
                                                    "type": "string"
                                                },
                                                "InstanceId": {
                                                    "description": "The ID of the EC2 instance.",
                                                    "type": "string"
                                                },
                                                "InstanceState": {
                                                    "description": "The state of the EC2 instance.",
                                                    "type": "string"
                                                },
                                                "InstanceType": {
                                                    "description": "The type of the EC2 instance.",
                                                    "type": "string"
                                                },
                                                "LaunchTime": {
                                                    "description": "The launch time of the EC2 instance.",
                                                    "type": "string"
                                                },
                                                "NetworkInterfaces": {
                                                    "description": "The network interface information of the EC2 instance.",
                                                    "items": {
                                                        "description": "The network interface information of the EC2 instance.",
                                                        "properties": {
                                                            "Ipv6Addresses": {
                                                                "description": "A list of EC2 instance IPv6 address information.",
                                                                "items": {
                                                                    "description": "IpV6 address of the EC2 instance.",
                                                                    "type": "string"
                                                                },
                                                                "type": "array"
                                                            },
                                                            "NetworkInterfaceId": {
                                                                "description": "The ID of the network interface",
                                                                "type": "string"
                                                            },
                                                            "PrivateDnsName": {
                                                                "description": "Private DNS name of the EC2 instance.",
                                                                "type": "string"
                                                            },
                                                            "PrivateIpAddress": {
                                                                "description": "Private IP address of the EC2 instance.",
                                                                "type": "string"
                                                            },
                                                            "PrivateIpAddresses": {
                                                                "description": "Other private IP address information of the EC2 instance.",
                                                                "items": {
                                                                    "description": "Other private IP address information of the EC2 instance.",
                                                                    "properties": {
                                                                        "PrivateDnsName": {
                                                                            "description": "Private DNS name of the EC2 instance.",
                                                                            "type": "string"
                                                                        },
                                                                        "PrivateIpAddress": {
                                                                            "description": "Private IP address of the EC2 instance.",
                                                                            "type": "string"
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                },
                                                                "type": "array"
                                                            },
                                                            "PublicDnsName": {
                                                                "description": "Public DNS name of the EC2 instance.",
                                                                "type": "string"
                                                            },
                                                            "PublicIp": {
                                                                "description": "Public IP address of the EC2 instance.",
                                                                "type": "string"
                                                            },
                                                            "SecurityGroups": {
                                                                "description": "Security groups associated with the EC2 instance.",
                                                                "items": {
                                                                    "description": "Security groups associated with the EC2 instance.",
                                                                    "properties": {
                                                                        "GroupId": {
                                                                            "description": "EC2 instance's security group ID.",
                                                                            "type": "string"
                                                                        },
                                                                        "GroupName": {
                                                                            "description": "EC2 instance's security group name.",
                                                                            "type": "string"
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                },
                                                                "type": "array"
                                                            },
                                                            "SubnetId": {
                                                                "description": "The subnet ID of the EC2 instance.",
                                                                "type": "string"
                                                            },
                                                            "VpcId": {
                                                                "description": "The VPC ID of the EC2 instance.",
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "type": "array"
                                                },
                                                "Platform": {
                                                    "description": "The platform of the EC2 instance.",
                                                    "type": "string"
                                                },
                                                "ProductCodes": {
                                                    "description": "The product code of the EC2 instance.",
                                                    "items": {
                                                        "description": "The product code of the EC2 instance.",
                                                        "properties": {
                                                            "Code": {
                                                                "description": "Product code information.",
                                                                "type": "string"
                                                            },
                                                            "ProductType": {
                                                                "description": "Product code type.",
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "type": "array"
                                                },
                                                "Tags": {
                                                    "description": "The tags of the EC2 instance.",
                                                    "items": {
                                                        "description": "A tag of the EC2 instance.",
                                                        "properties": {
                                                            "Key": {
                                                                "description": "EC2 instance tag key.",
                                                                "type": "string"
                                                            },
                                                            "Value": {
                                                                "description": "EC2 instance tag value.",
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "type": "array"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "ResourceType": {
                                            "description": "The type of the AWS resource.",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                },
                                "SchemaVersion": {
                                    "description": "Findings' schema version.",
                                    "type": "string"
                                },
                                "Service": {
                                    "description": "Additional information assigned to the generated finding by GuardDuty.",
                                    "properties": {
                                        "Action": {
                                            "description": "Information about the activity described in a finding.",
                                            "properties": {
                                                "ActionType": {
                                                    "description": "GuardDuty Finding activity type.",
                                                    "type": "string"
                                                },
                                                "AwsApiCallAction": {
                                                    "description": "Information about the AWS_API_CALL action described in this finding.",
                                                    "properties": {
                                                        "Api": {
                                                            "description": "AWS API name.",
                                                            "type": "string"
                                                        },
                                                        "CallerType": {
                                                            "description": "AWS API caller type.",
                                                            "type": "string"
                                                        },
                                                        "DomainDetails": {
                                                            "description": "Domain information for the AWS API call.",
                                                            "properties": {},
                                                            "type": "object"
                                                        },
                                                        "RemoteIpDetails": {
                                                            "description": "Remote IP information of the connection.",
                                                            "properties": {
                                                                "City": {
                                                                    "description": "City information of the remote IP address.",
                                                                    "properties": {
                                                                        "CityName": {
                                                                            "description": "City name of the remote IP address.",
                                                                            "type": "string"
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                },
                                                                "Country": {
                                                                    "description": "Country code of the remote IP address.",
                                                                    "properties": {
                                                                        "CountryCode": {
                                                                            "description": "Country code of the remote IP address.",
                                                                            "type": "string"
                                                                        },
                                                                        "CountryName": {
                                                                            "description": "Country name of the remote IP address.",
                                                                            "type": "string"
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                },
                                                                "GeoLocation": {
                                                                    "description": "Location information of the remote IP address.",
                                                                    "properties": {
                                                                        "Lat": {
                                                                            "description": "Latitude information of remote IP address.",
                                                                            "format": "double",
                                                                            "type": "number"
                                                                        },
                                                                        "Lon": {
                                                                            "description": "Longitude information of remote IP address.",
                                                                            "format": "double",
                                                                            "type": "number"
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                },
                                                                "IpAddressV4": {
                                                                    "description": "IPV4 remote address of the connection.",
                                                                    "type": "string"
                                                                },
                                                                "Organization": {
                                                                    "description": "ISP Organization information of the remote IP address.",
                                                                    "properties": {
                                                                        "Asn": {
                                                                            "description": "Autonomous system number of the internet provider of the remote IP address.",
                                                                            "type": "string"
                                                                        },
                                                                        "AsnOrg": {
                                                                            "description": "Organization that registered this ASN.",
                                                                            "type": "string"
                                                                        },
                                                                        "Isp": {
                                                                            "description": "ISP information for the internet provider.",
                                                                            "type": "string"
                                                                        },
                                                                        "Org": {
                                                                            "description": "Name of the internet provider.",
                                                                            "type": "string"
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "ServiceName": {
                                                            "description": "AWS service name whose API was invoked.",
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "DnsRequestAction": {
                                                    "description": "Information about the DNS_REQUEST action described in this finding.",
                                                    "properties": {
                                                        "Domain": {
                                                            "description": "Domain information for the DNS request.",
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "NetworkConnectionAction": {
                                                    "description": "Information about the NETWORK_CONNECTION action described in this finding.",
                                                    "properties": {
                                                        "Blocked": {
                                                            "description": "Network connection blocked information.",
                                                            "type": "boolean"
                                                        },
                                                        "ConnectionDirection": {
                                                            "description": "Network connection direction.",
                                                            "type": "string"
                                                        },
                                                        "LocalPortDetails": {
                                                            "description": "Local port information of the connection.",
                                                            "properties": {
                                                                "Port": {
                                                                    "description": "Port number of the local connection.",
                                                                    "type": "integer"
                                                                },
                                                                "PortName": {
                                                                    "description": "Port name of the local connection.",
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "Protocol": {
                                                            "description": "Network connection protocol.",
                                                            "type": "string"
                                                        },
                                                        "RemoteIpDetails": {
                                                            "description": "Remote IP information of the connection.",
                                                            "properties": {
                                                                "City": {
                                                                    "description": "City information of the remote IP address.",
                                                                    "properties": {
                                                                        "CityName": {
                                                                            "description": "City name of the remote IP address.",
                                                                            "type": "string"
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                },
                                                                "Country": {
                                                                    "description": "Country code of the remote IP address.",
                                                                    "properties": {
                                                                        "CountryCode": {
                                                                            "description": "Country code of the remote IP address.",
                                                                            "type": "string"
                                                                        },
                                                                        "CountryName": {
                                                                            "description": "Country name of the remote IP address.",
                                                                            "type": "string"
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                },
                                                                "GeoLocation": {
                                                                    "description": "Location information of the remote IP address.",
                                                                    "properties": {
                                                                        "Lat": {
                                                                            "description": "Latitude information of remote IP address.",
                                                                            "format": "double",
                                                                            "type": "number"
                                                                        },
                                                                        "Lon": {
                                                                            "description": "Longitude information of remote IP address.",
                                                                            "format": "double",
                                                                            "type": "number"
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                },
                                                                "IpAddressV4": {
                                                                    "description": "IPV4 remote address of the connection.",
                                                                    "type": "string"
                                                                },
                                                                "Organization": {
                                                                    "description": "ISP Organization information of the remote IP address.",
                                                                    "properties": {
                                                                        "Asn": {
                                                                            "description": "Autonomous system number of the internet provider of the remote IP address.",
                                                                            "type": "string"
                                                                        },
                                                                        "AsnOrg": {
                                                                            "description": "Organization that registered this ASN.",
                                                                            "type": "string"
                                                                        },
                                                                        "Isp": {
                                                                            "description": "ISP information for the internet provider.",
                                                                            "type": "string"
                                                                        },
                                                                        "Org": {
                                                                            "description": "Name of the internet provider.",
                                                                            "type": "string"
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "RemotePortDetails": {
                                                            "description": "Remote port information of the connection.",
                                                            "properties": {
                                                                "Port": {
                                                                    "description": "Port number of the remote connection.",
                                                                    "type": "integer"
                                                                },
                                                                "PortName": {
                                                                    "description": "Port name of the remote connection.",
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "PortProbeAction": {
                                                    "description": "Information about the PORT_PROBE action described in this finding.",
                                                    "properties": {
                                                        "Blocked": {
                                                            "description": "Port probe blocked information.",
                                                            "type": "boolean"
                                                        },
                                                        "PortProbeDetails": {
                                                            "description": "A list of port probe details objects.",
                                                            "items": {
                                                                "description": "Details about the port probe finding.",
                                                                "properties": {
                                                                    "LocalPortDetails": {
                                                                        "description": "Local port information of the connection.",
                                                                        "properties": {
                                                                            "Port": {
                                                                                "description": "Port number of the local connection.",
                                                                                "type": "integer"
                                                                            },
                                                                            "PortName": {
                                                                                "description": "Port name of the local connection.",
                                                                                "type": "string"
                                                                            }
                                                                        },
                                                                        "type": "object"
                                                                    },
                                                                    "RemoteIpDetails": {
                                                                        "description": "Remote IP information of the connection.",
                                                                        "properties": {
                                                                            "City": {
                                                                                "description": "City information of the remote IP address.",
                                                                                "properties": {
                                                                                    "CityName": {
                                                                                        "description": "City name of the remote IP address.",
                                                                                        "type": "string"
                                                                                    }
                                                                                },
                                                                                "type": "object"
                                                                            },
                                                                            "Country": {
                                                                                "description": "Country code of the remote IP address.",
                                                                                "properties": {
                                                                                    "CountryCode": {
                                                                                        "description": "Country code of the remote IP address.",
                                                                                        "type": "string"
                                                                                    },
                                                                                    "CountryName": {
                                                                                        "description": "Country name of the remote IP address.",
                                                                                        "type": "string"
                                                                                    }
                                                                                },
                                                                                "type": "object"
                                                                            },
                                                                            "GeoLocation": {
                                                                                "description": "Location information of the remote IP address.",
                                                                                "properties": {
                                                                                    "Lat": {
                                                                                        "description": "Latitude information of remote IP address.",
                                                                                        "format": "double",
                                                                                        "type": "number"
                                                                                    },
                                                                                    "Lon": {
                                                                                        "description": "Longitude information of remote IP address.",
                                                                                        "format": "double",
                                                                                        "type": "number"
                                                                                    }
                                                                                },
                                                                                "type": "object"
                                                                            },
                                                                            "IpAddressV4": {
                                                                                "description": "IPV4 remote address of the connection.",
                                                                                "type": "string"
                                                                            },
                                                                            "Organization": {
                                                                                "description": "ISP Organization information of the remote IP address.",
                                                                                "properties": {
                                                                                    "Asn": {
                                                                                        "description": "Autonomous system number of the internet provider of the remote IP address.",
                                                                                        "type": "string"
                                                                                    },
                                                                                    "AsnOrg": {
                                                                                        "description": "Organization that registered this ASN.",
                                                                                        "type": "string"
                                                                                    },
                                                                                    "Isp": {
                                                                                        "description": "ISP information for the internet provider.",
                                                                                        "type": "string"
                                                                                    },
                                                                                    "Org": {
                                                                                        "description": "Name of the internet provider.",
                                                                                        "type": "string"
                                                                                    }
                                                                                },
                                                                                "type": "object"
                                                                            }
                                                                        },
                                                                        "type": "object"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            },
                                                            "type": "array"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "Archived": {
                                            "description": "Indicates whether this finding is archived.",
                                            "type": "boolean"
                                        },
                                        "Count": {
                                            "description": "Total count of the occurrences of this finding type.",
                                            "type": "integer"
                                        },
                                        "DetectorId": {
                                            "description": "Detector ID for the GuardDuty service.",
                                            "type": "string"
                                        },
                                        "EventFirstSeen": {
                                            "description": "First seen timestamp of the activity that prompted GuardDuty to generate this finding.",
                                            "type": "string"
                                        },
                                        "EventLastSeen": {
                                            "description": "Last seen timestamp of the activity that prompted GuardDuty to generate this finding.",
                                            "type": "string"
                                        },
                                        "ResourceRole": {
                                            "description": "Resource role information for this finding.",
                                            "type": "string"
                                        },
                                        "ServiceName": {
                                            "description": "The name of the AWS service (GuardDuty) that generated a finding.",
                                            "type": "string"
                                        },
                                        "UserFeedback": {
                                            "description": "Feedback left about the finding.",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                },
                                "Severity": {
                                    "description": "The severity of a finding.",
                                    "format": "double",
                                    "type": "number"
                                },
                                "Title": {
                                    "description": "The title of a finding.",
                                    "type": "string"
                                },
                                "Type": {
                                    "description": "The type of a finding described by the action.",
                                    "type": "string"
                                },
                                "UpdatedAt": {
                                    "description": "The time stamp at which a finding was last updated.",
                                    "type": "string"
                                }
                            },
                            "required": [
                                "AccountId",
                                "SchemaVersion",
                                "CreatedAt",
                                "Resource",
                                "Severity",
                                "UpdatedAt",
                                "Type",
                                "Region",
                                "Id",
                                "Arn"
                            ],
                            "type": "object"
                        },
                        "type": "array"
                    }
                },
                "type": "object"
            },
            "GetFindingsStatisticsRequest": {
                "description": "GetFindingsStatistics request body.",
                "properties": {
                    "FindingCriteria": {
                        "description": "Represents the criteria used for querying findings.",
                        "properties": {
                            "Criterion": {
                                "description": "Represents a map of finding properties that match specified conditions and values when querying findings.",
                                "items": {
                                    "properties": {
                                        "key": {
                                            "type": "string"
                                        },
                                        "value": {
                                            "description": "Finding attribute (for example, accountId) for which conditions and values must be specified when querying findings.",
                                            "properties": {
                                                "Eq": {
                                                    "description": "Represents the equal condition to be applied to a single field when querying for findings.",
                                                    "items": {
                                                        "type": "string"
                                                    },
                                                    "type": "array"
                                                },
                                                "Gt": {
                                                    "description": "Represents the greater than condition to be applied to a single field when querying for findings.",
                                                    "type": "integer"
                                                },
                                                "Gte": {
                                                    "description": "Represents the greater than equal condition to be applied to a single field when querying for findings.",
                                                    "type": "integer"
                                                },
                                                "Lt": {
                                                    "description": "Represents the less than condition to be applied to a single field when querying for findings.",
                                                    "type": "integer"
                                                },
                                                "Lte": {
                                                    "description": "Represents the less than equal condition to be applied to a single field when querying for findings.",
                                                    "type": "integer"
                                                },
                                                "Neq": {
                                                    "description": "Represents the not equal condition to be applied to a single field when querying for findings.",
                                                    "items": {
                                                        "type": "string"
                                                    },
                                                    "type": "array"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                },
                                "type": "array"
                            }
                        },
                        "type": "object"
                    },
                    "FindingStatisticTypes": {
                        "description": "Types of finding statistics to retrieve.",
                        "items": {
                            "description": "The types of finding statistics.",
                            "enum": [
                                "COUNT_BY_SEVERITY"
                            ],
                            "type": "string"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "FindingStatisticTypes"
                ],
                "type": "object"
            },
            "GetFindingsStatisticsResponse": {
                "properties": {
                    "FindingStatistics": {
                        "description": "Finding statistics object.",
                        "properties": {
                            "CountBySeverity": {
                                "description": "Represents a map of severity to count statistic for a set of findings",
                                "items": {
                                    "properties": {
                                        "key": {
                                            "type": "string"
                                        },
                                        "value": {
                                            "description": "The count of findings for the given severity.",
                                            "type": "integer"
                                        }
                                    },
                                    "type": "object"
                                },
                                "type": "array"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "GetIPSetRequest": {
                "properties": {},
                "type": "object"
            },
            "GetIPSetResponse": {
                "properties": {
                    "Format": {
                        "description": "The format of the file that contains the IPSet.",
                        "enum": [
                            "TXT",
                            "STIX",
                            "OTX_CSV",
                            "ALIEN_VAULT",
                            "PROOF_POINT",
                            "FIRE_EYE"
                        ],
                        "type": "string"
                    },
                    "Location": {
                        "description": "The URI of the file that contains the IPSet. For example (https://s3.us-west-2.amazonaws.com/my-bucket/my-object-key)",
                        "type": "string"
                    },
                    "Name": {
                        "description": "The user friendly name to identify the IPSet. This name is displayed in all findings that are triggered by activity that involves IP addresses included in this IPSet.",
                        "type": "string"
                    },
                    "Status": {
                        "description": "The status of ipSet file uploaded.",
                        "enum": [
                            "INACTIVE",
                            "ACTIVATING",
                            "ACTIVE",
                            "DEACTIVATING",
                            "ERROR",
                            "DELETE_PENDING",
                            "DELETED"
                        ],
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "GetInvitationsCountRequest": {
                "properties": {},
                "type": "object"
            },
            "GetInvitationsCountResponse": {
                "properties": {
                    "InvitationsCount": {
                        "description": "The number of received invitations.",
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "GetMasterAccountRequest": {
                "properties": {},
                "type": "object"
            },
            "GetMasterAccountResponse": {
                "properties": {
                    "Master": {
                        "description": "Contains details about the master account.",
                        "properties": {
                            "AccountId": {
                                "description": "Master account ID",
                                "type": "string"
                            },
                            "InvitationId": {
                                "description": "This value is used to validate the master account to the member account.",
                                "type": "string"
                            },
                            "InvitedAt": {
                                "description": "Timestamp at which the invitation was sent",
                                "type": "string"
                            },
                            "RelationshipStatus": {
                                "description": "The status of the relationship between the master and member accounts.",
                                "type": "string"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "GetMembersRequest": {
                "description": "GetMembers request body.",
                "properties": {
                    "AccountIds": {
                        "description": "A list of account IDs of the GuardDuty member accounts that you want to describe.",
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "AccountIds"
                ],
                "type": "object"
            },
            "GetMembersResponse": {
                "properties": {
                    "Members": {
                        "description": "A list of member descriptions.",
                        "items": {
                            "description": "Contains details about the member account.",
                            "properties": {
                                "AccountId": {
                                    "description": "AWS account ID.",
                                    "type": "string"
                                },
                                "DetectorId": {
                                    "description": "The unique identifier for a detector.",
                                    "type": "string"
                                },
                                "Email": {
                                    "description": "Member account's email address.",
                                    "type": "string"
                                },
                                "InvitedAt": {
                                    "description": "Timestamp at which the invitation was sent",
                                    "type": "string"
                                },
                                "MasterId": {
                                    "description": "The master account ID.",
                                    "type": "string"
                                },
                                "RelationshipStatus": {
                                    "description": "The status of the relationship between the member and the master.",
                                    "type": "string"
                                },
                                "UpdatedAt": {
                                    "description": "The first time a resource was created. The format will be ISO-8601.",
                                    "type": "string"
                                }
                            },
                            "required": [
                                "Email",
                                "AccountId",
                                "MasterId",
                                "UpdatedAt",
                                "RelationshipStatus"
                            ],
                            "type": "object"
                        },
                        "type": "array"
                    },
                    "UnprocessedAccounts": {
                        "description": "A list of objects containing the unprocessed account and a result string explaining why it was unprocessed.",
                        "items": {
                            "description": "An object containing the unprocessed account and a result string explaining why it was unprocessed.",
                            "properties": {
                                "AccountId": {
                                    "description": "AWS Account ID.",
                                    "type": "string"
                                },
                                "Result": {
                                    "description": "A reason why the account hasn't been processed.",
                                    "type": "string"
                                }
                            },
                            "required": [
                                "AccountId",
                                "Result"
                            ],
                            "type": "object"
                        },
                        "type": "array"
                    }
                },
                "type": "object"
            },
            "GetThreatIntelSetRequest": {
                "properties": {},
                "type": "object"
            },
            "GetThreatIntelSetResponse": {
                "properties": {
                    "Format": {
                        "description": "The format of the threatIntelSet.",
                        "enum": [
                            "TXT",
                            "STIX",
                            "OTX_CSV",
                            "ALIEN_VAULT",
                            "PROOF_POINT",
                            "FIRE_EYE"
                        ],
                        "type": "string"
                    },
                    "Location": {
                        "description": "The URI of the file that contains the ThreatIntelSet. For example (https://s3.us-west-2.amazonaws.com/my-bucket/my-object-key).",
                        "type": "string"
                    },
                    "Name": {
                        "description": "A user-friendly ThreatIntelSet name that is displayed in all finding generated by activity that involves IP addresses included in this ThreatIntelSet.",
                        "type": "string"
                    },
                    "Status": {
                        "description": "The status of threatIntelSet file uploaded.",
                        "enum": [
                            "INACTIVE",
                            "ACTIVATING",
                            "ACTIVE",
                            "DEACTIVATING",
                            "ERROR",
                            "DELETE_PENDING",
                            "DELETED"
                        ],
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "IamInstanceProfile": {
                "description": "The profile information of the EC2 instance.",
                "properties": {
                    "Arn": {
                        "description": "AWS EC2 instance profile ARN.",
                        "type": "string"
                    },
                    "Id": {
                        "description": "AWS EC2 instance profile ID.",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "InstanceDetails": {
                "description": "The information about the EC2 instance associated with the activity that prompted GuardDuty to generate a finding.",
                "properties": {
                    "AvailabilityZone": {
                        "description": "The availability zone of the EC2 instance.",
                        "type": "string"
                    },
                    "IamInstanceProfile": {
                        "description": "The profile information of the EC2 instance.",
                        "properties": {
                            "Arn": {
                                "description": "AWS EC2 instance profile ARN.",
                                "type": "string"
                            },
                            "Id": {
                                "description": "AWS EC2 instance profile ID.",
                                "type": "string"
                            }
                        },
                        "type": "object"
                    },
                    "ImageDescription": {
                        "description": "The image description of the EC2 instance.",
                        "type": "string"
                    },
                    "ImageId": {
                        "description": "The image ID of the EC2 instance.",
                        "type": "string"
                    },
                    "InstanceId": {
                        "description": "The ID of the EC2 instance.",
                        "type": "string"
                    },
                    "InstanceState": {
                        "description": "The state of the EC2 instance.",
                        "type": "string"
                    },
                    "InstanceType": {
                        "description": "The type of the EC2 instance.",
                        "type": "string"
                    },
                    "LaunchTime": {
                        "description": "The launch time of the EC2 instance.",
                        "type": "string"
                    },
                    "NetworkInterfaces": {
                        "description": "The network interface information of the EC2 instance.",
                        "items": {
                            "description": "The network interface information of the EC2 instance.",
                            "properties": {
                                "Ipv6Addresses": {
                                    "description": "A list of EC2 instance IPv6 address information.",
                                    "items": {
                                        "description": "IpV6 address of the EC2 instance.",
                                        "type": "string"
                                    },
                                    "type": "array"
                                },
                                "NetworkInterfaceId": {
                                    "description": "The ID of the network interface",
                                    "type": "string"
                                },
                                "PrivateDnsName": {
                                    "description": "Private DNS name of the EC2 instance.",
                                    "type": "string"
                                },
                                "PrivateIpAddress": {
                                    "description": "Private IP address of the EC2 instance.",
                                    "type": "string"
                                },
                                "PrivateIpAddresses": {
                                    "description": "Other private IP address information of the EC2 instance.",
                                    "items": {
                                        "description": "Other private IP address information of the EC2 instance.",
                                        "properties": {
                                            "PrivateDnsName": {
                                                "description": "Private DNS name of the EC2 instance.",
                                                "type": "string"
                                            },
                                            "PrivateIpAddress": {
                                                "description": "Private IP address of the EC2 instance.",
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "type": "array"
                                },
                                "PublicDnsName": {
                                    "description": "Public DNS name of the EC2 instance.",
                                    "type": "string"
                                },
                                "PublicIp": {
                                    "description": "Public IP address of the EC2 instance.",
                                    "type": "string"
                                },
                                "SecurityGroups": {
                                    "description": "Security groups associated with the EC2 instance.",
                                    "items": {
                                        "description": "Security groups associated with the EC2 instance.",
                                        "properties": {
                                            "GroupId": {
                                                "description": "EC2 instance's security group ID.",
                                                "type": "string"
                                            },
                                            "GroupName": {
                                                "description": "EC2 instance's security group name.",
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "type": "array"
                                },
                                "SubnetId": {
                                    "description": "The subnet ID of the EC2 instance.",
                                    "type": "string"
                                },
                                "VpcId": {
                                    "description": "The VPC ID of the EC2 instance.",
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "type": "array"
                    },
                    "Platform": {
                        "description": "The platform of the EC2 instance.",
                        "type": "string"
                    },
                    "ProductCodes": {
                        "description": "The product code of the EC2 instance.",
                        "items": {
                            "description": "The product code of the EC2 instance.",
                            "properties": {
                                "Code": {
                                    "description": "Product code information.",
                                    "type": "string"
                                },
                                "ProductType": {
                                    "description": "Product code type.",
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "type": "array"
                    },
                    "Tags": {
                        "description": "The tags of the EC2 instance.",
                        "items": {
                            "description": "A tag of the EC2 instance.",
                            "properties": {
                                "Key": {
                                    "description": "EC2 instance tag key.",
                                    "type": "string"
                                },
                                "Value": {
                                    "description": "EC2 instance tag value.",
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "type": "array"
                    }
                },
                "type": "object"
            },
            "InternalServerErrorException": {},
            "Invitation": {
                "description": "Invitation from an AWS account to become the current account's master.",
                "properties": {
                    "AccountId": {
                        "description": "Inviter account ID",
                        "type": "string"
                    },
                    "InvitationId": {
                        "description": "This value is used to validate the inviter account to the member account.",
                        "type": "string"
                    },
                    "InvitedAt": {
                        "description": "Timestamp at which the invitation was sent",
                        "type": "string"
                    },
                    "RelationshipStatus": {
                        "description": "The status of the relationship between the inviter and invitee accounts.",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "InvitationId": {
                "description": "This value is used to validate the master account to the member account.",
                "type": "string"
            },
            "Invitations": {
                "description": "A list of invitation descriptions.",
                "items": {
                    "description": "Invitation from an AWS account to become the current account's master.",
                    "properties": {
                        "AccountId": {
                            "description": "Inviter account ID",
                            "type": "string"
                        },
                        "InvitationId": {
                            "description": "This value is used to validate the inviter account to the member account.",
                            "type": "string"
                        },
                        "InvitedAt": {
                            "description": "Timestamp at which the invitation was sent",
                            "type": "string"
                        },
                        "RelationshipStatus": {
                            "description": "The status of the relationship between the inviter and invitee accounts.",
                            "type": "string"
                        }
                    },
                    "type": "object"
                },
                "type": "array"
            },
            "InviteMembersRequest": {
                "description": "InviteMembers request body.",
                "properties": {
                    "AccountIds": {
                        "description": "A list of account IDs of the accounts that you want to invite to GuardDuty as members.",
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "DisableEmailNotification": {
                        "description": "A boolean value that specifies whether you want to disable email notification to the accounts that you’re inviting to GuardDuty as members.",
                        "type": "boolean"
                    },
                    "Message": {
                        "description": "The invitation message that you want to send to the accounts that you’re inviting to GuardDuty as members.",
                        "type": "string"
                    }
                },
                "required": [
                    "AccountIds"
                ],
                "type": "object"
            },
            "InviteMembersResponse": {
                "properties": {
                    "UnprocessedAccounts": {
                        "description": "A list of objects containing the unprocessed account and a result string explaining why it was unprocessed.",
                        "items": {
                            "description": "An object containing the unprocessed account and a result string explaining why it was unprocessed.",
                            "properties": {
                                "AccountId": {
                                    "description": "AWS Account ID.",
                                    "type": "string"
                                },
                                "Result": {
                                    "description": "A reason why the account hasn't been processed.",
                                    "type": "string"
                                }
                            },
                            "required": [
                                "AccountId",
                                "Result"
                            ],
                            "type": "object"
                        },
                        "type": "array"
                    }
                },
                "type": "object"
            },
            "InvitedAt": {
                "description": "Timestamp at which a member has been invited. The format will be ISO-8601.",
                "type": "string"
            },
            "IpSetFormat": {
                "description": "The format of the ipSet.",
                "enum": [
                    "TXT",
                    "STIX",
                    "OTX_CSV",
                    "ALIEN_VAULT",
                    "PROOF_POINT",
                    "FIRE_EYE"
                ],
                "type": "string"
            },
            "IpSetId": {
                "description": "The unique identifier for an IP Set",
                "type": "string"
            },
            "IpSetIds": {
                "description": "A list of the IP set IDs",
                "items": {
                    "description": "The unique identifier for an IP Set",
                    "type": "string"
                },
                "type": "array"
            },
            "IpSetStatus": {
                "description": "The status of ipSet file uploaded.",
                "enum": [
                    "INACTIVE",
                    "ACTIVATING",
                    "ACTIVE",
                    "DEACTIVATING",
                    "ERROR",
                    "DELETE_PENDING",
                    "DELETED"
                ],
                "type": "string"
            },
            "Ipv6Address": {
                "description": "IpV6 address of the EC2 instance.",
                "type": "string"
            },
            "Ipv6Addresses": {
                "description": "A list of EC2 instance IPv6 address information.",
                "items": {
                    "description": "IpV6 address of the EC2 instance.",
                    "type": "string"
                },
                "type": "array"
            },
            "ListDetectorsRequest": {
                "properties": {},
                "type": "object"
            },
            "ListDetectorsResponse": {
                "properties": {
                    "DetectorIds": {
                        "description": "A list of detector Ids.",
                        "items": {
                            "description": "The unique identifier for a detector.",
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "NextToken": {
                        "description": "You can use this parameter when paginating results. Set the value of this parameter to null on your first call to the list action. For subsequent calls to the action fill nextToken in the request with the value of NextToken from the previous response to continue listing data.",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "ListFiltersRequest": {
                "properties": {},
                "type": "object"
            },
            "ListFiltersResponse": {
                "properties": {
                    "FilterNames": {
                        "description": "A list of filter names",
                        "items": {
                            "description": "The unique identifier for a filter",
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "NextToken": {
                        "description": "You can use this parameter when paginating results. Set the value of this parameter to null on your first call to the list action. For subsequent calls to the action fill nextToken in the request with the value of NextToken from the previous response to continue listing data.",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "ListFindingsRequest": {
                "description": "ListFindings request body.",
                "properties": {
                    "FindingCriteria": {
                        "description": "Represents the criteria used for querying findings.",
                        "properties": {
                            "Criterion": {
                                "description": "Represents a map of finding properties that match specified conditions and values when querying findings.",
                                "items": {
                                    "properties": {
                                        "key": {
                                            "type": "string"
                                        },
                                        "value": {
                                            "description": "Finding attribute (for example, accountId) for which conditions and values must be specified when querying findings.",
                                            "properties": {
                                                "Eq": {
                                                    "description": "Represents the equal condition to be applied to a single field when querying for findings.",
                                                    "items": {
                                                        "type": "string"
                                                    },
                                                    "type": "array"
                                                },
                                                "Gt": {
                                                    "description": "Represents the greater than condition to be applied to a single field when querying for findings.",
                                                    "type": "integer"
                                                },
                                                "Gte": {
                                                    "description": "Represents the greater than equal condition to be applied to a single field when querying for findings.",
                                                    "type": "integer"
                                                },
                                                "Lt": {
                                                    "description": "Represents the less than condition to be applied to a single field when querying for findings.",
                                                    "type": "integer"
                                                },
                                                "Lte": {
                                                    "description": "Represents the less than equal condition to be applied to a single field when querying for findings.",
                                                    "type": "integer"
                                                },
                                                "Neq": {
                                                    "description": "Represents the not equal condition to be applied to a single field when querying for findings.",
                                                    "items": {
                                                        "type": "string"
                                                    },
                                                    "type": "array"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                },
                                "type": "array"
                            }
                        },
                        "type": "object"
                    },
                    "MaxResults": {
                        "description": "You can use this parameter to indicate the maximum number of items you want in the response. The default value is 50. The maximum value is 50.",
                        "maximum": 50,
                        "minimum": 1,
                        "type": "integer"
                    },
                    "NextToken": {
                        "description": "You can use this parameter when paginating results. Set the value of this parameter to null on your first call to the ListFindings action. For subsequent calls to the action fill nextToken in the request with the value of nextToken from the previous response to continue listing data.",
                        "type": "string"
                    },
                    "SortCriteria": {
                        "description": "Represents the criteria used for sorting findings.",
                        "properties": {
                            "AttributeName": {
                                "description": "Represents the finding attribute (for example, accountId) by which to sort findings.",
                                "type": "string"
                            },
                            "OrderBy": {
                                "description": "Order by which the sorted findings are to be displayed.",
                                "enum": [
                                    "ASC",
                                    "DESC"
                                ],
                                "type": "string"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "ListFindingsResponse": {
                "properties": {
                    "FindingIds": {
                        "description": "The list of the Findings.",
                        "items": {
                            "description": "The unique identifier for the Finding",
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "NextToken": {
                        "description": "You can use this parameter when paginating results. Set the value of this parameter to null on your first call to the list action. For subsequent calls to the action fill nextToken in the request with the value of NextToken from the previous response to continue listing data.",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "ListIPSetsRequest": {
                "properties": {},
                "type": "object"
            },
            "ListIPSetsResponse": {
                "properties": {
                    "IpSetIds": {
                        "description": "A list of the IP set IDs",
                        "items": {
                            "description": "The unique identifier for an IP Set",
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "NextToken": {
                        "description": "You can use this parameter when paginating results. Set the value of this parameter to null on your first call to the list action. For subsequent calls to the action fill nextToken in the request with the value of NextToken from the previous response to continue listing data.",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "ListInvitationsRequest": {
                "properties": {},
                "type": "object"
            },
            "ListInvitationsResponse": {
                "properties": {
                    "Invitations": {
                        "description": "A list of invitation descriptions.",
                        "items": {
                            "description": "Invitation from an AWS account to become the current account's master.",
                            "properties": {
                                "AccountId": {
                                    "description": "Inviter account ID",
                                    "type": "string"
                                },
                                "InvitationId": {
                                    "description": "This value is used to validate the inviter account to the member account.",
                                    "type": "string"
                                },
                                "InvitedAt": {
                                    "description": "Timestamp at which the invitation was sent",
                                    "type": "string"
                                },
                                "RelationshipStatus": {
                                    "description": "The status of the relationship between the inviter and invitee accounts.",
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "type": "array"
                    },
                    "NextToken": {
                        "description": "You can use this parameter when paginating results. Set the value of this parameter to null on your first call to the list action. For subsequent calls to the action fill nextToken in the request with the value of NextToken from the previous response to continue listing data.",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "ListMembersRequest": {
                "properties": {},
                "type": "object"
            },
            "ListMembersResponse": {
                "properties": {
                    "Members": {
                        "description": "A list of member descriptions.",
                        "items": {
                            "description": "Contains details about the member account.",
                            "properties": {
                                "AccountId": {
                                    "description": "AWS account ID.",
                                    "type": "string"
                                },
                                "DetectorId": {
                                    "description": "The unique identifier for a detector.",
                                    "type": "string"
                                },
                                "Email": {
                                    "description": "Member account's email address.",
                                    "type": "string"
                                },
                                "InvitedAt": {
                                    "description": "Timestamp at which the invitation was sent",
                                    "type": "string"
                                },
                                "MasterId": {
                                    "description": "The master account ID.",
                                    "type": "string"
                                },
                                "RelationshipStatus": {
                                    "description": "The status of the relationship between the member and the master.",
                                    "type": "string"
                                },
                                "UpdatedAt": {
                                    "description": "The first time a resource was created. The format will be ISO-8601.",
                                    "type": "string"
                                }
                            },
                            "required": [
                                "Email",
                                "AccountId",
                                "MasterId",
                                "UpdatedAt",
                                "RelationshipStatus"
                            ],
                            "type": "object"
                        },
                        "type": "array"
                    },
                    "NextToken": {
                        "description": "You can use this parameter when paginating results. Set the value of this parameter to null on your first call to the list action. For subsequent calls to the action fill nextToken in the request with the value of NextToken from the previous response to continue listing data.",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "ListThreatIntelSetsRequest": {
                "properties": {},
                "type": "object"
            },
            "ListThreatIntelSetsResponse": {
                "properties": {
                    "NextToken": {
                        "description": "You can use this parameter when paginating results. Set the value of this parameter to null on your first call to the list action. For subsequent calls to the action fill nextToken in the request with the value of NextToken from the previous response to continue listing data.",
                        "type": "string"
                    },
                    "ThreatIntelSetIds": {
                        "description": "The list of the threat intel set IDs",
                        "items": {
                            "description": "The unique identifier for an threat intel set",
                            "type": "string"
                        },
                        "type": "array"
                    }
                },
                "type": "object"
            },
            "LocalPortDetails": {
                "description": "Local port information of the connection.",
                "properties": {
                    "Port": {
                        "description": "Port number of the local connection.",
                        "type": "integer"
                    },
                    "PortName": {
                        "description": "Port name of the local connection.",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "Location": {
                "description": "The location of the S3 bucket where the list resides. For example (https://s3.us-west-2.amazonaws.com/my-bucket/my-object-key)",
                "type": "string"
            },
            "Master": {
                "description": "Contains details about the master account.",
                "properties": {
                    "AccountId": {
                        "description": "Master account ID",
                        "type": "string"
                    },
                    "InvitationId": {
                        "description": "This value is used to validate the master account to the member account.",
                        "type": "string"
                    },
                    "InvitedAt": {
                        "description": "Timestamp at which the invitation was sent",
                        "type": "string"
                    },
                    "RelationshipStatus": {
                        "description": "The status of the relationship between the master and member accounts.",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "MasterId": {
                "description": "The master account ID.",
                "type": "string"
            },
            "MaxResults": {
                "maximum": 50,
                "minimum": 1,
                "type": "integer"
            },
            "Member": {
                "description": "Contains details about the member account.",
                "properties": {
                    "AccountId": {
                        "description": "AWS account ID.",
                        "type": "string"
                    },
                    "DetectorId": {
                        "description": "The unique identifier for a detector.",
                        "type": "string"
                    },
                    "Email": {
                        "description": "Member account's email address.",
                        "type": "string"
                    },
                    "InvitedAt": {
                        "description": "Timestamp at which the invitation was sent",
                        "type": "string"
                    },
                    "MasterId": {
                        "description": "The master account ID.",
                        "type": "string"
                    },
                    "RelationshipStatus": {
                        "description": "The status of the relationship between the member and the master.",
                        "type": "string"
                    },
                    "UpdatedAt": {
                        "description": "The first time a resource was created. The format will be ISO-8601.",
                        "type": "string"
                    }
                },
                "required": [
                    "Email",
                    "AccountId",
                    "MasterId",
                    "UpdatedAt",
                    "RelationshipStatus"
                ],
                "type": "object"
            },
            "Members": {
                "description": "A list of member descriptions.",
                "items": {
                    "description": "Contains details about the member account.",
                    "properties": {
                        "AccountId": {
                            "description": "AWS account ID.",
                            "type": "string"
                        },
                        "DetectorId": {
                            "description": "The unique identifier for a detector.",
                            "type": "string"
                        },
                        "Email": {
                            "description": "Member account's email address.",
                            "type": "string"
                        },
                        "InvitedAt": {
                            "description": "Timestamp at which the invitation was sent",
                            "type": "string"
                        },
                        "MasterId": {
                            "description": "The master account ID.",
                            "type": "string"
                        },
                        "RelationshipStatus": {
                            "description": "The status of the relationship between the member and the master.",
                            "type": "string"
                        },
                        "UpdatedAt": {
                            "description": "The first time a resource was created. The format will be ISO-8601.",
                            "type": "string"
                        }
                    },
                    "required": [
                        "Email",
                        "AccountId",
                        "MasterId",
                        "UpdatedAt",
                        "RelationshipStatus"
                    ],
                    "type": "object"
                },
                "type": "array"
            },
            "Message": {
                "description": "The invitation message that you want to send to the accounts that you’re inviting to GuardDuty as members.",
                "type": "string"
            },
            "Name": {
                "description": "The user-friendly name to identify the list.",
                "type": "string"
            },
            "Neq": {
                "description": "Represents the not equal condition to be applied to a single field when querying for findings.",
                "items": {
                    "type": "string"
                },
                "type": "array"
            },
            "NetworkConnectionAction": {
                "description": "Information about the NETWORK_CONNECTION action described in this finding.",
                "properties": {
                    "Blocked": {
                        "description": "Network connection blocked information.",
                        "type": "boolean"
                    },
                    "ConnectionDirection": {
                        "description": "Network connection direction.",
                        "type": "string"
                    },
                    "LocalPortDetails": {
                        "description": "Local port information of the connection.",
                        "properties": {
                            "Port": {
                                "description": "Port number of the local connection.",
                                "type": "integer"
                            },
                            "PortName": {
                                "description": "Port name of the local connection.",
                                "type": "string"
                            }
                        },
                        "type": "object"
                    },
                    "Protocol": {
                        "description": "Network connection protocol.",
                        "type": "string"
                    },
                    "RemoteIpDetails": {
                        "description": "Remote IP information of the connection.",
                        "properties": {
                            "City": {
                                "description": "City information of the remote IP address.",
                                "properties": {
                                    "CityName": {
                                        "description": "City name of the remote IP address.",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            },
                            "Country": {
                                "description": "Country code of the remote IP address.",
                                "properties": {
                                    "CountryCode": {
                                        "description": "Country code of the remote IP address.",
                                        "type": "string"
                                    },
                                    "CountryName": {
                                        "description": "Country name of the remote IP address.",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            },
                            "GeoLocation": {
                                "description": "Location information of the remote IP address.",
                                "properties": {
                                    "Lat": {
                                        "description": "Latitude information of remote IP address.",
                                        "format": "double",
                                        "type": "number"
                                    },
                                    "Lon": {
                                        "description": "Longitude information of remote IP address.",
                                        "format": "double",
                                        "type": "number"
                                    }
                                },
                                "type": "object"
                            },
                            "IpAddressV4": {
                                "description": "IPV4 remote address of the connection.",
                                "type": "string"
                            },
                            "Organization": {
                                "description": "ISP Organization information of the remote IP address.",
                                "properties": {
                                    "Asn": {
                                        "description": "Autonomous system number of the internet provider of the remote IP address.",
                                        "type": "string"
                                    },
                                    "AsnOrg": {
                                        "description": "Organization that registered this ASN.",
                                        "type": "string"
                                    },
                                    "Isp": {
                                        "description": "ISP information for the internet provider.",
                                        "type": "string"
                                    },
                                    "Org": {
                                        "description": "Name of the internet provider.",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        },
                        "type": "object"
                    },
                    "RemotePortDetails": {
                        "description": "Remote port information of the connection.",
                        "properties": {
                            "Port": {
                                "description": "Port number of the remote connection.",
                                "type": "integer"
                            },
                            "PortName": {
                                "description": "Port name of the remote connection.",
                                "type": "string"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "NetworkInterface": {
                "description": "The network interface information of the EC2 instance.",
                "properties": {
                    "Ipv6Addresses": {
                        "description": "A list of EC2 instance IPv6 address information.",
                        "items": {
                            "description": "IpV6 address of the EC2 instance.",
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "NetworkInterfaceId": {
                        "description": "The ID of the network interface",
                        "type": "string"
                    },
                    "PrivateDnsName": {
                        "description": "Private DNS name of the EC2 instance.",
                        "type": "string"
                    },
                    "PrivateIpAddress": {
                        "description": "Private IP address of the EC2 instance.",
                        "type": "string"
                    },
                    "PrivateIpAddresses": {
                        "description": "Other private IP address information of the EC2 instance.",
                        "items": {
                            "description": "Other private IP address information of the EC2 instance.",
                            "properties": {
                                "PrivateDnsName": {
                                    "description": "Private DNS name of the EC2 instance.",
                                    "type": "string"
                                },
                                "PrivateIpAddress": {
                                    "description": "Private IP address of the EC2 instance.",
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "type": "array"
                    },
                    "PublicDnsName": {
                        "description": "Public DNS name of the EC2 instance.",
                        "type": "string"
                    },
                    "PublicIp": {
                        "description": "Public IP address of the EC2 instance.",
                        "type": "string"
                    },
                    "SecurityGroups": {
                        "description": "Security groups associated with the EC2 instance.",
                        "items": {
                            "description": "Security groups associated with the EC2 instance.",
                            "properties": {
                                "GroupId": {
                                    "description": "EC2 instance's security group ID.",
                                    "type": "string"
                                },
                                "GroupName": {
                                    "description": "EC2 instance's security group name.",
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "type": "array"
                    },
                    "SubnetId": {
                        "description": "The subnet ID of the EC2 instance.",
                        "type": "string"
                    },
                    "VpcId": {
                        "description": "The VPC ID of the EC2 instance.",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "NetworkInterfaceId": {
                "description": "The ID of the network interface.",
                "type": "string"
            },
            "NetworkInterfaces": {
                "description": "The network interface information of the EC2 instance.",
                "items": {
                    "description": "The network interface information of the EC2 instance.",
                    "properties": {
                        "Ipv6Addresses": {
                            "description": "A list of EC2 instance IPv6 address information.",
                            "items": {
                                "description": "IpV6 address of the EC2 instance.",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "NetworkInterfaceId": {
                            "description": "The ID of the network interface",
                            "type": "string"
                        },
                        "PrivateDnsName": {
                            "description": "Private DNS name of the EC2 instance.",
                            "type": "string"
                        },
                        "PrivateIpAddress": {
                            "description": "Private IP address of the EC2 instance.",
                            "type": "string"
                        },
                        "PrivateIpAddresses": {
                            "description": "Other private IP address information of the EC2 instance.",
                            "items": {
                                "description": "Other private IP address information of the EC2 instance.",
                                "properties": {
                                    "PrivateDnsName": {
                                        "description": "Private DNS name of the EC2 instance.",
                                        "type": "string"
                                    },
                                    "PrivateIpAddress": {
                                        "description": "Private IP address of the EC2 instance.",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            },
                            "type": "array"
                        },
                        "PublicDnsName": {
                            "description": "Public DNS name of the EC2 instance.",
                            "type": "string"
                        },
                        "PublicIp": {
                            "description": "Public IP address of the EC2 instance.",
                            "type": "string"
                        },
                        "SecurityGroups": {
                            "description": "Security groups associated with the EC2 instance.",
                            "items": {
                                "description": "Security groups associated with the EC2 instance.",
                                "properties": {
                                    "GroupId": {
                                        "description": "EC2 instance's security group ID.",
                                        "type": "string"
                                    },
                                    "GroupName": {
                                        "description": "EC2 instance's security group name.",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            },
                            "type": "array"
                        },
                        "SubnetId": {
                            "description": "The subnet ID of the EC2 instance.",
                            "type": "string"
                        },
                        "VpcId": {
                            "description": "The VPC ID of the EC2 instance.",
                            "type": "string"
                        }
                    },
                    "type": "object"
                },
                "type": "array"
            },
            "NextToken": {
                "description": "You can use this parameter when paginating results. Set the value of this parameter to null on your first call to the list action. For subsequent calls to the action fill nextToken in the request with the value of NextToken from the previous response to continue listing data.",
                "type": "string"
            },
            "OrderBy": {
                "enum": [
                    "ASC",
                    "DESC"
                ],
                "type": "string"
            },
            "Organization": {
                "description": "ISP Organization information of the remote IP address.",
                "properties": {
                    "Asn": {
                        "description": "Autonomous system number of the internet provider of the remote IP address.",
                        "type": "string"
                    },
                    "AsnOrg": {
                        "description": "Organization that registered this ASN.",
                        "type": "string"
                    },
                    "Isp": {
                        "description": "ISP information for the internet provider.",
                        "type": "string"
                    },
                    "Org": {
                        "description": "Name of the internet provider.",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "PortProbeAction": {
                "description": "Information about the PORT_PROBE action described in this finding.",
                "properties": {
                    "Blocked": {
                        "description": "Port probe blocked information.",
                        "type": "boolean"
                    },
                    "PortProbeDetails": {
                        "description": "A list of port probe details objects.",
                        "items": {
                            "description": "Details about the port probe finding.",
                            "properties": {
                                "LocalPortDetails": {
                                    "description": "Local port information of the connection.",
                                    "properties": {
                                        "Port": {
                                            "description": "Port number of the local connection.",
                                            "type": "integer"
                                        },
                                        "PortName": {
                                            "description": "Port name of the local connection.",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                },
                                "RemoteIpDetails": {
                                    "description": "Remote IP information of the connection.",
                                    "properties": {
                                        "City": {
                                            "description": "City information of the remote IP address.",
                                            "properties": {
                                                "CityName": {
                                                    "description": "City name of the remote IP address.",
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "Country": {
                                            "description": "Country code of the remote IP address.",
                                            "properties": {
                                                "CountryCode": {
                                                    "description": "Country code of the remote IP address.",
                                                    "type": "string"
                                                },
                                                "CountryName": {
                                                    "description": "Country name of the remote IP address.",
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "GeoLocation": {
                                            "description": "Location information of the remote IP address.",
                                            "properties": {
                                                "Lat": {
                                                    "description": "Latitude information of remote IP address.",
                                                    "format": "double",
                                                    "type": "number"
                                                },
                                                "Lon": {
                                                    "description": "Longitude information of remote IP address.",
                                                    "format": "double",
                                                    "type": "number"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "IpAddressV4": {
                                            "description": "IPV4 remote address of the connection.",
                                            "type": "string"
                                        },
                                        "Organization": {
                                            "description": "ISP Organization information of the remote IP address.",
                                            "properties": {
                                                "Asn": {
                                                    "description": "Autonomous system number of the internet provider of the remote IP address.",
                                                    "type": "string"
                                                },
                                                "AsnOrg": {
                                                    "description": "Organization that registered this ASN.",
                                                    "type": "string"
                                                },
                                                "Isp": {
                                                    "description": "ISP information for the internet provider.",
                                                    "type": "string"
                                                },
                                                "Org": {
                                                    "description": "Name of the internet provider.",
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "type": "object"
                        },
                        "type": "array"
                    }
                },
                "type": "object"
            },
            "PortProbeDetail": {
                "description": "Details about the port probe finding.",
                "properties": {
                    "LocalPortDetails": {
                        "description": "Local port information of the connection.",
                        "properties": {
                            "Port": {
                                "description": "Port number of the local connection.",
                                "type": "integer"
                            },
                            "PortName": {
                                "description": "Port name of the local connection.",
                                "type": "string"
                            }
                        },
                        "type": "object"
                    },
                    "RemoteIpDetails": {
                        "description": "Remote IP information of the connection.",
                        "properties": {
                            "City": {
                                "description": "City information of the remote IP address.",
                                "properties": {
                                    "CityName": {
                                        "description": "City name of the remote IP address.",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            },
                            "Country": {
                                "description": "Country code of the remote IP address.",
                                "properties": {
                                    "CountryCode": {
                                        "description": "Country code of the remote IP address.",
                                        "type": "string"
                                    },
                                    "CountryName": {
                                        "description": "Country name of the remote IP address.",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            },
                            "GeoLocation": {
                                "description": "Location information of the remote IP address.",
                                "properties": {
                                    "Lat": {
                                        "description": "Latitude information of remote IP address.",
                                        "format": "double",
                                        "type": "number"
                                    },
                                    "Lon": {
                                        "description": "Longitude information of remote IP address.",
                                        "format": "double",
                                        "type": "number"
                                    }
                                },
                                "type": "object"
                            },
                            "IpAddressV4": {
                                "description": "IPV4 remote address of the connection.",
                                "type": "string"
                            },
                            "Organization": {
                                "description": "ISP Organization information of the remote IP address.",
                                "properties": {
                                    "Asn": {
                                        "description": "Autonomous system number of the internet provider of the remote IP address.",
                                        "type": "string"
                                    },
                                    "AsnOrg": {
                                        "description": "Organization that registered this ASN.",
                                        "type": "string"
                                    },
                                    "Isp": {
                                        "description": "ISP information for the internet provider.",
                                        "type": "string"
                                    },
                                    "Org": {
                                        "description": "Name of the internet provider.",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "PrivateDnsName": {
                "description": "Private DNS name of the EC2 instance.",
                "type": "string"
            },
            "PrivateIpAddress": {
                "description": "Private IP address of the EC2 instance.",
                "type": "string"
            },
            "PrivateIpAddressDetails": {
                "description": "Other private IP address information of the EC2 instance.",
                "properties": {
                    "PrivateDnsName": {
                        "description": "Private DNS name of the EC2 instance.",
                        "type": "string"
                    },
                    "PrivateIpAddress": {
                        "description": "Private IP address of the EC2 instance.",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "PrivateIpAddresses": {
                "description": "Other private IP address information of the EC2 instance.",
                "items": {
                    "description": "Other private IP address information of the EC2 instance.",
                    "properties": {
                        "PrivateDnsName": {
                            "description": "Private DNS name of the EC2 instance.",
                            "type": "string"
                        },
                        "PrivateIpAddress": {
                            "description": "Private IP address of the EC2 instance.",
                            "type": "string"
                        }
                    },
                    "type": "object"
                },
                "type": "array"
            },
            "ProductCode": {
                "description": "The product code of the EC2 instance.",
                "properties": {
                    "Code": {
                        "description": "Product code information.",
                        "type": "string"
                    },
                    "ProductType": {
                        "description": "Product code type.",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "ProductCodes": {
                "description": "The product code of the EC2 instance.",
                "items": {
                    "description": "The product code of the EC2 instance.",
                    "properties": {
                        "Code": {
                            "description": "Product code information.",
                            "type": "string"
                        },
                        "ProductType": {
                            "description": "Product code type.",
                            "type": "string"
                        }
                    },
                    "type": "object"
                },
                "type": "array"
            },
            "RemoteIpDetails": {
                "description": "Remote IP information of the connection.",
                "properties": {
                    "City": {
                        "description": "City information of the remote IP address.",
                        "properties": {
                            "CityName": {
                                "description": "City name of the remote IP address.",
                                "type": "string"
                            }
                        },
                        "type": "object"
                    },
                    "Country": {
                        "description": "Country code of the remote IP address.",
                        "properties": {
                            "CountryCode": {
                                "description": "Country code of the remote IP address.",
                                "type": "string"
                            },
                            "CountryName": {
                                "description": "Country name of the remote IP address.",
                                "type": "string"
                            }
                        },
                        "type": "object"
                    },
                    "GeoLocation": {
                        "description": "Location information of the remote IP address.",
                        "properties": {
                            "Lat": {
                                "description": "Latitude information of remote IP address.",
                                "format": "double",
                                "type": "number"
                            },
                            "Lon": {
                                "description": "Longitude information of remote IP address.",
                                "format": "double",
                                "type": "number"
                            }
                        },
                        "type": "object"
                    },
                    "IpAddressV4": {
                        "description": "IPV4 remote address of the connection.",
                        "type": "string"
                    },
                    "Organization": {
                        "description": "ISP Organization information of the remote IP address.",
                        "properties": {
                            "Asn": {
                                "description": "Autonomous system number of the internet provider of the remote IP address.",
                                "type": "string"
                            },
                            "AsnOrg": {
                                "description": "Organization that registered this ASN.",
                                "type": "string"
                            },
                            "Isp": {
                                "description": "ISP information for the internet provider.",
                                "type": "string"
                            },
                            "Org": {
                                "description": "Name of the internet provider.",
                                "type": "string"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "RemotePortDetails": {
                "description": "Remote port information of the connection.",
                "properties": {
                    "Port": {
                        "description": "Port number of the remote connection.",
                        "type": "integer"
                    },
                    "PortName": {
                        "description": "Port name of the remote connection.",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "Resource": {
                "description": "The AWS resource associated with the activity that prompted GuardDuty to generate a finding.",
                "properties": {
                    "AccessKeyDetails": {
                        "description": "The IAM access key details (IAM user information) of a user that engaged in the activity that prompted GuardDuty to generate a finding.",
                        "properties": {
                            "AccessKeyId": {
                                "description": "Access key ID of the user.",
                                "type": "string"
                            },
                            "PrincipalId": {
                                "description": "The principal ID of the user.",
                                "type": "string"
                            },
                            "UserName": {
                                "description": "The name of the user.",
                                "type": "string"
                            },
                            "UserType": {
                                "description": "The type of the user.",
                                "type": "string"
                            }
                        },
                        "type": "object"
                    },
                    "InstanceDetails": {
                        "description": "The information about the EC2 instance associated with the activity that prompted GuardDuty to generate a finding.",
                        "properties": {
                            "AvailabilityZone": {
                                "description": "The availability zone of the EC2 instance.",
                                "type": "string"
                            },
                            "IamInstanceProfile": {
                                "description": "The profile information of the EC2 instance.",
                                "properties": {
                                    "Arn": {
                                        "description": "AWS EC2 instance profile ARN.",
                                        "type": "string"
                                    },
                                    "Id": {
                                        "description": "AWS EC2 instance profile ID.",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            },
                            "ImageDescription": {
                                "description": "The image description of the EC2 instance.",
                                "type": "string"
                            },
                            "ImageId": {
                                "description": "The image ID of the EC2 instance.",
                                "type": "string"
                            },
                            "InstanceId": {
                                "description": "The ID of the EC2 instance.",
                                "type": "string"
                            },
                            "InstanceState": {
                                "description": "The state of the EC2 instance.",
                                "type": "string"
                            },
                            "InstanceType": {
                                "description": "The type of the EC2 instance.",
                                "type": "string"
                            },
                            "LaunchTime": {
                                "description": "The launch time of the EC2 instance.",
                                "type": "string"
                            },
                            "NetworkInterfaces": {
                                "description": "The network interface information of the EC2 instance.",
                                "items": {
                                    "description": "The network interface information of the EC2 instance.",
                                    "properties": {
                                        "Ipv6Addresses": {
                                            "description": "A list of EC2 instance IPv6 address information.",
                                            "items": {
                                                "description": "IpV6 address of the EC2 instance.",
                                                "type": "string"
                                            },
                                            "type": "array"
                                        },
                                        "NetworkInterfaceId": {
                                            "description": "The ID of the network interface",
                                            "type": "string"
                                        },
                                        "PrivateDnsName": {
                                            "description": "Private DNS name of the EC2 instance.",
                                            "type": "string"
                                        },
                                        "PrivateIpAddress": {
                                            "description": "Private IP address of the EC2 instance.",
                                            "type": "string"
                                        },
                                        "PrivateIpAddresses": {
                                            "description": "Other private IP address information of the EC2 instance.",
                                            "items": {
                                                "description": "Other private IP address information of the EC2 instance.",
                                                "properties": {
                                                    "PrivateDnsName": {
                                                        "description": "Private DNS name of the EC2 instance.",
                                                        "type": "string"
                                                    },
                                                    "PrivateIpAddress": {
                                                        "description": "Private IP address of the EC2 instance.",
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "PublicDnsName": {
                                            "description": "Public DNS name of the EC2 instance.",
                                            "type": "string"
                                        },
                                        "PublicIp": {
                                            "description": "Public IP address of the EC2 instance.",
                                            "type": "string"
                                        },
                                        "SecurityGroups": {
                                            "description": "Security groups associated with the EC2 instance.",
                                            "items": {
                                                "description": "Security groups associated with the EC2 instance.",
                                                "properties": {
                                                    "GroupId": {
                                                        "description": "EC2 instance's security group ID.",
                                                        "type": "string"
                                                    },
                                                    "GroupName": {
                                                        "description": "EC2 instance's security group name.",
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "SubnetId": {
                                            "description": "The subnet ID of the EC2 instance.",
                                            "type": "string"
                                        },
                                        "VpcId": {
                                            "description": "The VPC ID of the EC2 instance.",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                },
                                "type": "array"
                            },
                            "Platform": {
                                "description": "The platform of the EC2 instance.",
                                "type": "string"
                            },
                            "ProductCodes": {
                                "description": "The product code of the EC2 instance.",
                                "items": {
                                    "description": "The product code of the EC2 instance.",
                                    "properties": {
                                        "Code": {
                                            "description": "Product code information.",
                                            "type": "string"
                                        },
                                        "ProductType": {
                                            "description": "Product code type.",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                },
                                "type": "array"
                            },
                            "Tags": {
                                "description": "The tags of the EC2 instance.",
                                "items": {
                                    "description": "A tag of the EC2 instance.",
                                    "properties": {
                                        "Key": {
                                            "description": "EC2 instance tag key.",
                                            "type": "string"
                                        },
                                        "Value": {
                                            "description": "EC2 instance tag value.",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                },
                                "type": "array"
                            }
                        },
                        "type": "object"
                    },
                    "ResourceType": {
                        "description": "The type of the AWS resource.",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "SecurityGroup": {
                "description": "Security groups associated with the EC2 instance.",
                "properties": {
                    "GroupId": {
                        "description": "EC2 instance's security group ID.",
                        "type": "string"
                    },
                    "GroupName": {
                        "description": "EC2 instance's security group name.",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "SecurityGroups": {
                "description": "Security groups associated with the EC2 instance.",
                "items": {
                    "description": "Security groups associated with the EC2 instance.",
                    "properties": {
                        "GroupId": {
                            "description": "EC2 instance's security group ID.",
                            "type": "string"
                        },
                        "GroupName": {
                            "description": "EC2 instance's security group name.",
                            "type": "string"
                        }
                    },
                    "type": "object"
                },
                "type": "array"
            },
            "Service": {
                "description": "Additional information assigned to the generated finding by GuardDuty.",
                "properties": {
                    "Action": {
                        "description": "Information about the activity described in a finding.",
                        "properties": {
                            "ActionType": {
                                "description": "GuardDuty Finding activity type.",
                                "type": "string"
                            },
                            "AwsApiCallAction": {
                                "description": "Information about the AWS_API_CALL action described in this finding.",
                                "properties": {
                                    "Api": {
                                        "description": "AWS API name.",
                                        "type": "string"
                                    },
                                    "CallerType": {
                                        "description": "AWS API caller type.",
                                        "type": "string"
                                    },
                                    "DomainDetails": {
                                        "description": "Domain information for the AWS API call.",
                                        "properties": {},
                                        "type": "object"
                                    },
                                    "RemoteIpDetails": {
                                        "description": "Remote IP information of the connection.",
                                        "properties": {
                                            "City": {
                                                "description": "City information of the remote IP address.",
                                                "properties": {
                                                    "CityName": {
                                                        "description": "City name of the remote IP address.",
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "Country": {
                                                "description": "Country code of the remote IP address.",
                                                "properties": {
                                                    "CountryCode": {
                                                        "description": "Country code of the remote IP address.",
                                                        "type": "string"
                                                    },
                                                    "CountryName": {
                                                        "description": "Country name of the remote IP address.",
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "GeoLocation": {
                                                "description": "Location information of the remote IP address.",
                                                "properties": {
                                                    "Lat": {
                                                        "description": "Latitude information of remote IP address.",
                                                        "format": "double",
                                                        "type": "number"
                                                    },
                                                    "Lon": {
                                                        "description": "Longitude information of remote IP address.",
                                                        "format": "double",
                                                        "type": "number"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "IpAddressV4": {
                                                "description": "IPV4 remote address of the connection.",
                                                "type": "string"
                                            },
                                            "Organization": {
                                                "description": "ISP Organization information of the remote IP address.",
                                                "properties": {
                                                    "Asn": {
                                                        "description": "Autonomous system number of the internet provider of the remote IP address.",
                                                        "type": "string"
                                                    },
                                                    "AsnOrg": {
                                                        "description": "Organization that registered this ASN.",
                                                        "type": "string"
                                                    },
                                                    "Isp": {
                                                        "description": "ISP information for the internet provider.",
                                                        "type": "string"
                                                    },
                                                    "Org": {
                                                        "description": "Name of the internet provider.",
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "ServiceName": {
                                        "description": "AWS service name whose API was invoked.",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            },
                            "DnsRequestAction": {
                                "description": "Information about the DNS_REQUEST action described in this finding.",
                                "properties": {
                                    "Domain": {
                                        "description": "Domain information for the DNS request.",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            },
                            "NetworkConnectionAction": {
                                "description": "Information about the NETWORK_CONNECTION action described in this finding.",
                                "properties": {
                                    "Blocked": {
                                        "description": "Network connection blocked information.",
                                        "type": "boolean"
                                    },
                                    "ConnectionDirection": {
                                        "description": "Network connection direction.",
                                        "type": "string"
                                    },
                                    "LocalPortDetails": {
                                        "description": "Local port information of the connection.",
                                        "properties": {
                                            "Port": {
                                                "description": "Port number of the local connection.",
                                                "type": "integer"
                                            },
                                            "PortName": {
                                                "description": "Port name of the local connection.",
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "Protocol": {
                                        "description": "Network connection protocol.",
                                        "type": "string"
                                    },
                                    "RemoteIpDetails": {
                                        "description": "Remote IP information of the connection.",
                                        "properties": {
                                            "City": {
                                                "description": "City information of the remote IP address.",
                                                "properties": {
                                                    "CityName": {
                                                        "description": "City name of the remote IP address.",
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "Country": {
                                                "description": "Country code of the remote IP address.",
                                                "properties": {
                                                    "CountryCode": {
                                                        "description": "Country code of the remote IP address.",
                                                        "type": "string"
                                                    },
                                                    "CountryName": {
                                                        "description": "Country name of the remote IP address.",
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "GeoLocation": {
                                                "description": "Location information of the remote IP address.",
                                                "properties": {
                                                    "Lat": {
                                                        "description": "Latitude information of remote IP address.",
                                                        "format": "double",
                                                        "type": "number"
                                                    },
                                                    "Lon": {
                                                        "description": "Longitude information of remote IP address.",
                                                        "format": "double",
                                                        "type": "number"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "IpAddressV4": {
                                                "description": "IPV4 remote address of the connection.",
                                                "type": "string"
                                            },
                                            "Organization": {
                                                "description": "ISP Organization information of the remote IP address.",
                                                "properties": {
                                                    "Asn": {
                                                        "description": "Autonomous system number of the internet provider of the remote IP address.",
                                                        "type": "string"
                                                    },
                                                    "AsnOrg": {
                                                        "description": "Organization that registered this ASN.",
                                                        "type": "string"
                                                    },
                                                    "Isp": {
                                                        "description": "ISP information for the internet provider.",
                                                        "type": "string"
                                                    },
                                                    "Org": {
                                                        "description": "Name of the internet provider.",
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "RemotePortDetails": {
                                        "description": "Remote port information of the connection.",
                                        "properties": {
                                            "Port": {
                                                "description": "Port number of the remote connection.",
                                                "type": "integer"
                                            },
                                            "PortName": {
                                                "description": "Port name of the remote connection.",
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "type": "object"
                            },
                            "PortProbeAction": {
                                "description": "Information about the PORT_PROBE action described in this finding.",
                                "properties": {
                                    "Blocked": {
                                        "description": "Port probe blocked information.",
                                        "type": "boolean"
                                    },
                                    "PortProbeDetails": {
                                        "description": "A list of port probe details objects.",
                                        "items": {
                                            "description": "Details about the port probe finding.",
                                            "properties": {
                                                "LocalPortDetails": {
                                                    "description": "Local port information of the connection.",
                                                    "properties": {
                                                        "Port": {
                                                            "description": "Port number of the local connection.",
                                                            "type": "integer"
                                                        },
                                                        "PortName": {
                                                            "description": "Port name of the local connection.",
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "RemoteIpDetails": {
                                                    "description": "Remote IP information of the connection.",
                                                    "properties": {
                                                        "City": {
                                                            "description": "City information of the remote IP address.",
                                                            "properties": {
                                                                "CityName": {
                                                                    "description": "City name of the remote IP address.",
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "Country": {
                                                            "description": "Country code of the remote IP address.",
                                                            "properties": {
                                                                "CountryCode": {
                                                                    "description": "Country code of the remote IP address.",
                                                                    "type": "string"
                                                                },
                                                                "CountryName": {
                                                                    "description": "Country name of the remote IP address.",
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "GeoLocation": {
                                                            "description": "Location information of the remote IP address.",
                                                            "properties": {
                                                                "Lat": {
                                                                    "description": "Latitude information of remote IP address.",
                                                                    "format": "double",
                                                                    "type": "number"
                                                                },
                                                                "Lon": {
                                                                    "description": "Longitude information of remote IP address.",
                                                                    "format": "double",
                                                                    "type": "number"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "IpAddressV4": {
                                                            "description": "IPV4 remote address of the connection.",
                                                            "type": "string"
                                                        },
                                                        "Organization": {
                                                            "description": "ISP Organization information of the remote IP address.",
                                                            "properties": {
                                                                "Asn": {
                                                                    "description": "Autonomous system number of the internet provider of the remote IP address.",
                                                                    "type": "string"
                                                                },
                                                                "AsnOrg": {
                                                                    "description": "Organization that registered this ASN.",
                                                                    "type": "string"
                                                                },
                                                                "Isp": {
                                                                    "description": "ISP information for the internet provider.",
                                                                    "type": "string"
                                                                },
                                                                "Org": {
                                                                    "description": "Name of the internet provider.",
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "type": "array"
                                    }
                                },
                                "type": "object"
                            }
                        },
                        "type": "object"
                    },
                    "Archived": {
                        "description": "Indicates whether this finding is archived.",
                        "type": "boolean"
                    },
                    "Count": {
                        "description": "Total count of the occurrences of this finding type.",
                        "type": "integer"
                    },
                    "DetectorId": {
                        "description": "Detector ID for the GuardDuty service.",
                        "type": "string"
                    },
                    "EventFirstSeen": {
                        "description": "First seen timestamp of the activity that prompted GuardDuty to generate this finding.",
                        "type": "string"
                    },
                    "EventLastSeen": {
                        "description": "Last seen timestamp of the activity that prompted GuardDuty to generate this finding.",
                        "type": "string"
                    },
                    "ResourceRole": {
                        "description": "Resource role information for this finding.",
                        "type": "string"
                    },
                    "ServiceName": {
                        "description": "The name of the AWS service (GuardDuty) that generated a finding.",
                        "type": "string"
                    },
                    "UserFeedback": {
                        "description": "Feedback left about the finding.",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "ServiceRole": {
                "description": "Customer serviceRole name or ARN for accessing customer resources",
                "type": "string"
            },
            "SortCriteria": {
                "description": "Represents the criteria used for sorting findings.",
                "properties": {
                    "AttributeName": {
                        "description": "Represents the finding attribute (for example, accountId) by which to sort findings.",
                        "type": "string"
                    },
                    "OrderBy": {
                        "description": "Order by which the sorted findings are to be displayed.",
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "StartMonitoringMembersRequest": {
                "description": "StartMonitoringMembers request body.",
                "properties": {
                    "AccountIds": {
                        "description": "A list of account IDs of the GuardDuty member accounts whose findings you want the master account to monitor.",
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "AccountIds"
                ],
                "type": "object"
            },
            "StartMonitoringMembersResponse": {
                "properties": {
                    "UnprocessedAccounts": {
                        "description": "A list of objects containing the unprocessed account and a result string explaining why it was unprocessed.",
                        "items": {
                            "description": "An object containing the unprocessed account and a result string explaining why it was unprocessed.",
                            "properties": {
                                "AccountId": {
                                    "description": "AWS Account ID.",
                                    "type": "string"
                                },
                                "Result": {
                                    "description": "A reason why the account hasn't been processed.",
                                    "type": "string"
                                }
                            },
                            "required": [
                                "AccountId",
                                "Result"
                            ],
                            "type": "object"
                        },
                        "type": "array"
                    }
                },
                "type": "object"
            },
            "StopMonitoringMembersRequest": {
                "description": "StopMonitoringMembers request body.",
                "properties": {
                    "AccountIds": {
                        "description": "A list of account IDs of the GuardDuty member accounts whose findings you want the master account to stop monitoring.",
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "AccountIds"
                ],
                "type": "object"
            },
            "StopMonitoringMembersResponse": {
                "properties": {
                    "UnprocessedAccounts": {
                        "description": "A list of objects containing the unprocessed account and a result string explaining why it was unprocessed.",
                        "items": {
                            "description": "An object containing the unprocessed account and a result string explaining why it was unprocessed.",
                            "properties": {
                                "AccountId": {
                                    "description": "AWS Account ID.",
                                    "type": "string"
                                },
                                "Result": {
                                    "description": "A reason why the account hasn't been processed.",
                                    "type": "string"
                                }
                            },
                            "required": [
                                "AccountId",
                                "Result"
                            ],
                            "type": "object"
                        },
                        "type": "array"
                    }
                },
                "type": "object"
            },
            "Tag": {
                "description": "A tag of the EC2 instance.",
                "properties": {
                    "Key": {
                        "description": "EC2 instance tag key.",
                        "type": "string"
                    },
                    "Value": {
                        "description": "EC2 instance tag value.",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "Tags": {
                "description": "The tags of the EC2 instance.",
                "items": {
                    "description": "A tag of the EC2 instance.",
                    "properties": {
                        "Key": {
                            "description": "EC2 instance tag key.",
                            "type": "string"
                        },
                        "Value": {
                            "description": "EC2 instance tag value.",
                            "type": "string"
                        }
                    },
                    "type": "object"
                },
                "type": "array"
            },
            "ThreatIntelSetFormat": {
                "description": "The format of the threatIntelSet.",
                "enum": [
                    "TXT",
                    "STIX",
                    "OTX_CSV",
                    "ALIEN_VAULT",
                    "PROOF_POINT",
                    "FIRE_EYE"
                ],
                "type": "string"
            },
            "ThreatIntelSetId": {
                "description": "The unique identifier for an threat intel set",
                "type": "string"
            },
            "ThreatIntelSetIds": {
                "description": "The list of the threat intel set IDs",
                "items": {
                    "description": "The unique identifier for an threat intel set",
                    "type": "string"
                },
                "type": "array"
            },
            "ThreatIntelSetStatus": {
                "description": "The status of threatIntelSet file uploaded.",
                "enum": [
                    "INACTIVE",
                    "ACTIVATING",
                    "ACTIVE",
                    "DEACTIVATING",
                    "ERROR",
                    "DELETE_PENDING",
                    "DELETED"
                ],
                "type": "string"
            },
            "UnarchiveFindingsRequest": {
                "description": "UnarchiveFindings request body.",
                "properties": {
                    "FindingIds": {
                        "description": "IDs of the findings that you want to unarchive.",
                        "items": {
                            "description": "The unique identifier for the Finding",
                            "type": "string"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "FindingIds"
                ],
                "type": "object"
            },
            "UnarchiveFindingsResponse": {
                "properties": {},
                "type": "object"
            },
            "UnprocessedAccount": {
                "description": "An object containing the unprocessed account and a result string explaining why it was unprocessed.",
                "properties": {
                    "AccountId": {
                        "description": "AWS Account ID.",
                        "type": "string"
                    },
                    "Result": {
                        "description": "A reason why the account hasn't been processed.",
                        "type": "string"
                    }
                },
                "required": [
                    "AccountId",
                    "Result"
                ],
                "type": "object"
            },
            "UnprocessedAccounts": {
                "description": "A list of objects containing the unprocessed account and a result string explaining why it was unprocessed.",
                "items": {
                    "description": "An object containing the unprocessed account and a result string explaining why it was unprocessed.",
                    "properties": {
                        "AccountId": {
                            "description": "AWS Account ID.",
                            "type": "string"
                        },
                        "Result": {
                            "description": "A reason why the account hasn't been processed.",
                            "type": "string"
                        }
                    },
                    "required": [
                        "AccountId",
                        "Result"
                    ],
                    "type": "object"
                },
                "type": "array"
            },
            "UpdateDetectorRequest": {
                "description": "UpdateDetector request body.",
                "properties": {
                    "Enable": {
                        "description": "Updated boolean value for the detector that specifies whether the detector is enabled.",
                        "type": "boolean"
                    },
                    "FindingPublishingFrequency": {
                        "description": "A enum value that specifies how frequently customer got Finding updates published.",
                        "enum": [
                            "FIFTEEN_MINUTES",
                            "ONE_HOUR",
                            "SIX_HOURS"
                        ],
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "UpdateDetectorResponse": {
                "properties": {},
                "type": "object"
            },
            "UpdateFilterRequest": {
                "description": "UpdateFilterRequest request body.",
                "properties": {
                    "Action": {
                        "description": "Specifies the action that is to be applied to the findings that match the filter.",
                        "enum": [
                            "NOOP",
                            "ARCHIVE"
                        ],
                        "type": "string"
                    },
                    "Description": {
                        "description": "The description of the filter.",
                        "type": "string"
                    },
                    "FindingCriteria": {
                        "description": "Represents the criteria to be used in the filter for querying findings.",
                        "properties": {
                            "Criterion": {
                                "description": "Represents a map of finding properties that match specified conditions and values when querying findings.",
                                "items": {
                                    "properties": {
                                        "key": {
                                            "type": "string"
                                        },
                                        "value": {
                                            "description": "Finding attribute (for example, accountId) for which conditions and values must be specified when querying findings.",
                                            "properties": {
                                                "Eq": {
                                                    "description": "Represents the equal condition to be applied to a single field when querying for findings.",
                                                    "items": {
                                                        "type": "string"
                                                    },
                                                    "type": "array"
                                                },
                                                "Gt": {
                                                    "description": "Represents the greater than condition to be applied to a single field when querying for findings.",
                                                    "type": "integer"
                                                },
                                                "Gte": {
                                                    "description": "Represents the greater than equal condition to be applied to a single field when querying for findings.",
                                                    "type": "integer"
                                                },
                                                "Lt": {
                                                    "description": "Represents the less than condition to be applied to a single field when querying for findings.",
                                                    "type": "integer"
                                                },
                                                "Lte": {
                                                    "description": "Represents the less than equal condition to be applied to a single field when querying for findings.",
                                                    "type": "integer"
                                                },
                                                "Neq": {
                                                    "description": "Represents the not equal condition to be applied to a single field when querying for findings.",
                                                    "items": {
                                                        "type": "string"
                                                    },
                                                    "type": "array"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                },
                                "type": "array"
                            }
                        },
                        "type": "object"
                    },
                    "Rank": {
                        "description": "Specifies the position of the filter in the list of current filters. Also specifies the order in which this filter is applied to the findings.",
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "UpdateFilterResponse": {
                "properties": {
                    "Name": {
                        "description": "The name of the filter.",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "UpdateFindingsFeedbackRequest": {
                "description": "UpdateFindingsFeedback request body.",
                "properties": {
                    "Comments": {
                        "description": "Additional feedback about the GuardDuty findings.",
                        "type": "string"
                    },
                    "Feedback": {
                        "description": "Valid values: USEFUL | NOT_USEFUL",
                        "enum": [
                            "USEFUL",
                            "NOT_USEFUL"
                        ],
                        "type": "string"
                    },
                    "FindingIds": {
                        "description": "IDs of the findings that you want to mark as useful or not useful.",
                        "items": {
                            "description": "The unique identifier for the Finding",
                            "type": "string"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "Feedback",
                    "FindingIds"
                ],
                "type": "object"
            },
            "UpdateFindingsFeedbackResponse": {
                "properties": {},
                "type": "object"
            },
            "UpdateIPSetRequest": {
                "description": "UpdateIPSet request body.",
                "properties": {
                    "Activate": {
                        "description": "The updated boolean value that specifies whether the IPSet is active or not.",
                        "type": "boolean"
                    },
                    "Location": {
                        "description": "The updated URI of the file that contains the IPSet. For example (https://s3.us-west-2.amazonaws.com/my-bucket/my-object-key).",
                        "type": "string"
                    },
                    "Name": {
                        "description": "The unique ID that specifies the IPSet that you want to update.",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "UpdateIPSetResponse": {
                "properties": {},
                "type": "object"
            },
            "UpdateThreatIntelSetRequest": {
                "description": "UpdateThreatIntelSet request body.",
                "properties": {
                    "Activate": {
                        "description": "The updated boolean value that specifies whether the ThreateIntelSet is active or not.",
                        "type": "boolean"
                    },
                    "Location": {
                        "description": "The updated URI of the file that contains the ThreateIntelSet. For example (https://s3.us-west-2.amazonaws.com/my-bucket/my-object-key)",
                        "type": "string"
                    },
                    "Name": {
                        "description": "The unique ID that specifies the ThreatIntelSet that you want to update.",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "UpdateThreatIntelSetResponse": {
                "properties": {},
                "type": "object"
            },
            "UpdatedAt": {
                "description": "The first time a resource was created. The format will be ISO-8601.",
                "type": "string"
            },
            "__boolean": {
                "type": "boolean"
            },
            "__double": {
                "format": "double",
                "type": "number"
            },
            "__integer": {
                "type": "integer"
            },
            "__listOfPortProbeDetail": {
                "items": {
                    "description": "Details about the port probe finding.",
                    "properties": {
                        "LocalPortDetails": {
                            "description": "Local port information of the connection.",
                            "properties": {
                                "Port": {
                                    "description": "Port number of the local connection.",
                                    "type": "integer"
                                },
                                "PortName": {
                                    "description": "Port name of the local connection.",
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "RemoteIpDetails": {
                            "description": "Remote IP information of the connection.",
                            "properties": {
                                "City": {
                                    "description": "City information of the remote IP address.",
                                    "properties": {
                                        "CityName": {
                                            "description": "City name of the remote IP address.",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                },
                                "Country": {
                                    "description": "Country code of the remote IP address.",
                                    "properties": {
                                        "CountryCode": {
                                            "description": "Country code of the remote IP address.",
                                            "type": "string"
                                        },
                                        "CountryName": {
                                            "description": "Country name of the remote IP address.",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                },
                                "GeoLocation": {
                                    "description": "Location information of the remote IP address.",
                                    "properties": {
                                        "Lat": {
                                            "description": "Latitude information of remote IP address.",
                                            "format": "double",
                                            "type": "number"
                                        },
                                        "Lon": {
                                            "description": "Longitude information of remote IP address.",
                                            "format": "double",
                                            "type": "number"
                                        }
                                    },
                                    "type": "object"
                                },
                                "IpAddressV4": {
                                    "description": "IPV4 remote address of the connection.",
                                    "type": "string"
                                },
                                "Organization": {
                                    "description": "ISP Organization information of the remote IP address.",
                                    "properties": {
                                        "Asn": {
                                            "description": "Autonomous system number of the internet provider of the remote IP address.",
                                            "type": "string"
                                        },
                                        "AsnOrg": {
                                            "description": "Organization that registered this ASN.",
                                            "type": "string"
                                        },
                                        "Isp": {
                                            "description": "ISP information for the internet provider.",
                                            "type": "string"
                                        },
                                        "Org": {
                                            "description": "Name of the internet provider.",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "type": "object"
                        }
                    },
                    "type": "object"
                },
                "type": "array"
            },
            "__mapOfCondition": {
                "items": {
                    "properties": {
                        "key": {
                            "type": "string"
                        },
                        "value": {
                            "description": "Finding attribute (for example, accountId) for which conditions and values must be specified when querying findings.",
                            "properties": {
                                "Eq": {
                                    "description": "Represents the equal condition to be applied to a single field when querying for findings.",
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array"
                                },
                                "Gt": {
                                    "description": "Represents the greater than condition to be applied to a single field when querying for findings.",
                                    "type": "integer"
                                },
                                "Gte": {
                                    "description": "Represents the greater than equal condition to be applied to a single field when querying for findings.",
                                    "type": "integer"
                                },
                                "Lt": {
                                    "description": "Represents the less than condition to be applied to a single field when querying for findings.",
                                    "type": "integer"
                                },
                                "Lte": {
                                    "description": "Represents the less than equal condition to be applied to a single field when querying for findings.",
                                    "type": "integer"
                                },
                                "Neq": {
                                    "description": "Represents the not equal condition to be applied to a single field when querying for findings.",
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array"
                                }
                            },
                            "type": "object"
                        }
                    },
                    "type": "object"
                },
                "type": "array"
            },
            "__mapOfCountBySeverityFindingStatistic": {
                "items": {
                    "properties": {
                        "key": {
                            "type": "string"
                        },
                        "value": {
                            "description": "The count of findings for the given severity.",
                            "type": "integer"
                        }
                    },
                    "type": "object"
                },
                "type": "array"
            },
            "__string": {
                "type": "string"
            },
            "__stringMin0Max64": {
                "maxLength": 64,
                "minLength": 0,
                "type": "string"
            }
        },
        "parameters": {
            "Action": {
                "in": "query",
                "name": "Action",
                "required": true,
                "schema": {
                    "type": "string"
                }
            },
            "Version": {
                "in": "query",
                "name": "Version",
                "required": true,
                "schema": {
                    "type": "string"
                }
            },
            "X-Amz-Algorithm": {
                "in": "header",
                "name": "X-Amz-Algorithm",
                "required": false,
                "schema": {
                    "type": "string"
                }
            },
            "X-Amz-Content-Sha256": {
                "in": "header",
                "name": "X-Amz-Content-Sha256",
                "required": false,
                "schema": {
                    "type": "string"
                }
            },
            "X-Amz-Credential": {
                "in": "header",
                "name": "X-Amz-Credential",
                "required": false,
                "schema": {
                    "type": "string"
                }
            },
            "X-Amz-Date": {
                "in": "header",
                "name": "X-Amz-Date",
                "required": false,
                "schema": {
                    "type": "string"
                }
            },
            "X-Amz-Security-Token": {
                "in": "header",
                "name": "X-Amz-Security-Token",
                "required": false,
                "schema": {
                    "type": "string"
                }
            },
            "X-Amz-Signature": {
                "in": "header",
                "name": "X-Amz-Signature",
                "required": false,
                "schema": {
                    "type": "string"
                }
            },
            "X-Amz-SignedHeaders": {
                "in": "header",
                "name": "X-Amz-SignedHeaders",
                "required": false,
                "schema": {
                    "type": "string"
                }
            }
        },
        "requestBodies": {
            "ListDetectorsBody": {
                "content": {
                    "application/json": {
                        "schema": {
                            "properties": {},
                            "type": "object"
                        }
                    }
                },
                "required": true
            }
        },
        "securitySchemes": {
            "hmac": {
                "description": "Amazon Signature authorization v4",
                "in": "header",
                "name": "Authorization",
                "type": "apiKey",
                "x-amazon-apigateway-authtype": "awsSigv4"
            }
        }
    }
}